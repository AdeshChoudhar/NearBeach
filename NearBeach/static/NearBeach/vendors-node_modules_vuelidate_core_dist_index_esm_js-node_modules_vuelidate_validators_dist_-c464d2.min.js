"use strict";
(self["webpackChunknearbeach"] = self["webpackChunknearbeach"] || []).push([["vendors-node_modules_vuelidate_core_dist_index_esm_js-node_modules_vuelidate_validators_dist_-c464d2"],{

/***/ "./node_modules/@vuelidate/core/dist/index.esm.js":
/*!********************************************************!*\
  !*** ./node_modules/@vuelidate/core/dist/index.esm.js ***!
  \********************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "CollectFlag": () => (/* binding */ CollectFlag),
/* harmony export */   "default": () => (/* binding */ useVuelidate),
/* harmony export */   "useVuelidate": () => (/* binding */ useVuelidate)
/* harmony export */ });
/* harmony import */ var vue_demi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-demi */ "./node_modules/@vuelidate/core/node_modules/vue-demi/lib/index.mjs");


function unwrapObj(obj) {
  let ignoreKeys = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];
  return Object.keys(obj).reduce((o, k) => {
    if (ignoreKeys.includes(k)) return o;
    o[k] = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(obj[k]);
    return o;
  }, {});
}
function isFunction(val) {
  return typeof val === 'function';
}
function isProxy(value) {
  return (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.isReactive)(value) || (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.isReadonly)(value);
}

/**
 * Response form a raw Validator function.
 * Should return a Boolean or an object with $invalid property.
 * @typedef {Boolean | { $valid: Boolean }} ValidatorResponse
 */

/**
 * Calls a validation rule by unwrapping its value first from a ref.
 * @param {Validator} rule
 * @param {Ref} value
 * @param {VueInstance} instance
 * @param {Object} siblingState
 * @return {Promise<ValidatorResponse> | ValidatorResponse}
 */

function callRule(rule, value, siblingState, instance) {
  return rule.call(instance, (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(value), (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(siblingState), instance);
}
/**
 * Normalizes the validator result
 * Allows passing a boolean of an object like `{ $valid: Boolean }`
 * @param {ValidatorResponse} result - Validator result
 * @return {boolean}
 */


function normalizeValidatorResponse(result) {
  return result.$valid !== undefined ? !result.$valid : !result;
}
/**
 * Returns the result of an async validator.
 * @param {Validator} rule
 * @param {Ref<*>} model
 * @param {Ref<Boolean>} $pending
 * @param {Ref<Boolean>} $dirty
 * @param {GlobalConfig} config
 * @param {boolean} config.$lazy
 * @param {Ref<*>} $response
 * @param {VueInstance} instance
 * @param {Ref<*>[]} watchTargets
 * @param {Object} siblingState
 * @param {Ref<Boolean>} $lastInvalidState
 * @param {Ref<Number>} $lastCommittedOn
 * @return {{ $invalid: Ref<Boolean>, $unwatch: WatchStopHandle }}
 */


function createAsyncResult(rule, model, $pending, $dirty, _ref, $response, instance) {
  let {
    $lazy,
    $rewardEarly
  } = _ref;
  let watchTargets = arguments.length > 7 && arguments[7] !== undefined ? arguments[7] : [];
  let siblingState = arguments.length > 8 ? arguments[8] : undefined;
  let $lastInvalidState = arguments.length > 9 ? arguments[9] : undefined;
  let $lastCommittedOn = arguments.length > 10 ? arguments[10] : undefined;
  const $invalid = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)(!!$dirty.value);
  const $pendingCounter = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)(0);
  $pending.value = false;
  const $unwatch = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.watch)([model, $dirty].concat(watchTargets, $lastCommittedOn), () => {
    if ( // if $lazy and not dirty, return
    $lazy && !$dirty.value || // if in $rewardEarly mode and no previous errors, nothing pending, return
    $rewardEarly && !$lastInvalidState.value && !$pending.value) {
      return;
    }

    let ruleResult; // make sure we dont break if a validator throws

    try {
      ruleResult = callRule(rule, model, siblingState, instance);
    } catch (err) {
      // convert to a promise, so we can handle it async
      ruleResult = Promise.reject(err);
    }

    $pendingCounter.value++;
    $pending.value = !!$pendingCounter.value; // ensure $invalid is false, while validator is resolving

    $invalid.value = false;
    Promise.resolve(ruleResult).then(data => {
      $pendingCounter.value--;
      $pending.value = !!$pendingCounter.value;
      $response.value = data;
      $invalid.value = normalizeValidatorResponse(data);
    }).catch(error => {
      $pendingCounter.value--;
      $pending.value = !!$pendingCounter.value;
      $response.value = error;
      $invalid.value = true;
    });
  }, {
    immediate: true,
    deep: typeof model === 'object'
  });
  return {
    $invalid,
    $unwatch
  };
}
/**
 * Returns the result of a sync validator
 * @param {Validator} rule
 * @param {Ref<*>} model
 * @param {Ref<Boolean>} $dirty
 * @param {GlobalConfig} config
 * @param {Boolean} config.$lazy
 * @param {Ref<*>} $response
 * @param {VueInstance} instance
 * @param {Object} siblingState
 * @param {Ref<Boolean>} $lastInvalidState
 * @return {{$unwatch: (function(): {}), $invalid: ComputedRef<boolean>}}
 */


function createSyncResult(rule, model, $dirty, _ref2, $response, instance, siblingState, $lastInvalidState) {
  let {
    $lazy,
    $rewardEarly
  } = _ref2;

  const $unwatch = () => ({});

  const $invalid = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    if ( // return early if $lazy mode and not touched
    $lazy && !$dirty.value || // If $rewardEarly mode is ON and last invalid was false (no error), return it.
    // If we want to invalidate, we just flip the last state to true, causing the computed to run again
    $rewardEarly && !$lastInvalidState.value) {
      return false;
    }

    let returnValue = true;

    try {
      const result = callRule(rule, model, siblingState, instance);
      $response.value = result;
      returnValue = normalizeValidatorResponse(result);
    } catch (err) {
      $response.value = err;
    }

    return returnValue;
  });
  return {
    $unwatch,
    $invalid
  };
}
/**
 * Returns the validation result.
 * Detects async and sync validators.
 * @param {NormalizedValidator} rule
 * @param {Ref<*>} model
 * @param {Ref<boolean>} $dirty
 * @param {GlobalConfig} config - Vuelidate config
 * @param {VueInstance} instance - component instance
 * @param {string} validatorName - name of the current validator
 * @param {string} propertyKey - the current property we are validating
 * @param {string} propertyPath - the deep path to the validated property
 * @param {Object} siblingState
 * @param {Ref<Boolean>} $lastInvalidState - the last invalid state
 * @param {Ref<Number>} $lastCommittedOn - the last time $commit was called
 * @return {{ $params: *, $message: Ref<String>, $pending: Ref<Boolean>, $invalid: Ref<Boolean>, $response: Ref<*>, $unwatch: WatchStopHandle }}
 */


function createValidatorResult(rule, model, $dirty, config, instance, validatorName, propertyKey, propertyPath, siblingState, $lastInvalidState, $lastCommittedOn) {
  const $pending = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)(false);
  const $params = rule.$params || {};
  const $response = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)(null);
  let $invalid;
  let $unwatch;

  if (rule.$async) {
    ({
      $invalid,
      $unwatch
    } = createAsyncResult(rule.$validator, model, $pending, $dirty, config, $response, instance, rule.$watchTargets, siblingState, $lastInvalidState, $lastCommittedOn));
  } else {
    ({
      $invalid,
      $unwatch
    } = createSyncResult(rule.$validator, model, $dirty, config, $response, instance, siblingState, $lastInvalidState));
  }

  const message = rule.$message;
  const $message = isFunction(message) ? (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => message(unwrapObj({
    $pending,
    $invalid,
    $params: unwrapObj($params),
    // $params can hold refs, so we unwrap them for easy access
    $model: model,
    $response,
    $validator: validatorName,
    $propertyPath: propertyPath,
    $property: propertyKey
  }))) : message || '';
  return {
    $message,
    $params,
    $pending,
    $invalid,
    $response,
    $unwatch
  };
}

/**
 * Sorts a validation definition into rules, configs and nested validators.
 * @param {Object<NormalizedValidator|Function>} validationsRaw
 * @return {{ rules: Object<NormalizedValidator>, nestedValidators: Object, config: GlobalConfig }}
 */

function sortValidations() {
  let validationsRaw = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};
  const validations = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(validationsRaw);
  const validationKeys = Object.keys(validations);
  const rules = {};
  const nestedValidators = {};
  const config = {};
  validationKeys.forEach(key => {
    const v = validations[key];

    switch (true) {
      // If it is already normalized, use it
      case isFunction(v.$validator):
        rules[key] = v;
        break;
      // If it is just a function, normalize it first
      // into { $validator: <Fun> }

      case isFunction(v):
        rules[key] = {
          $validator: v
        };
        break;
      // Catch $-prefixed properties as config

      case key.startsWith('$'):
        config[key] = v;
        break;
      // If it doesnâ€™t match any of the above,
      // treat as nestedValidators state property

      default:
        nestedValidators[key] = v;
    }
  });
  return {
    rules,
    nestedValidators,
    config
  };
}

function _empty() {}

const ROOT_PATH = '__root';
/** @typedef {import('vue-demi').ComponentPublicInstance} VueInstance */

/** @typedef {import('vue-demi').ComputedRef} ComputedRef */

/** @typedef {import('vue-demi').UnwrapRef} UnwrapRef */

/** @typedef {import('vue-demi').WatchStopHandle} WatchStopHandle */

/** @typedef {import('vue-demi').WritableComputedRef} WritableComputedRef */

/** @typedef {import('vue-demi').UnwrapNestedRefs} UnwrapNestedRefs */

/**
 * @typedef NormalizedValidator
 * @property {Validator} $validator
 * @property {String | Ref<String> | function(*): string} [$message]
 * @property {Object | Ref<Object>} [$params]
 * @property {Object | Ref<Object>} [$async]
 * @property {Ref<*>[]} [$watchTargets]
 */

/**
 * Raw validator function, before being normalized
 * Can return a Promise or a {@see ValidatorResponse}
 * @typedef {function(*): ((Promise<ValidatorResponse> | ValidatorResponse))} Validator
 */

/**
 * @typedef ErrorObject
 * @property {Ref<String>} $message - Reactive error message
 * @property {Ref<Object>} $params - Params passed from withParams
 * @property {Ref<Boolean>} $pending - If validation is pending
 * @property {String} $property - State key
 * @property {String} $propertyPath - Dot notation path to state
 * @property {String} $validator - Validator name
 * @property {String} $uid - Unique identifier
 */

/**
 * @typedef ValidationResult
 * @property {Ref<Boolean>} $pending
 * @property {Ref<Boolean>} $dirty
 * @property {Ref<Boolean>} $invalid
 * @property {Ref<Boolean>} $error
 * @property {Ref<String>} $path
 * @property {Function} $touch
 * @property {Function} $reset
 * @property {ComputedRef<ErrorObject[]>} $errors
 * @property {ComputedRef<ErrorObject[]>} $silentErrors
 * @property {Function} $commit
 */

/**
 * Creates the main Validation Results object for a state tree
 * Walks the tree's top level branches
 * @param {Object<NormalizedValidator>} rules - Rules for the current state tree
 * @param {Object} model - Current state value
 * @param {String} key - Key for the current state tree
 * @param {ResultsStorage} [resultsCache] - A cache map of all the validators
 * @param {String} [path] - the current property path
 * @param {GlobalConfig} [config] - the config object
 * @param {VueInstance} instance
 * @param {ComputedRef<Object>} externalResults
 * @param {Object} siblingState
 * @return {ValidationResult | {}}
 */

function _call(body, then, direct) {
  if (direct) {
    return then ? then(body()) : body();
  }

  try {
    var result = Promise.resolve(body());
    return then ? result.then(then) : result;
  } catch (e) {
    return Promise.reject(e);
  }
}
/**
 * Collects the validation results of all nested state properties
 * @param {Object<NormalizedValidator|Function>} validations - The validation
 * @param {Object} nestedState - Current state
 * @param {String} path - Path to current property
 * @param {ResultsStorage} resultsCache - Validations cache map
 * @param {GlobalConfig} config - The config object
 * @param {VueInstance} instance - The current Vue instance
 * @param {ComputedRef<object>} nestedExternalResults - The external results for this nested collection
 * @return {Object<string, VuelidateState>}
 */


function _callIgnored(body, direct) {
  return _call(body, _empty, direct);
}

function _invoke(body, then) {
  var result = body();

  if (result && result.then) {
    return result.then(then);
  }

  return then(result);
}

function _async(f) {
  return function () {
    for (var args = [], i = 0; i < arguments.length; i++) {
      args[i] = arguments[i];
    }

    try {
      return Promise.resolve(f.apply(this, args));
    } catch (e) {
      return Promise.reject(e);
    }
  };
}

function createValidationResults(rules, model, key, resultsCache, path, config, instance, externalResults, siblingState) {
  // collect the property keys
  const ruleKeys = Object.keys(rules);
  const cachedResult = resultsCache.get(path, rules);
  const $dirty = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)(false); // state for the $rewardEarly option

  /** The last invalid state of this property */

  const $lastInvalidState = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)(false);
  /** The last time $commit was called. Used to re-trigger async calls */

  const $lastCommittedOn = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)(0);

  if (cachedResult) {
    // if the rules are the same as before, use the cached results
    if (!cachedResult.$partial) return cachedResult; // remove old watchers

    cachedResult.$unwatch(); // use the `$dirty.value`, so we dont save references by accident

    $dirty.value = cachedResult.$dirty.value;
  }

  const result = {
    // restore $dirty from cache
    $dirty,
    $path: path,
    $touch: () => {
      if (!$dirty.value) $dirty.value = true;
    },
    $reset: () => {
      if ($dirty.value) $dirty.value = false;
    },
    $commit: () => {}
  };
  /**
   * If there are no validation rules, it is most likely
   * a top level state, aka root
   */

  if (!ruleKeys.length) {
    // if there are cached results, we should overwrite them with the new ones
    cachedResult && resultsCache.set(path, rules, result);
    return result;
  }

  ruleKeys.forEach(ruleKey => {
    result[ruleKey] = createValidatorResult(rules[ruleKey], model, result.$dirty, config, instance, ruleKey, key, path, siblingState, $lastInvalidState, $lastCommittedOn);
  });
  result.$externalResults = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    if (!externalResults.value) return [];
    return [].concat(externalResults.value).map((stringError, index) => ({
      $propertyPath: path,
      $property: key,
      $validator: '$externalResults',
      $uid: `${path}-externalResult-${index}`,
      $message: stringError,
      $params: {},
      $response: null,
      $pending: false
    }));
  });
  result.$invalid = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    const r = ruleKeys.some(ruleKey => (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(result[ruleKey].$invalid)); // cache the last invalid state

    $lastInvalidState.value = r;
    return !!result.$externalResults.value.length || r;
  });
  result.$pending = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => ruleKeys.some(ruleKey => (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(result[ruleKey].$pending)));
  result.$error = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => result.$dirty.value ? result.$pending.value || result.$invalid.value : false);
  result.$silentErrors = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => ruleKeys.filter(ruleKey => (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(result[ruleKey].$invalid)).map(ruleKey => {
    const res = result[ruleKey];
    return (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.reactive)({
      $propertyPath: path,
      $property: key,
      $validator: ruleKey,
      $uid: `${path}-${ruleKey}`,
      $message: res.$message,
      $params: res.$params,
      $response: res.$response,
      $pending: res.$pending
    });
  }).concat(result.$externalResults.value));
  result.$errors = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => result.$dirty.value ? result.$silentErrors.value : []);

  result.$unwatch = () => ruleKeys.forEach(ruleKey => {
    result[ruleKey].$unwatch();
  });

  result.$commit = () => {
    $lastInvalidState.value = true;
    $lastCommittedOn.value = Date.now();
  };

  resultsCache.set(path, rules, result);
  return result;
}

function collectNestedValidationResults(validations, nestedState, path, resultsCache, config, instance, nestedExternalResults) {
  const nestedValidationKeys = Object.keys(validations); // if we have no state, return empty object

  if (!nestedValidationKeys.length) return {};
  return nestedValidationKeys.reduce((results, nestedKey) => {
    // build validation results for nested state
    results[nestedKey] = setValidations({
      validations: validations[nestedKey],
      state: nestedState,
      key: nestedKey,
      parentKey: path,
      resultsCache,
      globalConfig: config,
      instance,
      externalResults: nestedExternalResults
    });
    return results;
  }, {});
}
/**
 * Generates the Meta fields from the results
 * @param {ValidationResult|{}} results
 * @param {Object.<string, VuelidateState>} nestedResults
 * @param {Object.<string, ValidationResult>} childResults
 * @return {{$anyDirty: Ref<Boolean>, $error: Ref<Boolean>, $invalid: Ref<Boolean>, $errors: Ref<ErrorObject[]>, $dirty: Ref<Boolean>, $touch: Function, $reset: Function }}
 */


function createMetaFields(results, nestedResults, childResults) {
  const allResults = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => [nestedResults, childResults].filter(res => res).reduce((allRes, res) => {
    return allRes.concat(Object.values((0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(res)));
  }, [])); // returns `$dirty` as true, if all children are dirty

  const $dirty = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)({
    get() {
      return results.$dirty.value || (allResults.value.length ? allResults.value.every(r => r.$dirty) : false);
    },

    set(v) {
      results.$dirty.value = v;
    }

  });
  const $silentErrors = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    // current state level errors, fallback to empty array if root
    const modelErrors = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(results.$silentErrors) || []; // collect all nested and child $silentErrors

    const nestedErrors = allResults.value.filter(result => ((0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(result).$silentErrors || []).length).reduce((errors, result) => {
      return errors.concat(...result.$silentErrors);
    }, []); // merge the $silentErrors

    return modelErrors.concat(nestedErrors);
  });
  const $errors = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    // current state level errors, fallback to empty array if root
    const modelErrors = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(results.$errors) || []; // collect all nested and child $errors

    const nestedErrors = allResults.value.filter(result => ((0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(result).$errors || []).length).reduce((errors, result) => {
      return errors.concat(...result.$errors);
    }, []); // merge the $errors

    return modelErrors.concat(nestedErrors);
  });
  const $invalid = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => // if any of the nested values is invalid
  allResults.value.some(r => r.$invalid) || // or if the current state is invalid
  (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(results.$invalid) || // fallback to false if is root
  false);
  const $pending = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => // if any of the nested values is pending
  allResults.value.some(r => (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(r.$pending)) || // if any of the current state validators is pending
  (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(results.$pending) || // fallback to false if is root
  false);
  const $anyDirty = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => allResults.value.some(r => r.$dirty) || allResults.value.some(r => r.$anyDirty) || $dirty.value);
  const $error = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => $dirty.value ? $pending.value || $invalid.value : false);

  const $touch = () => {
    // call the root $touch
    results.$touch(); // call all nested level $touch

    allResults.value.forEach(result => {
      result.$touch();
    });
  };

  const $commit = () => {
    // call the root $touch
    results.$commit(); // call all nested level $touch

    allResults.value.forEach(result => {
      result.$commit();
    });
  };

  const $reset = () => {
    // reset the root $dirty state
    results.$reset(); // reset all the children $dirty states

    allResults.value.forEach(result => {
      result.$reset();
    });
  }; // Ensure that if all child and nested results are $dirty, this also becomes $dirty


  if (allResults.value.length && allResults.value.every(nr => nr.$dirty)) $touch();
  return {
    $dirty,
    $errors,
    $invalid,
    $anyDirty,
    $error,
    $pending,
    $touch,
    $reset,
    $silentErrors,
    $commit
  };
}
/**
 * @typedef VuelidateState
 * @property {WritableComputedRef<any>} $model
 * @property {ComputedRef<Boolean>} $dirty
 * @property {ComputedRef<Boolean>} $error
 * @property {ComputedRef<ErrorObject[]>} $errors
 * @property {ComputedRef<Boolean>} $invalid
 * @property {ComputedRef<Boolean>} $anyDirty
 * @property {ComputedRef<Boolean>} $pending
 * @property {Function} $touch
 * @property {Function} $reset
 * @property {String} $path
 * @property {ComputedRef<ErrorObject[]>} $silentErrors
 * @property {Function} [$validate]
 * @property {Function} [$getResultsForChild]
 * @property {Object.<string, VuelidateState>}
 */

/**
 * Main Vuelidate bootstrap function.
 * Used both for Composition API in `setup` and for Global App usage.
 * Used to collect validation state, when walking recursively down the state tree
 * @param {Object} params
 * @param {Object<NormalizedValidator|Function>} params.validations
 * @param {Object} params.state
 * @param {String} [params.key] - Current state property key. Used when being called on nested items
 * @param {String} [params.parentKey] - Parent state property key. Used when being called recursively
 * @param {Object<string, ValidationResult>} [params.childResults] - Used to collect child results.
 * @param {ResultsStorage} params.resultsCache - The cached validation results
 * @param {VueInstance} params.instance - The current Vue instance
 * @param {GlobalConfig} params.globalConfig - The validation config, passed to this setValidations instance.
 * @param {UnwrapNestedRefs<object> | Ref<Object>} params.externalResults - External validation results
 * @return {UnwrapNestedRefs<VuelidateState>}
 */


function setValidations(_ref) {
  /**
   * Executes the validators and returns the result.
   * @return {Promise<boolean>}
   */
  const $validate = _async(function () {
    if (!$dirty.value) $touch();
    return _invoke(function () {
      if (mergedConfig.$rewardEarly) {
        $commit(); // await the watchers

        return _callIgnored(vue_demi__WEBPACK_IMPORTED_MODULE_0__.nextTick);
      }
    }, function () {
      // await the watchers
      return _call(vue_demi__WEBPACK_IMPORTED_MODULE_0__.nextTick, function () {
        return new Promise(resolve => {
          // return whether it is valid or not
          if (!$pending.value) return resolve(!$invalid.value);
          const unwatch = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.watch)($pending, () => {
            resolve(!$invalid.value);
            unwatch();
          });
        });
      });
    });
  });
  /**
   * Returns a child component's results, based on registration name
   * @param {string} key
   * @return {VuelidateState}
   */


  let {
    validations,
    state,
    key,
    parentKey,
    childResults,
    resultsCache,
    globalConfig = {},
    instance,
    externalResults
  } = _ref;
  const path = parentKey ? `${parentKey}.${key}` : key; // Sort out the validation object into:
  // â€“ rules = validators for current state tree fragment
  // â€” nestedValidators = nested state fragments keys that might contain more validators
  // â€“ config = configuration properties that affect this state fragment

  const {
    rules,
    nestedValidators,
    config
  } = sortValidations(validations);
  const mergedConfig = Object.assign({}, globalConfig, config); // create protected state for cases when the state branch does not exist yet.
  // This protects when using the OptionsAPI as the data is bound after the setup method

  const nestedState = key ? (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    const s = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(state);
    return s ? (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(s[key]) : undefined;
  }) : state; // cache the external results, so we can revert back to them

  const cachedExternalResults = Object.assign({}, (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(externalResults) || {});
  const nestedExternalResults = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    const results = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(externalResults);
    if (!key) return results;
    return results ? (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(results[key]) : undefined;
  }); // Use rules for the current state fragment and validate it

  const results = createValidationResults(rules, nestedState, key, resultsCache, path, mergedConfig, instance, nestedExternalResults, state); // Use nested keys to repeat the process
  // *WARN*: This is recursive

  const nestedResults = collectNestedValidationResults(nestedValidators, nestedState, path, resultsCache, mergedConfig, instance, nestedExternalResults); // Collect and merge this level validation results
  // with all nested validation results

  const {
    $dirty,
    $errors,
    $invalid,
    $anyDirty,
    $error,
    $pending,
    $touch,
    $reset,
    $silentErrors,
    $commit
  } = createMetaFields(results, nestedResults, childResults);
  /**
   * If we have no `key`, this is the top level state
   * We dont need `$model` there.
   */

  const $model = key ? (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)({
    get: () => (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(nestedState),
    set: val => {
      $dirty.value = true;
      const s = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(state);
      const external = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(externalResults);

      if (external) {
        external[key] = cachedExternalResults[key];
      }

      if ((0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.isRef)(s[key])) {
        s[key].value = val;
      } else {
        s[key] = val;
      }
    }
  }) : null;

  if (key && mergedConfig.$autoDirty) {
    (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.watch)(nestedState, () => {
      if (!$dirty.value) $touch();
      const external = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(externalResults);

      if (external) {
        external[key] = cachedExternalResults[key];
      }
    }, {
      flush: 'sync'
    });
  }

  function $getResultsForChild(key) {
    return (childResults.value || {})[key];
  }

  function $clearExternalResults() {
    if ((0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.isRef)(externalResults)) {
      externalResults.value = cachedExternalResults;
    } else {
      // if the external results state was empty, we need to delete every property, one by one
      if (Object.keys(cachedExternalResults).length === 0) {
        Object.keys(externalResults).forEach(k => {
          delete externalResults[k];
        });
      } else {
        // state was not empty, so we just assign it back into the current state
        Object.assign(externalResults, cachedExternalResults);
      }
    }
  }

  return (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.reactive)(Object.assign({}, results, {
    // NOTE: The order here is very important, since we want to override
    // some of the *results* meta fields with the collective version of it
    // that includes the results of nested state validation results
    $model,
    $dirty,
    $error,
    $errors,
    $invalid,
    $anyDirty,
    $pending,
    $touch,
    $reset,
    $path: path || ROOT_PATH,
    $silentErrors,
    $validate,
    $commit
  }, childResults && {
    $getResultsForChild,
    $clearExternalResults
  }, nestedResults));
}

class ResultsStorage {
  constructor() {
    this.storage = new Map();
  }
  /**
   * Stores a validation result, and its rules by its path
   * @param {String} path
   * @param {Object<NormalizedValidator>} rules
   * @param {ValidationResult} result
   */


  set(path, rules, result) {
    this.storage.set(path, {
      rules,
      result
    });
  }
  /**
   * Check if the stored `results` for the provided `path` have the same `rules` compared to 'storedRules'
   * @param {String} path
   * @param {Object<NormalizedValidator>} rules
   * @param {Object<NormalizedValidator>} storedRules
   * @return {Boolean}
   */


  checkRulesValidity(path, rules, storedRules) {
    const storedRulesKeys = Object.keys(storedRules);
    const newRulesKeys = Object.keys(rules);
    if (newRulesKeys.length !== storedRulesKeys.length) return false;
    const hasAllValidators = newRulesKeys.every(ruleKey => storedRulesKeys.includes(ruleKey));
    if (!hasAllValidators) return false;
    return newRulesKeys.every(ruleKey => {
      if (!rules[ruleKey].$params) return true;
      return Object.keys(rules[ruleKey].$params).every(paramKey => {
        // make sure to unwrap before comparing
        return (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(storedRules[ruleKey].$params[paramKey]) === (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(rules[ruleKey].$params[paramKey]);
      });
    });
  }
  /**
   * Returns the matched result if catche is valid
   * @param {String} path
   * @param {Object<NormalizedValidator>} rules
   * @return {{$partial: boolean, $dirty: Ref<Boolean>, $unwatch: function}|undefined|ValidationResult}
   */


  get(path, rules) {
    const storedRuleResultPair = this.storage.get(path);
    if (!storedRuleResultPair) return undefined;
    const {
      rules: storedRules,
      result
    } = storedRuleResultPair;
    const isValidCache = this.checkRulesValidity(path, rules, storedRules);
    const $unwatch = result.$unwatch ? result.$unwatch : () => ({});
    if (!isValidCache) return {
      $dirty: result.$dirty,
      $partial: true,
      $unwatch
    };
    return result;
  }

}

const CollectFlag = {
  COLLECT_ALL: true,
  COLLECT_NONE: false
};
const VuelidateInjectChildResults = Symbol('vuelidate#injectChiildResults');
const VuelidateRemoveChildResults = Symbol('vuelidate#removeChiildResults');
/**
 * Create helpers to collect validation state from child components
 * @param {Object} params
 * @param {String | Number | Boolean} params.$scope - Parent component scope
 * @return {{sendValidationResultsToParent: function[], childResults: ComputedRef<Object>, removeValidationResultsFromParent: function[]}}
 */

function nestedValidations(_ref) {
  let {
    $scope,
    instance
  } = _ref;
  const childResultsRaw = {};
  const childResultsKeys = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)([]);
  const childResults = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => childResultsKeys.value.reduce((results, key) => {
    results[key] = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(childResultsRaw[key]);
    return results;
  }, {}));
  /**
   * Allows children to send validation data up to their parent.
   * @param {Object} results - the results
   * @param {Object} args
   * @param {String} args.$registerAs - the $registeredAs key
   * @param {String | Number | Boolean} args.$scope - the $scope key
   */

  function injectChildResultsIntoParent(results, _ref2) {
    let {
      $registerAs: key,
      $scope: childScope,
      $stopPropagation
    } = _ref2;
    if ($stopPropagation || $scope === CollectFlag.COLLECT_NONE || childScope === CollectFlag.COLLECT_NONE || $scope !== CollectFlag.COLLECT_ALL && $scope !== childScope) return;
    childResultsRaw[key] = results;
    childResultsKeys.value.push(key);
  } // combine with other `injectChildResultsIntoParent` from vuelidate instances in this Vue component instance


  instance.__vuelidateInjectInstances = [].concat(instance.__vuelidateInjectInstances || [], injectChildResultsIntoParent);
  /**
   * Allows children to remove the validation data from their parent, before getting destroyed.
   * @param {String} key - the registeredAs key
   */

  function removeChildResultsFromParent(key) {
    // remove the key
    childResultsKeys.value = childResultsKeys.value.filter(childKey => childKey !== key); // remove the stored data for the key

    delete childResultsRaw[key];
  } // combine with other `removeChildResultsFromParent` from vuelidate instances in this Vue component instance


  instance.__vuelidateRemoveInstances = [].concat(instance.__vuelidateRemoveInstances || [], removeChildResultsFromParent); // inject the `injectChildResultsIntoParent` method, into the current scope

  const sendValidationResultsToParent = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.inject)(VuelidateInjectChildResults, []); // provide to all of its children the send results to parent function

  (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.provide)(VuelidateInjectChildResults, instance.__vuelidateInjectInstances);
  const removeValidationResultsFromParent = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.inject)(VuelidateRemoveChildResults, []); // provide to all of its children the remove results  function

  (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.provide)(VuelidateRemoveChildResults, instance.__vuelidateRemoveInstances);
  return {
    childResults,
    sendValidationResultsToParent,
    removeValidationResultsFromParent
  };
}

/**
 * Helper proxy for instance property access. It makes every reference
 * reactive for the validation function
 * @param target
 * @return {*|ComputedRef<*>}
 */

function ComputedProxyFactory(target) {
  return new Proxy(target, {
    get(target, prop) {
      return typeof target[prop] === 'object' ? ComputedProxyFactory(target[prop]) : (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => target[prop]);
    }

  });
}

/**
 * @typedef GlobalConfig
 * @property {String} [$registerAs] - Config Object
 * @property {String | Number | Symbol} [$scope] - A scope to limit child component registration
 * @property {Boolean} [$stopPropagation] - Tells a Vue component to stop sending its results up to the parent
 * @property {Ref<Object>} [$externalResults] - External error messages, like from server validation.
 * @property {Boolean} [$autoDirty] - Should the form watch for state changed, and automatically set `$dirty` to true.
 * @property {Boolean} [$lazy] - Should the validations be lazy, and run only after they are dirty
 * @property {Boolean} [$rewardEarly] - Once valid, re-runs property validators only on manual calls of $commit
 */

/**
 * Composition API compatible Vuelidate
 * Use inside the `setup` lifecycle hook
 * @param {Object | GlobalConfig} [validations] - Validations Object or the globalConfig.
 * @param {Object} [state] - State object - required if `validations` is a validation object.
 * @param {GlobalConfig} [globalConfig] - Config Object
 * @return {ComputedRef<*>}
 */

function useVuelidate(validations, state) {
  let globalConfig = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {};

  // if we pass only one argument, its most probably the globalConfig.
  // This use case is so parents can just collect results of child forms.
  if (arguments.length === 1) {
    globalConfig = validations;
    validations = undefined;
    state = undefined;
  }

  let {
    $registerAs,
    $scope = CollectFlag.COLLECT_ALL,
    $stopPropagation,
    $externalResults,
    currentVueInstance
  } = globalConfig;
  const instance = currentVueInstance || (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance)();
  const componentOptions = instance ? vue_demi__WEBPACK_IMPORTED_MODULE_0__.isVue3 ? instance.type : instance.proxy.$options : {}; // if there is no registration name, add one.

  if (!$registerAs && instance) {
    // NOTE:
    // ._uid // Vue 2.x Composition-API plugin
    // .uid // Vue 3.0
    const uid = instance.uid || instance._uid;
    $registerAs = `_vuelidate_${uid}`;
  }

  const validationResults = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)({});
  const resultsCache = new ResultsStorage();
  const {
    childResults,
    sendValidationResultsToParent,
    removeValidationResultsFromParent
  } = instance ? nestedValidations({
    $scope,
    instance
  }) : {
    childResults: (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)({})
  }; // Options API

  if (!validations && componentOptions.validations) {
    const rules = componentOptions.validations;
    state = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.ref)({});
    (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.onBeforeMount)(() => {
      // Delay binding state to validations defined with the Options API until mounting, when the data
      // has been attached to the component instance. From that point on it will be reactive.
      state.value = instance.proxy;
      (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.watch)(() => isFunction(rules) ? rules.call(state.value, new ComputedProxyFactory(state.value)) : rules, validations => {
        validationResults.value = setValidations({
          validations,
          state,
          childResults,
          resultsCache,
          globalConfig,
          instance: instance.proxy,
          externalResults: $externalResults || instance.proxy.vuelidateExternalResults
        });
      }, {
        immediate: true
      });
    });
    globalConfig = componentOptions.validationsConfig || globalConfig;
  } else {
    const validationsWatchTarget = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.isRef)(validations) || isProxy(validations) ? validations // wrap plain objects in a reactive, so we can track changes if they have computed in them.
    : (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.reactive)(validations || {});
    (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.watch)(validationsWatchTarget, newValidationRules => {
      validationResults.value = setValidations({
        validations: newValidationRules,
        state,
        childResults,
        resultsCache,
        globalConfig,
        instance: instance ? instance.proxy : {},
        externalResults: $externalResults
      });
    }, {
      immediate: true
    });
  }

  if (instance) {
    // send all the data to the parent when the function is invoked inside setup.
    sendValidationResultsToParent.forEach(f => f(validationResults, {
      $registerAs,
      $scope,
      $stopPropagation
    })); // before this component is destroyed, remove all the data from the parent.

    (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.onBeforeUnmount)(() => removeValidationResultsFromParent.forEach(f => f($registerAs)));
  }

  return (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.computed)(() => {
    return Object.assign({}, (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(validationResults.value), childResults.value);
  });
}




/***/ }),

/***/ "./node_modules/@vuelidate/validators/dist/index.esm.js":
/*!**************************************************************!*\
  !*** ./node_modules/@vuelidate/validators/dist/index.esm.js ***!
  \**************************************************************/
/***/ ((__unused_webpack_module, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "alpha": () => (/* binding */ alpha),
/* harmony export */   "alphaNum": () => (/* binding */ alphaNum),
/* harmony export */   "and": () => (/* binding */ and),
/* harmony export */   "between": () => (/* binding */ between),
/* harmony export */   "createI18nMessage": () => (/* binding */ createI18nMessage),
/* harmony export */   "decimal": () => (/* binding */ decimal),
/* harmony export */   "email": () => (/* binding */ email),
/* harmony export */   "helpers": () => (/* binding */ common),
/* harmony export */   "integer": () => (/* binding */ integer),
/* harmony export */   "ipAddress": () => (/* binding */ ipAddress),
/* harmony export */   "macAddress": () => (/* binding */ macAddress),
/* harmony export */   "maxLength": () => (/* binding */ maxLength),
/* harmony export */   "maxValue": () => (/* binding */ maxValue),
/* harmony export */   "minLength": () => (/* binding */ minLength),
/* harmony export */   "minValue": () => (/* binding */ minValue),
/* harmony export */   "not": () => (/* binding */ not),
/* harmony export */   "numeric": () => (/* binding */ numeric),
/* harmony export */   "or": () => (/* binding */ or),
/* harmony export */   "required": () => (/* binding */ required),
/* harmony export */   "requiredIf": () => (/* binding */ requiredIf),
/* harmony export */   "requiredUnless": () => (/* binding */ requiredUnless),
/* harmony export */   "sameAs": () => (/* binding */ sameAs),
/* harmony export */   "url": () => (/* binding */ url)
/* harmony export */ });
/* harmony import */ var vue_demi__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue-demi */ "./node_modules/@vuelidate/validators/node_modules/vue-demi/lib/index.mjs");


function isFunction(val) {
  return typeof val === 'function';
}
function isObject(o) {
  return o !== null && typeof o === 'object' && !Array.isArray(o);
}
/**
 * Returns a standard ValidatorObject
 * Wraps a plain function into a ValidatorObject
 * @param {NormalizedValidator|Function} validator
 * @return {NormalizedValidator}
 */

function normalizeValidatorObject(validator) {
  return isFunction(validator.$validator) ? Object.assign({}, validator) : {
    $validator: validator
  };
}
function isPromise(object) {
  return isObject(object) && isFunction(object.then);
}
/**
 * Unwraps a ValidatorResponse object, into a boolean.
 * @param {ValidatorResponse} result
 * @return {boolean}
 */

function unwrapValidatorResponse(result) {
  if (typeof result === 'object') return result.$valid;
  return result;
}
/**
 * Unwraps a `NormalizedValidator` object, returning its validator function.
 * @param {NormalizedValidator | Function} validator
 * @return {function}
 */

function unwrapNormalizedValidator(validator) {
  return validator.$validator || validator;
}

/**
 * Allows attaching parameters to a validator
 * @param {Object} $params
 * @param {NormalizedValidator|Function} $validator
 * @return {NormalizedValidator}
 */

function withParams($params, $validator) {
  if (!isObject($params)) throw new Error(`[@vuelidate/validators]: First parameter to "withParams" should be an object, provided ${typeof $params}`);
  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);
  const validatorObj = normalizeValidatorObject($validator);
  validatorObj.$params = Object.assign({}, validatorObj.$params || {}, $params);
  return validatorObj;
}

/**
 * @callback MessageCallback
 * @param {Object} params
 * @return String
 */

/**
 * Attaches a message to a validator
 * @param {MessageCallback | String} $message
 * @param {NormalizedValidator|Function} $validator
 * @return {NormalizedValidator}
 */

function withMessage($message, $validator) {
  if (!isFunction($message) && typeof (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)($message) !== 'string') throw new Error(`[@vuelidate/validators]: First parameter to "withMessage" should be string or a function returning a string, provided ${typeof $message}`);
  if (!isObject($validator) && !isFunction($validator)) throw new Error(`[@vuelidate/validators]: Validator must be a function or object with $validator parameter`);
  const validatorObj = normalizeValidatorObject($validator);
  validatorObj.$message = $message;
  return validatorObj;
}

/**
 * @typedef {function(*): Promise<boolean|ValidatorResponse>} asyncValidator
 */

/**
 * @typedef {Ref<*>[]|function(*): *} watchTargets
 */

/**
 * Wraps validators that returns a Promise.
 * @param {asyncValidator} $validator
 * @param {watchTargets} $watchTargets
 * @return {{$async: boolean, $validator: asyncValidator, $watchTargets: watchTargets}}
 */

function withAsync($validator, $watchTargets = []) {
  const validatorObj = normalizeValidatorObject($validator);
  return Object.assign({}, validatorObj, {
    $async: true,
    $watchTargets
  });
}

function forEach(validators) {
  return {
    $validator(collection, ...others) {
      // go over the collection. It can be a ref as well.
      return (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(collection).reduce((previous, collectionItem) => {
        // go over each property
        const collectionEntryResult = Object.entries(collectionItem).reduce((all, [property, $model]) => {
          // get the validators for this property
          const innerValidators = validators[property] || {}; // go over each validator and run it

          const propertyResult = Object.entries(innerValidators).reduce((all, [validatorName, currentValidator]) => {
            // extract the validator. Supports simple and extended validators.
            const validatorFunction = unwrapNormalizedValidator(currentValidator); // Call the validator, passing the VM as this, the value, current iterated object and the rest.

            const $response = validatorFunction.call(this, $model, collectionItem, ...others); // extract the valid from the result

            const $valid = unwrapValidatorResponse($response); // store the entire response for later

            all.$data[validatorName] = $response;
            all.$data.$invalid = !$valid || !!all.$data.$invalid;
            all.$data.$error = all.$data.$invalid; // if not valid, get the $message

            if (!$valid) {
              let $message = currentValidator.$message || '';
              const $params = currentValidator.$params || {}; // If $message is a function, we call it with the appropriate parameters

              if (typeof $message === 'function') {
                $message = $message({
                  $pending: false,
                  $invalid: !$valid,
                  $params,
                  $model,
                  $response
                });
              } // save the error object


              all.$errors.push({
                $property: property,
                $message,
                $params,
                $response,
                $model,
                $pending: false,
                $validator: validatorName
              });
            }

            return {
              $valid: all.$valid && $valid,
              $data: all.$data,
              $errors: all.$errors
            };
          }, {
            $valid: true,
            $data: {},
            $errors: []
          });
          all.$data[property] = propertyResult.$data;
          all.$errors[property] = propertyResult.$errors;
          return {
            $valid: all.$valid && propertyResult.$valid,
            $data: all.$data,
            $errors: all.$errors
          };
        }, {
          $valid: true,
          $data: {},
          $errors: {}
        });
        return {
          $valid: previous.$valid && collectionEntryResult.$valid,
          $data: previous.$data.concat(collectionEntryResult.$data),
          $errors: previous.$errors.concat(collectionEntryResult.$errors)
        };
      }, {
        $valid: true,
        $data: [],
        $errors: []
      });
    },

    // collect all the validation errors into a 2 dimensional array, for each entry in the collection, you have an array of error messages.
    $message: ({
      $response
    }) => $response ? $response.$errors.map(context => {
      return Object.values(context).map(errors => errors.map(error => error.$message)).reduce((a, b) => a.concat(b), []);
    }) : []
  };
}

// "required" core, used in almost every validator to allow empty values
const req = value => {
  value = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(value);
  if (Array.isArray(value)) return !!value.length;

  if (value === undefined || value === null) {
    return false;
  }

  if (value === false) {
    return true;
  }

  if (value instanceof Date) {
    // invalid date won't pass
    return !isNaN(value.getTime());
  }

  if (typeof value === 'object') {
    for (let _ in value) return true;

    return false;
  }

  return !!String(value).length;
};
/**
 * Returns the length of an arbitrary value
 * @param {Array|Object|String} value
 * @return {number}
 */

const len = value => {
  value = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(value);
  if (Array.isArray(value)) return value.length;

  if (typeof value === 'object') {
    return Object.keys(value).length;
  }

  return String(value).length;
};
/**
 * Regex based validator template
 * @param {RegExp} expr
 * @return {function(*=): boolean}
 */

function regex(expr) {
  return value => {
    value = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(value);
    return !req(value) || expr.test(value);
  };
}

var common = /*#__PURE__*/Object.freeze({
  __proto__: null,
  withParams: withParams,
  withMessage: withMessage,
  withAsync: withAsync,
  forEach: forEach,
  req: req,
  len: len,
  regex: regex,
  unwrap: vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref,
  unwrapNormalizedValidator: unwrapNormalizedValidator,
  unwrapValidatorResponse: unwrapValidatorResponse,
  normalizeValidatorObject: normalizeValidatorObject
});

var alpha$1 = regex(/^[a-zA-Z]*$/);

/**
 * Validate if value is alphabetical string.
 * @type {NormalizedValidator}
 */

var alpha = {
  $validator: alpha$1,
  $message: 'The value is not alphabetical',
  $params: {
    type: 'alpha'
  }
};

var alphaNum$1 = regex(/^[a-zA-Z0-9]*$/);

/**
 * Validate if value is alpha-numeric string.
 * @type {NormalizedValidator}
 */

var alphaNum = {
  $validator: alphaNum$1,
  $message: 'The value must be alpha-numeric',
  $params: {
    type: 'alphaNum'
  }
};

var numeric$1 = regex(/^\d*(\.\d+)?$/);

/**
 * Check whether a value is numeric.
 * @type NormalizedValidator
 */

var numeric = {
  $validator: numeric$1,
  $message: 'Value must be numeric',
  $params: {
    type: 'numeric'
  }
};

/**
 * Check if a numeric value is between two values.
 * @param {Ref<Number> | Number} min
 * @param {Ref<Number> | Number} max
 * @return {function(*=): boolean}
 */

function between$1 (min, max) {
  return value => !req(value) || (!/\s/.test(value) || value instanceof Date) && +(0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(min) <= +value && +(0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(max) >= +value;
}

/**
 * Checks if a value is between two values.
 * @param {Ref<Number> | Number} min
 * @param {Ref<Number> | Number} max
 * @return {NormalizedValidator}
 */

function between (min, max) {
  return {
    $validator: between$1(min, max),
    $message: ({
      $params
    }) => `The value must be between ${$params.min} and ${$params.max}`,
    $params: {
      min,
      max,
      type: 'between'
    }
  };
}

const emailRegex = /^(?:[A-z0-9!#$%&'*+/=?^_`{|}~-]+(?:\.[A-z0-9!#$%&'*+/=?^_`{|}~-]+)*|"(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21\x23-\x5b\x5d-\x7f]|[\x01-\x09\x0b\x0c\x0e-\x7f])*")@(?:(?:[a-z0-9](?:[a-z0-9-]*[a-z0-9])?\.)+[a-z0-9]{2,}(?:[a-z0-9-]*[a-z0-9])?|\[(?:(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)\.){3}(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?|[a-z0-9-]*[a-z0-9]:(?:[\x01-\x08\x0b\x0c\x0e-\x1f\x21-\x5a\x53-\x7f]|\\[\x01-\x09\x0b\x0c\x0e-\x7f])+)\])$/i;
var email$1 = regex(emailRegex);

/**
 * Validate if value is an email.
 * @type {NormalizedValidator}
 */

var email = {
  $validator: email$1,
  $message: 'Value is not a valid email address',
  $params: {
    type: 'email'
  }
};

/**
 * Check if a string is an IP Address
 * @param {String} value
 * @returns {boolean}
 */

function ipAddress$1 (value) {
  if (!req(value)) {
    return true;
  }

  if (typeof value !== 'string') {
    return false;
  }

  const nibbles = value.split('.');
  return nibbles.length === 4 && nibbles.every(nibbleValid);
}

const nibbleValid = nibble => {
  if (nibble.length > 3 || nibble.length === 0) {
    return false;
  }

  if (nibble[0] === '0' && nibble !== '0') {
    return false;
  }

  if (!nibble.match(/^\d+$/)) {
    return false;
  }

  const numeric = +nibble | 0;
  return numeric >= 0 && numeric <= 255;
};

/**
 * Validate if value is an ipAddress string.
 * @type {NormalizedValidator}
 */

var ipAddress = {
  $validator: ipAddress$1,
  $message: 'The value is not a valid IP address',
  $params: {
    type: 'ipAddress'
  }
};

/**
 * Check if value is a properly formatted Mac Address.
 * @param {String | Ref<String>} [separator]
 * @returns {function(*): boolean}
 */

function macAddress$1 (separator = ':') {
  return value => {
    separator = (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(separator);

    if (!req(value)) {
      return true;
    }

    if (typeof value !== 'string') {
      return false;
    }

    const parts = typeof separator === 'string' && separator !== '' ? value.split(separator) : value.length === 12 || value.length === 16 ? value.match(/.{2}/g) : null;
    return parts !== null && (parts.length === 6 || parts.length === 8) && parts.every(hexValid);
  };
}

const hexValid = hex => hex.toLowerCase().match(/^[0-9a-f]{2}$/);

/**
 * Validate if value is a valid Mac Address string.
 * @returns {NormalizedValidator}
 */

function macAddress (separator) {
  return {
    $validator: macAddress$1(separator),
    $message: 'The value is not a valid MAC Address',
    $params: {
      type: 'macAddress'
    }
  };
}

/**
 * Check if provided value has a maximum length
 * @param {Number | Ref<Number>} length
 * @returns {function(Array|Object|String): boolean}
 */

function maxLength$1 (length) {
  return value => !req(value) || len(value) <= (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(length);
}

/**
 * Validate the max length of a string.
 * @param {Number} max
 * @return {NormalizedValidator}
 */

function maxLength (max) {
  return {
    $validator: maxLength$1(max),
    $message: ({
      $params
    }) => `The maximum length allowed is ${$params.max}`,
    $params: {
      max,
      type: 'maxLength'
    }
  };
}

/**
 * Check if value is above a threshold.
 * @param {Number | Ref<Number>} length
 * @returns {function(Array|Object|String): boolean}
 */

function minLength$1 (length) {
  return value => !req(value) || len(value) >= (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(length);
}

/**
 * Check if value is above a threshold.
 * @param {Number | Ref<Number>} min
 * @returns {NormalizedValidator}
 */

function minLength (min) {
  return {
    $validator: minLength$1(min),
    $message: ({
      $params
    }) => `This field should be at least ${$params.min} long`,
    $params: {
      min,
      type: 'minLength'
    }
  };
}

/**
 * Validates if a value is empty.
 * @param {String | Array | Date | Object} value
 * @returns {boolean}
 */

function required$1 (value) {
  if (typeof value === 'string') {
    value = value.trim();
  }

  return req(value);
}

/**
 * Check if a value is empty or not.
 * @type {NormalizedValidator}
 */

var required = {
  $validator: required$1,
  $message: 'Value is required',
  $params: {
    type: 'required'
  }
};

const validate$1 = (prop, val) => prop ? req(val) : true;
/**
 * Returns required if the passed property is truthy
 * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction
 * @return {function(value: *, parentVM: object): Boolean}
 */


function requiredIf$1(propOrFunction) {
  return function (value, parentVM) {
    if (typeof propOrFunction !== 'function') {
      return validate$1((0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(propOrFunction), value);
    }

    const result = propOrFunction.call(this, value, parentVM);
    return validate$1(result, value);
  };
}

/**
 * Returns required if the passed property is truthy
 * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop
 * @return {NormalizedValidator}
 */

function requiredIf (prop) {
  return {
    $validator: requiredIf$1(prop),
    $message: 'The value is required',
    $params: {
      type: 'requiredIf',
      prop
    }
  };
}

const validate = (prop, val) => !prop ? req(val) : true;
/**
 * Returns required if the passed property is falsy.
 * @param {Boolean | String | function(any): Boolean | Ref<string | boolean>} propOrFunction
 * @return {function(value: *, parentVM: object): Boolean}
 */


function requiredUnless$1(propOrFunction) {
  return function (value, parentVM) {
    if (typeof propOrFunction !== 'function') {
      return validate((0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(propOrFunction), value);
    }

    const result = propOrFunction.call(this, value, parentVM);
    return validate(result, value);
  };
}

/**
 * Returns required unless the passed property is truthy
 * @param {Boolean | String | function(): (Boolean | Promise<boolean>)} prop
 * @return {NormalizedValidator}
 */

function requiredUnless (prop) {
  return {
    $validator: requiredUnless$1(prop),
    $message: 'The value is required',
    $params: {
      type: 'requiredUnless',
      prop
    }
  };
}

/**
 * Check if two values are identical.
 * @param {*} equalTo
 * @return {function(*=): boolean}
 */

function sameAs$1 (equalTo) {
  return value => (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(value) === (0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(equalTo);
}

/**
 * Check if two values are identical
 * @param {*} equalTo
 * @param {String} [otherName]
 * @return {NormalizedValidator}
 */

function sameAs (equalTo, otherName = 'other') {
  return {
    $validator: sameAs$1(equalTo),
    $message: ({
      $params
    }) => `The value must be equal to the ${otherName} value`,
    $params: {
      equalTo,
      otherName,
      type: 'sameAs'
    }
  };
}

/**
 * Regex taken from {@link https://gist.github.com/dperini/729294}
 */

const urlRegex = /^(?:(?:(?:https?|ftp):)?\/\/)(?:\S+(?::\S*)?@)?(?:(?!(?:10|127)(?:\.\d{1,3}){3})(?!(?:169\.254|192\.168)(?:\.\d{1,3}){2})(?!172\.(?:1[6-9]|2\d|3[0-1])(?:\.\d{1,3}){2})(?:[1-9]\d?|1\d\d|2[01]\d|22[0-3])(?:\.(?:1?\d{1,2}|2[0-4]\d|25[0-5])){2}(?:\.(?:[1-9]\d?|1\d\d|2[0-4]\d|25[0-4]))|(?:(?:[a-z0-9\u00a1-\uffff][a-z0-9\u00a1-\uffff_-]{0,62})?[a-z0-9\u00a1-\uffff]\.)+(?:[a-z\u00a1-\uffff]{2,}\.?))(?::\d{2,5})?(?:[/?#]\S*)?$/i;
var url$1 = regex(urlRegex);

/**
 * Check if a value is a url
 * @type {NormalizedValidator}
 */

var url = {
  $validator: url$1,
  $message: 'The value is not a valid URL address',
  $params: {
    type: 'url'
  }
};

function _await$1(value, then, direct) {
  if (direct) {
    return then ? then(value) : value;
  }

  if (!value || !value.then) {
    value = Promise.resolve(value);
  }

  return then ? value.then(then) : value;
}

function syncOr(validators) {
  return function (...args) {
    return validators.reduce((valid, fn) => {
      if (unwrapValidatorResponse(valid)) return valid;
      return unwrapNormalizedValidator(fn).apply(this, args);
    }, false);
  };
}

function asyncOr(validators) {
  return function (...args) {
    const _this = this;

    return validators.reduce(function (valid, fn) {
      return _await$1(valid, function (r) {
        return unwrapValidatorResponse(r) ? r : unwrapNormalizedValidator(fn).apply(_this, args);
      });
    }, Promise.resolve(false));
  };
}
/**
 * Returns true when one of the provided functions returns true.
 * @param {...(NormalizedValidator|Function)} validators
 * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}
 */


function or$1(...validators) {
  const $async = validators.some(v => v.$async);
  const $watchTargets = validators.reduce((all, v) => {
    if (!v.$watchTargets) return all;
    return all.concat(v.$watchTargets);
  }, []);

  let $validator = () => false;

  if (validators.length) $validator = $async ? asyncOr(validators) : syncOr(validators);
  return {
    $async,
    $validator,
    $watchTargets
  };
}

/**
 * Returns true when one of the provided functions returns true.
 * @param {...(NormalizedValidator|Function)} validators
 * @return {NormalizedValidator}
 */

function or (...validators) {
  return withParams({
    type: 'or'
  }, withMessage('The value does not match any of the provided validators', or$1(...validators)));
}

function _await(value, then, direct) {
  if (direct) {
    return then ? then(value) : value;
  }

  if (!value || !value.then) {
    value = Promise.resolve(value);
  }

  return then ? value.then(then) : value;
}
/**
 *
 * @param validators
 * @return {function(...[*]=): Promise<boolean>}
 */


function syncAnd(validators) {
  return function (...args) {
    return validators.reduce((valid, fn) => {
      if (!unwrapValidatorResponse(valid)) return valid;
      return unwrapNormalizedValidator(fn).apply(this, args);
    }, true);
  };
}

function asyncAnd(validators) {
  return function (...args) {
    const _this = this;

    return validators.reduce(function (valid, fn) {
      return _await(valid, function (r) {
        return unwrapValidatorResponse(r) ? unwrapNormalizedValidator(fn).apply(_this, args) : r;
      });
    }, Promise.resolve(true));
  };
}
/**
 * Returns true when all validators are truthy
 * @param {...(NormalizedValidator | Function)} validators
 * @return {{$validator: function(...[*]=): (boolean | Promise<boolean>), $async: boolean, $watchTargets: any[]}}
 */


function and$1(...validators) {
  const $async = validators.some(v => v.$async);
  const $watchTargets = validators.reduce((all, v) => {
    if (!v.$watchTargets) return all;
    return all.concat(v.$watchTargets);
  }, []);

  let $validator = () => false;

  if (validators.length) $validator = $async ? asyncAnd(validators) : syncAnd(validators);
  return {
    $async,
    $validator,
    $watchTargets
  };
}

/**
 * Validate if all validators match.
 * @param {...*} validators
 * @returns {NormalizedValidator}
 */

function and (...validators) {
  return withParams({
    type: 'and'
  }, withMessage('The value does not match all of the provided validators', and$1(...validators)));
}

/**
 * Swaps the result of a value
 * @param {NormalizedValidator|Function} validator
 * @returns {function(*=, *=): boolean}
 */

function not$1 (validator) {
  return function (value, vm) {
    if (!req(value)) return true;
    const response = unwrapNormalizedValidator(validator).call(this, value, vm);
    if (!isPromise(response)) return !unwrapValidatorResponse(response);
    return response.then(r => !unwrapValidatorResponse(r));
  };
}

/**
 * Swaps the result of a value
 * @param {NormalizedValidator|Function} validator
 * @returns {NormalizedValidator}
 */

function not (validator) {
  return {
    $validator: not$1(validator),
    $message: `The value does not match the provided validator`,
    $params: {
      type: 'not'
    }
  };
}

/**
 * Check if a value is above a threshold.
 * @param {String | Number | Ref<Number> | Ref<String>} min
 * @returns {function(*=): boolean}
 */

function minValue$1 (min) {
  return value => !req(value) || (!/\s/.test(value) || value instanceof Date) && +value >= +(0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(min);
}

/**
 * Check if a value is above a threshold.
 * @param {String | Number | Ref<Number> | Ref<String>} min
 * @returns {NormalizedValidator}
 */

function minValue (min) {
  return {
    $validator: minValue$1(min),
    $message: ({
      $params
    }) => `The minimum value allowed is ${$params.min}`,
    $params: {
      min,
      type: 'minValue'
    }
  };
}

/**
 * Check if value is below a threshold.
 * @param {Number | Ref<Number> | Ref<String>} max
 * @returns {function(*=): boolean}
 */

function maxValue$1 (max) {
  return value => !req(value) || (!/\s/.test(value) || value instanceof Date) && +value <= +(0,vue_demi__WEBPACK_IMPORTED_MODULE_0__.unref)(max);
}

/**
 * Check if value is below a threshold.
 * @param {Number | Ref<Number> | Ref<String>} max
 * @return {NormalizedValidator}
 */

var maxValue = (max => ({
  $validator: maxValue$1(max),
  $message: ({
    $params
  }) => `The maximum value is ${$params.max}`,
  $params: {
    max,
    type: 'maxValue'
  }
}));

// ^-[0-9]+$ - only for negative integer (minus sign without at least 1 digit is not a number)

var integer$1 = regex(/(^[0-9]*$)|(^-[0-9]+$)/);

/**
 * Validate if value is integer.
 * @type {NormalizedValidator}
 */

var integer = {
  $validator: integer$1,
  $message: 'Value is not an integer',
  $params: {
    type: 'integer'
  }
};

var decimal$1 = regex(/^[-]?\d*(\.\d+)?$/);

/**
 * Validate if value is decimal number.
 * @type {NormalizedValidator}
 */

var decimal = {
  $validator: decimal$1,
  $message: 'Value must be decimal',
  $params: {
    type: 'decimal'
  }
};

/**
 * Creates a translatable version of `withMessage` helper.
 * @param {function} t - the translation function of your choice
 * @param {function} [messagePath] - a function to generate the message path, passed to `t` for each message. By default it is `validations.${$validator}`
 * @param {function} [messageParams] - a function to augment the params, passed to `t` for each message.
 */

function createI18nMessage({
  t,
  messagePath = ({
    $validator
  }) => `validations.${$validator}`,
  messageParams = params => params
}) {
  return function withI18nMessage(validator, {
    withArguments = false,
    messagePath: localMessagePath = messagePath,
    messageParams: localMessageParams = messageParams
  } = {}) {
    function message(props) {
      return t(localMessagePath(props), localMessageParams(Object.assign({
        model: props.$model,
        property: props.$property,
        pending: props.$pending,
        invalid: props.$invalid,
        response: props.$response,
        validator: props.$validator,
        propertyPath: props.$propertyPath
      }, props.$params)));
    }

    if (withArguments && typeof validator === 'function') {
      return (...args) => withMessage(message, validator(...args));
    }

    return withMessage(message, validator);
  };
}




/***/ }),

/***/ "./node_modules/vue-loader/dist/exportHelper.js":
/*!******************************************************!*\
  !*** ./node_modules/vue-loader/dist/exportHelper.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {


Object.defineProperty(exports, "__esModule", ({ value: true }));
// runtime helper for setting properties on components
// in a tree-shakable way
exports["default"] = (sfc, props) => {
    const target = sfc.__vccOpts || sfc;
    for (const [key, val] of props) {
        target[key] = val;
    }
    return target;
};


/***/ }),

/***/ "./node_modules/@vuelidate/core/node_modules/vue-demi/lib/index.mjs":
/*!**************************************************************************!*\
  !*** ./node_modules/@vuelidate/core/node_modules/vue-demi/lib/index.mjs ***!
  \**************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "set": () => (/* binding */ set),
/* harmony export */   "del": () => (/* binding */ del),
/* harmony export */   "BaseTransition": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.BaseTransition),
/* harmony export */   "Comment": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Comment),
/* harmony export */   "EffectScope": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.EffectScope),
/* harmony export */   "Fragment": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Fragment),
/* harmony export */   "KeepAlive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.KeepAlive),
/* harmony export */   "ReactiveEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ReactiveEffect),
/* harmony export */   "Static": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Static),
/* harmony export */   "Suspense": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Suspense),
/* harmony export */   "Teleport": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Teleport),
/* harmony export */   "Text": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Text),
/* harmony export */   "Transition": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Transition),
/* harmony export */   "TransitionGroup": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.TransitionGroup),
/* harmony export */   "VueElement": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.VueElement),
/* harmony export */   "callWithAsyncErrorHandling": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.callWithAsyncErrorHandling),
/* harmony export */   "callWithErrorHandling": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.callWithErrorHandling),
/* harmony export */   "camelize": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.camelize),
/* harmony export */   "capitalize": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.capitalize),
/* harmony export */   "cloneVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.cloneVNode),
/* harmony export */   "compatUtils": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.compatUtils),
/* harmony export */   "compile": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.compile),
/* harmony export */   "computed": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.computed),
/* harmony export */   "createApp": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createApp),
/* harmony export */   "createBlock": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createBlock),
/* harmony export */   "createCommentVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode),
/* harmony export */   "createElementBlock": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock),
/* harmony export */   "createElementVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode),
/* harmony export */   "createHydrationRenderer": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createHydrationRenderer),
/* harmony export */   "createPropsRestProxy": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createPropsRestProxy),
/* harmony export */   "createRenderer": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createRenderer),
/* harmony export */   "createSSRApp": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createSSRApp),
/* harmony export */   "createSlots": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createSlots),
/* harmony export */   "createStaticVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createStaticVNode),
/* harmony export */   "createTextVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode),
/* harmony export */   "createVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createVNode),
/* harmony export */   "customRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.customRef),
/* harmony export */   "defineAsyncComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineAsyncComponent),
/* harmony export */   "defineComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent),
/* harmony export */   "defineCustomElement": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineCustomElement),
/* harmony export */   "defineEmits": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineEmits),
/* harmony export */   "defineExpose": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineExpose),
/* harmony export */   "defineProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineProps),
/* harmony export */   "defineSSRCustomElement": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineSSRCustomElement),
/* harmony export */   "devtools": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.devtools),
/* harmony export */   "effect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.effect),
/* harmony export */   "effectScope": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.effectScope),
/* harmony export */   "getCurrentInstance": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance),
/* harmony export */   "getCurrentScope": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope),
/* harmony export */   "getTransitionRawChildren": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.getTransitionRawChildren),
/* harmony export */   "guardReactiveProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.guardReactiveProps),
/* harmony export */   "h": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.h),
/* harmony export */   "handleError": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.handleError),
/* harmony export */   "hydrate": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.hydrate),
/* harmony export */   "initCustomFormatter": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.initCustomFormatter),
/* harmony export */   "initDirectivesForSSR": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.initDirectivesForSSR),
/* harmony export */   "inject": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.inject),
/* harmony export */   "isMemoSame": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isMemoSame),
/* harmony export */   "isProxy": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isProxy),
/* harmony export */   "isReactive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isReactive),
/* harmony export */   "isReadonly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isReadonly),
/* harmony export */   "isRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isRef),
/* harmony export */   "isRuntimeOnly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isRuntimeOnly),
/* harmony export */   "isShallow": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isShallow),
/* harmony export */   "isVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isVNode),
/* harmony export */   "markRaw": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.markRaw),
/* harmony export */   "mergeDefaults": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.mergeDefaults),
/* harmony export */   "mergeProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.mergeProps),
/* harmony export */   "nextTick": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.nextTick),
/* harmony export */   "normalizeClass": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass),
/* harmony export */   "normalizeProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.normalizeProps),
/* harmony export */   "normalizeStyle": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.normalizeStyle),
/* harmony export */   "onActivated": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onActivated),
/* harmony export */   "onBeforeMount": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onBeforeMount),
/* harmony export */   "onBeforeUnmount": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onBeforeUnmount),
/* harmony export */   "onBeforeUpdate": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onBeforeUpdate),
/* harmony export */   "onDeactivated": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onDeactivated),
/* harmony export */   "onErrorCaptured": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onErrorCaptured),
/* harmony export */   "onMounted": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onMounted),
/* harmony export */   "onRenderTracked": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onRenderTracked),
/* harmony export */   "onRenderTriggered": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onRenderTriggered),
/* harmony export */   "onScopeDispose": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onScopeDispose),
/* harmony export */   "onServerPrefetch": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onServerPrefetch),
/* harmony export */   "onUnmounted": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onUnmounted),
/* harmony export */   "onUpdated": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onUpdated),
/* harmony export */   "openBlock": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.openBlock),
/* harmony export */   "popScopeId": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.popScopeId),
/* harmony export */   "provide": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.provide),
/* harmony export */   "proxyRefs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.proxyRefs),
/* harmony export */   "pushScopeId": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.pushScopeId),
/* harmony export */   "queuePostFlushCb": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.queuePostFlushCb),
/* harmony export */   "reactive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.reactive),
/* harmony export */   "readonly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.readonly),
/* harmony export */   "ref": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ref),
/* harmony export */   "registerRuntimeCompiler": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.registerRuntimeCompiler),
/* harmony export */   "render": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "renderList": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.renderList),
/* harmony export */   "renderSlot": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot),
/* harmony export */   "resolveComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent),
/* harmony export */   "resolveDirective": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveDirective),
/* harmony export */   "resolveDynamicComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveDynamicComponent),
/* harmony export */   "resolveFilter": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveFilter),
/* harmony export */   "resolveTransitionHooks": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveTransitionHooks),
/* harmony export */   "setBlockTracking": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.setBlockTracking),
/* harmony export */   "setDevtoolsHook": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.setDevtoolsHook),
/* harmony export */   "setTransitionHooks": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.setTransitionHooks),
/* harmony export */   "shallowReactive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.shallowReactive),
/* harmony export */   "shallowReadonly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly),
/* harmony export */   "shallowRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.shallowRef),
/* harmony export */   "ssrContextKey": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ssrContextKey),
/* harmony export */   "ssrUtils": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ssrUtils),
/* harmony export */   "stop": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.stop),
/* harmony export */   "toDisplayString": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString),
/* harmony export */   "toHandlerKey": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toHandlerKey),
/* harmony export */   "toHandlers": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toHandlers),
/* harmony export */   "toRaw": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toRaw),
/* harmony export */   "toRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toRef),
/* harmony export */   "toRefs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toRefs),
/* harmony export */   "transformVNodeArgs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.transformVNodeArgs),
/* harmony export */   "triggerRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.triggerRef),
/* harmony export */   "unref": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.unref),
/* harmony export */   "useAttrs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useAttrs),
/* harmony export */   "useCssModule": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useCssModule),
/* harmony export */   "useCssVars": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useCssVars),
/* harmony export */   "useSSRContext": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useSSRContext),
/* harmony export */   "useSlots": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useSlots),
/* harmony export */   "useTransitionState": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useTransitionState),
/* harmony export */   "vModelCheckbox": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelCheckbox),
/* harmony export */   "vModelDynamic": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelDynamic),
/* harmony export */   "vModelRadio": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelRadio),
/* harmony export */   "vModelSelect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelSelect),
/* harmony export */   "vModelText": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelText),
/* harmony export */   "vShow": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vShow),
/* harmony export */   "version": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.version),
/* harmony export */   "warn": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.warn),
/* harmony export */   "watch": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watch),
/* harmony export */   "watchEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watchEffect),
/* harmony export */   "watchPostEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watchPostEffect),
/* harmony export */   "watchSyncEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watchSyncEffect),
/* harmony export */   "withAsyncContext": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withAsyncContext),
/* harmony export */   "withCtx": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withCtx),
/* harmony export */   "withDefaults": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withDefaults),
/* harmony export */   "withDirectives": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withDirectives),
/* harmony export */   "withKeys": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withKeys),
/* harmony export */   "withMemo": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withMemo),
/* harmony export */   "withModifiers": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withModifiers),
/* harmony export */   "withScopeId": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withScopeId),
/* harmony export */   "Vue": () => (/* reexport module object */ vue__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "Vue2": () => (/* binding */ Vue2),
/* harmony export */   "isVue2": () => (/* binding */ isVue2),
/* harmony export */   "isVue3": () => (/* binding */ isVue3),
/* harmony export */   "install": () => (/* binding */ install)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");


var isVue2 = false
var isVue3 = true
var Vue2 = undefined

function install() {}

function set(target, key, val) {
  if (Array.isArray(target)) {
    target.length = Math.max(target.length, key)
    target.splice(key, 1, val)
    return val
  }
  target[key] = val
  return val
}

function del(target, key) {
  if (Array.isArray(target)) {
    target.splice(key, 1)
    return
  }
  delete target[key]
}





/***/ }),

/***/ "./node_modules/@vuelidate/validators/node_modules/vue-demi/lib/index.mjs":
/*!********************************************************************************!*\
  !*** ./node_modules/@vuelidate/validators/node_modules/vue-demi/lib/index.mjs ***!
  \********************************************************************************/
/***/ ((__unused_webpack___webpack_module__, __webpack_exports__, __webpack_require__) => {

__webpack_require__.r(__webpack_exports__);
/* harmony export */ __webpack_require__.d(__webpack_exports__, {
/* harmony export */   "set": () => (/* binding */ set),
/* harmony export */   "del": () => (/* binding */ del),
/* harmony export */   "BaseTransition": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.BaseTransition),
/* harmony export */   "Comment": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Comment),
/* harmony export */   "EffectScope": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.EffectScope),
/* harmony export */   "Fragment": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Fragment),
/* harmony export */   "KeepAlive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.KeepAlive),
/* harmony export */   "ReactiveEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ReactiveEffect),
/* harmony export */   "Static": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Static),
/* harmony export */   "Suspense": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Suspense),
/* harmony export */   "Teleport": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Teleport),
/* harmony export */   "Text": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Text),
/* harmony export */   "Transition": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.Transition),
/* harmony export */   "TransitionGroup": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.TransitionGroup),
/* harmony export */   "VueElement": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.VueElement),
/* harmony export */   "callWithAsyncErrorHandling": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.callWithAsyncErrorHandling),
/* harmony export */   "callWithErrorHandling": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.callWithErrorHandling),
/* harmony export */   "camelize": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.camelize),
/* harmony export */   "capitalize": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.capitalize),
/* harmony export */   "cloneVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.cloneVNode),
/* harmony export */   "compatUtils": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.compatUtils),
/* harmony export */   "compile": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.compile),
/* harmony export */   "computed": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.computed),
/* harmony export */   "createApp": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createApp),
/* harmony export */   "createBlock": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createBlock),
/* harmony export */   "createCommentVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createCommentVNode),
/* harmony export */   "createElementBlock": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createElementBlock),
/* harmony export */   "createElementVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createElementVNode),
/* harmony export */   "createHydrationRenderer": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createHydrationRenderer),
/* harmony export */   "createPropsRestProxy": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createPropsRestProxy),
/* harmony export */   "createRenderer": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createRenderer),
/* harmony export */   "createSSRApp": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createSSRApp),
/* harmony export */   "createSlots": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createSlots),
/* harmony export */   "createStaticVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createStaticVNode),
/* harmony export */   "createTextVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createTextVNode),
/* harmony export */   "createVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.createVNode),
/* harmony export */   "customRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.customRef),
/* harmony export */   "defineAsyncComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineAsyncComponent),
/* harmony export */   "defineComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineComponent),
/* harmony export */   "defineCustomElement": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineCustomElement),
/* harmony export */   "defineEmits": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineEmits),
/* harmony export */   "defineExpose": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineExpose),
/* harmony export */   "defineProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineProps),
/* harmony export */   "defineSSRCustomElement": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.defineSSRCustomElement),
/* harmony export */   "devtools": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.devtools),
/* harmony export */   "effect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.effect),
/* harmony export */   "effectScope": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.effectScope),
/* harmony export */   "getCurrentInstance": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentInstance),
/* harmony export */   "getCurrentScope": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.getCurrentScope),
/* harmony export */   "getTransitionRawChildren": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.getTransitionRawChildren),
/* harmony export */   "guardReactiveProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.guardReactiveProps),
/* harmony export */   "h": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.h),
/* harmony export */   "handleError": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.handleError),
/* harmony export */   "hydrate": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.hydrate),
/* harmony export */   "initCustomFormatter": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.initCustomFormatter),
/* harmony export */   "initDirectivesForSSR": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.initDirectivesForSSR),
/* harmony export */   "inject": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.inject),
/* harmony export */   "isMemoSame": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isMemoSame),
/* harmony export */   "isProxy": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isProxy),
/* harmony export */   "isReactive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isReactive),
/* harmony export */   "isReadonly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isReadonly),
/* harmony export */   "isRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isRef),
/* harmony export */   "isRuntimeOnly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isRuntimeOnly),
/* harmony export */   "isShallow": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isShallow),
/* harmony export */   "isVNode": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.isVNode),
/* harmony export */   "markRaw": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.markRaw),
/* harmony export */   "mergeDefaults": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.mergeDefaults),
/* harmony export */   "mergeProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.mergeProps),
/* harmony export */   "nextTick": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.nextTick),
/* harmony export */   "normalizeClass": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.normalizeClass),
/* harmony export */   "normalizeProps": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.normalizeProps),
/* harmony export */   "normalizeStyle": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.normalizeStyle),
/* harmony export */   "onActivated": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onActivated),
/* harmony export */   "onBeforeMount": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onBeforeMount),
/* harmony export */   "onBeforeUnmount": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onBeforeUnmount),
/* harmony export */   "onBeforeUpdate": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onBeforeUpdate),
/* harmony export */   "onDeactivated": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onDeactivated),
/* harmony export */   "onErrorCaptured": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onErrorCaptured),
/* harmony export */   "onMounted": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onMounted),
/* harmony export */   "onRenderTracked": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onRenderTracked),
/* harmony export */   "onRenderTriggered": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onRenderTriggered),
/* harmony export */   "onScopeDispose": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onScopeDispose),
/* harmony export */   "onServerPrefetch": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onServerPrefetch),
/* harmony export */   "onUnmounted": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onUnmounted),
/* harmony export */   "onUpdated": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.onUpdated),
/* harmony export */   "openBlock": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.openBlock),
/* harmony export */   "popScopeId": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.popScopeId),
/* harmony export */   "provide": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.provide),
/* harmony export */   "proxyRefs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.proxyRefs),
/* harmony export */   "pushScopeId": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.pushScopeId),
/* harmony export */   "queuePostFlushCb": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.queuePostFlushCb),
/* harmony export */   "reactive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.reactive),
/* harmony export */   "readonly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.readonly),
/* harmony export */   "ref": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ref),
/* harmony export */   "registerRuntimeCompiler": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.registerRuntimeCompiler),
/* harmony export */   "render": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.render),
/* harmony export */   "renderList": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.renderList),
/* harmony export */   "renderSlot": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.renderSlot),
/* harmony export */   "resolveComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveComponent),
/* harmony export */   "resolveDirective": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveDirective),
/* harmony export */   "resolveDynamicComponent": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveDynamicComponent),
/* harmony export */   "resolveFilter": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveFilter),
/* harmony export */   "resolveTransitionHooks": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.resolveTransitionHooks),
/* harmony export */   "setBlockTracking": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.setBlockTracking),
/* harmony export */   "setDevtoolsHook": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.setDevtoolsHook),
/* harmony export */   "setTransitionHooks": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.setTransitionHooks),
/* harmony export */   "shallowReactive": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.shallowReactive),
/* harmony export */   "shallowReadonly": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.shallowReadonly),
/* harmony export */   "shallowRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.shallowRef),
/* harmony export */   "ssrContextKey": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ssrContextKey),
/* harmony export */   "ssrUtils": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.ssrUtils),
/* harmony export */   "stop": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.stop),
/* harmony export */   "toDisplayString": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toDisplayString),
/* harmony export */   "toHandlerKey": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toHandlerKey),
/* harmony export */   "toHandlers": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toHandlers),
/* harmony export */   "toRaw": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toRaw),
/* harmony export */   "toRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toRef),
/* harmony export */   "toRefs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.toRefs),
/* harmony export */   "transformVNodeArgs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.transformVNodeArgs),
/* harmony export */   "triggerRef": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.triggerRef),
/* harmony export */   "unref": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.unref),
/* harmony export */   "useAttrs": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useAttrs),
/* harmony export */   "useCssModule": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useCssModule),
/* harmony export */   "useCssVars": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useCssVars),
/* harmony export */   "useSSRContext": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useSSRContext),
/* harmony export */   "useSlots": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useSlots),
/* harmony export */   "useTransitionState": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.useTransitionState),
/* harmony export */   "vModelCheckbox": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelCheckbox),
/* harmony export */   "vModelDynamic": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelDynamic),
/* harmony export */   "vModelRadio": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelRadio),
/* harmony export */   "vModelSelect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelSelect),
/* harmony export */   "vModelText": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vModelText),
/* harmony export */   "vShow": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.vShow),
/* harmony export */   "version": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.version),
/* harmony export */   "warn": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.warn),
/* harmony export */   "watch": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watch),
/* harmony export */   "watchEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watchEffect),
/* harmony export */   "watchPostEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watchPostEffect),
/* harmony export */   "watchSyncEffect": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.watchSyncEffect),
/* harmony export */   "withAsyncContext": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withAsyncContext),
/* harmony export */   "withCtx": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withCtx),
/* harmony export */   "withDefaults": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withDefaults),
/* harmony export */   "withDirectives": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withDirectives),
/* harmony export */   "withKeys": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withKeys),
/* harmony export */   "withMemo": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withMemo),
/* harmony export */   "withModifiers": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withModifiers),
/* harmony export */   "withScopeId": () => (/* reexport safe */ vue__WEBPACK_IMPORTED_MODULE_0__.withScopeId),
/* harmony export */   "Vue": () => (/* reexport module object */ vue__WEBPACK_IMPORTED_MODULE_0__),
/* harmony export */   "Vue2": () => (/* binding */ Vue2),
/* harmony export */   "isVue2": () => (/* binding */ isVue2),
/* harmony export */   "isVue3": () => (/* binding */ isVue3),
/* harmony export */   "install": () => (/* binding */ install)
/* harmony export */ });
/* harmony import */ var vue__WEBPACK_IMPORTED_MODULE_0__ = __webpack_require__(/*! vue */ "./node_modules/vue/dist/vue.runtime.esm-bundler.js");


var isVue2 = false
var isVue3 = true
var Vue2 = undefined

function install() {}

function set(target, key, val) {
  if (Array.isArray(target)) {
    target.length = Math.max(target.length, key)
    target.splice(key, 1, val)
    return val
  }
  target[key] = val
  return val
}

function del(target, key) {
  if (Array.isArray(target)) {
    target.splice(key, 1)
    return
  }
  delete target[key]
}





/***/ })

}]);
//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoidmVuZG9ycy1ub2RlX21vZHVsZXNfdnVlbGlkYXRlX2NvcmVfZGlzdF9pbmRleF9lc21fanMtbm9kZV9tb2R1bGVzX3Z1ZWxpZGF0ZV92YWxpZGF0b3JzX2Rpc3RfLWM0NjRkMi5taW4uanMiLCJtYXBwaW5ncyI6Ijs7Ozs7Ozs7Ozs7Ozs7OztBQUF1TDs7QUFFdkw7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLCtDQUFLO0FBQ2hCO0FBQ0EsR0FBRyxJQUFJO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLFNBQVMsb0RBQVUsV0FBVyxvREFBVTtBQUN4Qzs7QUFFQTtBQUNBO0FBQ0E7QUFDQSxhQUFhLFlBQVksbUJBQW1CO0FBQzVDOztBQUVBO0FBQ0E7QUFDQSxXQUFXLFdBQVc7QUFDdEIsV0FBVyxLQUFLO0FBQ2hCLFdBQVcsYUFBYTtBQUN4QixXQUFXLFFBQVE7QUFDbkIsWUFBWTtBQUNaOztBQUVBO0FBQ0EsNkJBQTZCLCtDQUFLLFNBQVMsK0NBQUs7QUFDaEQ7QUFDQTtBQUNBO0FBQ0EsaURBQWlELGlCQUFpQjtBQUNsRSxXQUFXLG1CQUFtQjtBQUM5QixZQUFZO0FBQ1o7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxXQUFXLFdBQVc7QUFDdEIsV0FBVyxRQUFRO0FBQ25CLFdBQVcsY0FBYztBQUN6QixXQUFXLGNBQWM7QUFDekIsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsU0FBUztBQUNwQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxhQUFhO0FBQ3hCLFdBQVcsVUFBVTtBQUNyQixXQUFXLFFBQVE7QUFDbkIsV0FBVyxjQUFjO0FBQ3pCLFdBQVcsYUFBYTtBQUN4QixjQUFjO0FBQ2Q7OztBQUdBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsSUFBSTtBQUNKO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsbUJBQW1CLDZDQUFHO0FBQ3RCLDBCQUEwQiw2Q0FBRztBQUM3QjtBQUNBLG1CQUFtQiwrQ0FBSztBQUN4QjtBQUNBO0FBQ0E7QUFDQTtBQUNBOztBQUVBLG9C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O0FBQ0Q7QUFDQTtBQUNBO0FBQ0E7QUFDQSxJQUFJLElBQUk7QUFDUjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxPQUFPO0FBQ1A7O0FBRUE7QUFDQTtBQUNBOztBQUVBO0FBQ0E7QUFDQTs7QUFFOE87Ozs7Ozs7Ozs7O0FDejdCak87QUFDYiw4Q0FBNkMsRUFBRSxhQUFhLEVBQUM7QUFDN0Q7QUFDQTtBQUNBLGtCQUFlO0FBQ2Y7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBOzs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7OztBQ1YwQjs7QUFFMUI7QUFDQTtBQUNBOztBQUVBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFbUI7QUFPbEI7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7Ozs7O0FDakN5Qjs7QUFFMUI7QUFDQTtBQUNBOztBQUVBOztBQUVPO0FBQ1A7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFTztBQUNQO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTs7QUFFbUI7QUFPbEIiLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly9uZWFyYmVhY2gvLi9ub2RlX21vZHVsZXMvQHZ1ZWxpZGF0ZS9jb3JlL2Rpc3QvaW5kZXguZXNtLmpzIiwid2VicGFjazovL25lYXJiZWFjaC8uL25vZGVfbW9kdWxlcy9AdnVlbGlkYXRlL3ZhbGlkYXRvcnMvZGlzdC9pbmRleC5lc20uanMiLCJ3ZWJwYWNrOi8vbmVhcmJlYWNoLy4vbm9kZV9tb2R1bGVzL3Z1ZS1sb2FkZXIvZGlzdC9leHBvcnRIZWxwZXIuanMiLCJ3ZWJwYWNrOi8vbmVhcmJlYWNoLy4vbm9kZV9tb2R1bGVzL0B2dWVsaWRhdGUvY29yZS9ub2RlX21vZHVsZXMvdnVlLWRlbWkvbGliL2luZGV4Lm1qcyIsIndlYnBhY2s6Ly9uZWFyYmVhY2gvLi9ub2RlX21vZHVsZXMvQHZ1ZWxpZGF0ZS92YWxpZGF0b3JzL25vZGVfbW9kdWxlcy92dWUtZGVtaS9saWIvaW5kZXgubWpzIl0sInNvdXJjZXNDb250ZW50IjpbImltcG9ydCB7IGlzUmVhY3RpdmUsIGlzUmVhZG9ubHksIHVucmVmLCByZWYsIGNvbXB1dGVkLCB3YXRjaCwgcmVhY3RpdmUsIGlzUmVmLCBuZXh0VGljaywgaW5qZWN0LCBwcm92aWRlLCBnZXRDdXJyZW50SW5zdGFuY2UsIGlzVnVlMywgb25CZWZvcmVNb3VudCwgb25CZWZvcmVVbm1vdW50IH0gZnJvbSAndnVlLWRlbWknO1xuXG5mdW5jdGlvbiB1bndyYXBPYmoob2JqKSB7XG4gIGxldCBpZ25vcmVLZXlzID0gYXJndW1lbnRzLmxlbmd0aCA+IDEgJiYgYXJndW1lbnRzWzFdICE9PSB1bmRlZmluZWQgPyBhcmd1bWVudHNbMV0gOiBbXTtcbiAgcmV0dXJuIE9iamVjdC5rZXlzKG9iaikucmVkdWNlKChvLCBrKSA9PiB7XG4gICAgaWYgKGlnbm9yZUtleXMuaW5jbHVkZXMoaykpIHJldHVybiBvO1xuICAgIG9ba10gPSB1bnJlZihvYmpba10pO1xuICAgIHJldHVybiBvO1xuICB9LCB7fSk7XG59XG5mdW5jdGlvbiBpc0Z1bmN0aW9uKHZhbCkge1xuICByZXR1cm4gdHlwZW9mIHZhbCA9PT0gJ2Z1bmN0aW9uJztcbn1cbmZ1bmN0aW9uIGlzUHJveHkodmFsdWUpIHtcbiAgcmV0dXJuIGlzUmVhY3RpdmUodmFsdWUpIHx8IGlzUmVhZG9ubHkodmFsdWUpO1xufVxuXG4vKipcbiAqIFJlc3BvbnNlIGZvcm0gYSByYXcgVmFsaWRhdG9yIGZ1bmN0aW9uLlxuICogU2hvdWxkIHJldHVybiBhIEJvb2xlYW4gb3IgYW4gb2JqZWN0IHdpdGggJGludmFsaWQgcHJvcGVydHkuXG4gKiBAdHlwZWRlZiB7Qm9vbGVhbiB8IHsgJHZhbGlkOiBCb29sZWFuIH19IFZhbGlkYXRvclJlc3BvbnNlXG4gKi9cblxuLyoqXG4gKiBDYWxscyBhIHZhbGlkYXRpb24gcnVsZSBieSB1bndyYXBwaW5nIGl0cyB2YWx1ZSBmaXJzdCBmcm9tIGEgcmVmLlxuICogQHBhcmFtIHtWYWxpZGF0b3J9IHJ1bGVcbiAqIEBwYXJhbSB7UmVmfSB2YWx1ZVxuICogQHBhcmFtIHtWdWVJbnN0YW5jZX0gaW5zdGFuY2VcbiAqIEBwYXJhbSB7T2JqZWN0fSBzaWJsaW5nU3RhdGVcbiAqIEByZXR1cm4ge1Byb21pc2U8VmFsaWRhdG9yUmVzcG9uc2U+IHwgVmFsaWRhdG9yUmVzcG9uc2V9XG4gKi9cblxuZnVuY3Rpb24gY2FsbFJ1bGUocnVsZSwgdmFsdWUsIHNpYmxpbmdTdGF0ZSwgaW5zdGFuY2UpIHtcbiAgcmV0dXJuIHJ1bGUuY2FsbChpbnN0YW5jZSwgdW5yZWYodmFsdWUpLCB1bnJlZihzaWJsaW5nU3RhdGUpLCBpbnN0YW5jZSk7XG59XG4vKipcbiAqIE5vcm1hbGl6ZXMgdGhlIHZhbGlkYXRvciByZXN1bHRcbiAqIEFsbG93cyBwYXNzaW5nIGEgYm9vbGVhbiBvZiBhbiBvYmplY3QgbGlrZSBgeyAkdmFsaWQ6IEJvb2xlYW4gfWBcbiAqIEBwYXJhbSB7VmFsaWRhdG9yUmVzcG9uc2V9IHJlc3VsdCAtIFZhbGlkYXRvciByZXN1bHRcbiAqIEByZXR1cm4ge2Jvb2xlYW59XG4gKi9cblxuXG5mdW5jdGlvbiBub3JtYWxpemVWYWxpZGF0b3JSZXNwb25zZShyZXN1bHQpIHtcbiAgcmV0dXJuIHJlc3VsdC4kdmFsaWQgIT09IHVuZGVmaW5lZCA/ICFyZXN1bHQuJHZhbGlkIDogIXJlc3VsdDtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgcmVzdWx0IG9mIGFuIGFzeW5jIHZhbGlkYXRvci5cbiAqIEBwYXJhbSB7VmFsaWRhdG9yfSBydWxlXG4gKiBAcGFyYW0ge1JlZjwqPn0gbW9kZWxcbiAqIEBwYXJhbSB7UmVmPEJvb2xlYW4+fSAkcGVuZGluZ1xuICogQHBhcmFtIHtSZWY8Qm9vbGVhbj59ICRkaXJ0eVxuICogQHBhcmFtIHtHbG9iYWxDb25maWd9IGNvbmZpZ1xuICogQHBhcmFtIHtib29sZWFufSBjb25maWcuJGxhenlcbiAqIEBwYXJhbSB7UmVmPCo+fSAkcmVzcG9uc2VcbiAqIEBwYXJhbSB7VnVlSW5zdGFuY2V9IGluc3RhbmNlXG4gKiBAcGFyYW0ge1JlZjwqPltdfSB3YXRjaFRhcmdldHNcbiAqIEBwYXJhbSB7T2JqZWN0fSBzaWJsaW5nU3RhdGVcbiAqIEBwYXJhbSB7UmVmPEJvb2xlYW4+fSAkbGFzdEludmFsaWRTdGF0ZVxuICogQHBhcmFtIHtSZWY8TnVtYmVyPn0gJGxhc3RDb21taXR0ZWRPblxuICogQHJldHVybiB7eyAkaW52YWxpZDogUmVmPEJvb2xlYW4+LCAkdW53YXRjaDogV2F0Y2hTdG9wSGFuZGxlIH19XG4gKi9cblxuXG5mdW5jdGlvbiBjcmVhdGVBc3luY1Jlc3VsdChydWxlLCBtb2RlbCwgJHBlbmRpbmcsICRkaXJ0eSwgX3JlZiwgJHJlc3BvbnNlLCBpbnN0YW5jZSkge1xuICBsZXQge1xuICAgICRsYXp5LFxuICAgICRyZXdhcmRFYXJseVxuICB9ID0gX3JlZjtcbiAgbGV0IHdhdGNoVGFyZ2V0cyA9IGFyZ3VtZW50cy5sZW5ndGggPiA3ICYmIGFyZ3VtZW50c1s3XSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzddIDogW107XG4gIGxldCBzaWJsaW5nU3RhdGUgPSBhcmd1bWVudHMubGVuZ3RoID4gOCA/IGFyZ3VtZW50c1s4XSA6IHVuZGVmaW5lZDtcbiAgbGV0ICRsYXN0SW52YWxpZFN0YXRlID0gYXJndW1lbnRzLmxlbmd0aCA+IDkgPyBhcmd1bWVudHNbOV0gOiB1bmRlZmluZWQ7XG4gIGxldCAkbGFzdENvbW1pdHRlZE9uID0gYXJndW1lbnRzLmxlbmd0aCA+IDEwID8gYXJndW1lbnRzWzEwXSA6IHVuZGVmaW5lZDtcbiAgY29uc3QgJGludmFsaWQgPSByZWYoISEkZGlydHkudmFsdWUpO1xuICBjb25zdCAkcGVuZGluZ0NvdW50ZXIgPSByZWYoMCk7XG4gICRwZW5kaW5nLnZhbHVlID0gZmFsc2U7XG4gIGNvbnN0ICR1bndhdGNoID0gd2F0Y2goW21vZGVsLCAkZGlydHldLmNvbmNhdCh3YXRjaFRhcmdldHMsICRsYXN0Q29tbWl0dGVkT24pLCAoKSA9PiB7XG4gICAgaWYgKCAvLyBpZiAkbGF6eSBhbmQgbm90IGRpcnR5LCByZXR1cm5cbiAgICAkbGF6eSAmJiAhJGRpcnR5LnZhbHVlIHx8IC8vIGlmIGluICRyZXdhcmRFYXJseSBtb2RlIGFuZCBubyBwcmV2aW91cyBlcnJvcnMsIG5vdGhpbmcgcGVuZGluZywgcmV0dXJuXG4gICAgJHJld2FyZEVhcmx5ICYmICEkbGFzdEludmFsaWRTdGF0ZS52YWx1ZSAmJiAhJHBlbmRpbmcudmFsdWUpIHtcbiAgICAgIHJldHVybjtcbiAgICB9XG5cbiAgICBsZXQgcnVsZVJlc3VsdDsgLy8gbWFrZSBzdXJlIHdlIGRvbnQgYnJlYWsgaWYgYSB2YWxpZGF0b3IgdGhyb3dzXG5cbiAgICB0cnkge1xuICAgICAgcnVsZVJlc3VsdCA9IGNhbGxSdWxlKHJ1bGUsIG1vZGVsLCBzaWJsaW5nU3RhdGUsIGluc3RhbmNlKTtcbiAgICB9IGNhdGNoIChlcnIpIHtcbiAgICAgIC8vIGNvbnZlcnQgdG8gYSBwcm9taXNlLCBzbyB3ZSBjYW4gaGFuZGxlIGl0IGFzeW5jXG4gICAgICBydWxlUmVzdWx0ID0gUHJvbWlzZS5yZWplY3QoZXJyKTtcbiAgICB9XG5cbiAgICAkcGVuZGluZ0NvdW50ZXIudmFsdWUrKztcbiAgICAkcGVuZGluZy52YWx1ZSA9ICEhJHBlbmRpbmdDb3VudGVyLnZhbHVlOyAvLyBlbnN1cmUgJGludmFsaWQgaXMgZmFsc2UsIHdoaWxlIHZhbGlkYXRvciBpcyByZXNvbHZpbmdcblxuICAgICRpbnZhbGlkLnZhbHVlID0gZmFsc2U7XG4gICAgUHJvbWlzZS5yZXNvbHZlKHJ1bGVSZXN1bHQpLnRoZW4oZGF0YSA9PiB7XG4gICAgICAkcGVuZGluZ0NvdW50ZXIudmFsdWUtLTtcbiAgICAgICRwZW5kaW5nLnZhbHVlID0gISEkcGVuZGluZ0NvdW50ZXIudmFsdWU7XG4gICAgICAkcmVzcG9uc2UudmFsdWUgPSBkYXRhO1xuICAgICAgJGludmFsaWQudmFsdWUgPSBub3JtYWxpemVWYWxpZGF0b3JSZXNwb25zZShkYXRhKTtcbiAgICB9KS5jYXRjaChlcnJvciA9PiB7XG4gICAgICAkcGVuZGluZ0NvdW50ZXIudmFsdWUtLTtcbiAgICAgICRwZW5kaW5nLnZhbHVlID0gISEkcGVuZGluZ0NvdW50ZXIudmFsdWU7XG4gICAgICAkcmVzcG9uc2UudmFsdWUgPSBlcnJvcjtcbiAgICAgICRpbnZhbGlkLnZhbHVlID0gdHJ1ZTtcbiAgICB9KTtcbiAgfSwge1xuICAgIGltbWVkaWF0ZTogdHJ1ZSxcbiAgICBkZWVwOiB0eXBlb2YgbW9kZWwgPT09ICdvYmplY3QnXG4gIH0pO1xuICByZXR1cm4ge1xuICAgICRpbnZhbGlkLFxuICAgICR1bndhdGNoXG4gIH07XG59XG4vKipcbiAqIFJldHVybnMgdGhlIHJlc3VsdCBvZiBhIHN5bmMgdmFsaWRhdG9yXG4gKiBAcGFyYW0ge1ZhbGlkYXRvcn0gcnVsZVxuICogQHBhcmFtIHtSZWY8Kj59IG1vZGVsXG4gKiBAcGFyYW0ge1JlZjxCb29sZWFuPn0gJGRpcnR5XG4gKiBAcGFyYW0ge0dsb2JhbENvbmZpZ30gY29uZmlnXG4gKiBAcGFyYW0ge0Jvb2xlYW59IGNvbmZpZy4kbGF6eVxuICogQHBhcmFtIHtSZWY8Kj59ICRyZXNwb25zZVxuICogQHBhcmFtIHtWdWVJbnN0YW5jZX0gaW5zdGFuY2VcbiAqIEBwYXJhbSB7T2JqZWN0fSBzaWJsaW5nU3RhdGVcbiAqIEBwYXJhbSB7UmVmPEJvb2xlYW4+fSAkbGFzdEludmFsaWRTdGF0ZVxuICogQHJldHVybiB7eyR1bndhdGNoOiAoZnVuY3Rpb24oKToge30pLCAkaW52YWxpZDogQ29tcHV0ZWRSZWY8Ym9vbGVhbj59fVxuICovXG5cblxuZnVuY3Rpb24gY3JlYXRlU3luY1Jlc3VsdChydWxlLCBtb2RlbCwgJGRpcnR5LCBfcmVmMiwgJHJlc3BvbnNlLCBpbnN0YW5jZSwgc2libGluZ1N0YXRlLCAkbGFzdEludmFsaWRTdGF0ZSkge1xuICBsZXQge1xuICAgICRsYXp5LFxuICAgICRyZXdhcmRFYXJseVxuICB9ID0gX3JlZjI7XG5cbiAgY29uc3QgJHVud2F0Y2ggPSAoKSA9PiAoe30pO1xuXG4gIGNvbnN0ICRpbnZhbGlkID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIGlmICggLy8gcmV0dXJuIGVhcmx5IGlmICRsYXp5IG1vZGUgYW5kIG5vdCB0b3VjaGVkXG4gICAgJGxhenkgJiYgISRkaXJ0eS52YWx1ZSB8fCAvLyBJZiAkcmV3YXJkRWFybHkgbW9kZSBpcyBPTiBhbmQgbGFzdCBpbnZhbGlkIHdhcyBmYWxzZSAobm8gZXJyb3IpLCByZXR1cm4gaXQuXG4gICAgLy8gSWYgd2Ugd2FudCB0byBpbnZhbGlkYXRlLCB3ZSBqdXN0IGZsaXAgdGhlIGxhc3Qgc3RhdGUgdG8gdHJ1ZSwgY2F1c2luZyB0aGUgY29tcHV0ZWQgdG8gcnVuIGFnYWluXG4gICAgJHJld2FyZEVhcmx5ICYmICEkbGFzdEludmFsaWRTdGF0ZS52YWx1ZSkge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGxldCByZXR1cm5WYWx1ZSA9IHRydWU7XG5cbiAgICB0cnkge1xuICAgICAgY29uc3QgcmVzdWx0ID0gY2FsbFJ1bGUocnVsZSwgbW9kZWwsIHNpYmxpbmdTdGF0ZSwgaW5zdGFuY2UpO1xuICAgICAgJHJlc3BvbnNlLnZhbHVlID0gcmVzdWx0O1xuICAgICAgcmV0dXJuVmFsdWUgPSBub3JtYWxpemVWYWxpZGF0b3JSZXNwb25zZShyZXN1bHQpO1xuICAgIH0gY2F0Y2ggKGVycikge1xuICAgICAgJHJlc3BvbnNlLnZhbHVlID0gZXJyO1xuICAgIH1cblxuICAgIHJldHVybiByZXR1cm5WYWx1ZTtcbiAgfSk7XG4gIHJldHVybiB7XG4gICAgJHVud2F0Y2gsXG4gICAgJGludmFsaWRcbiAgfTtcbn1cbi8qKlxuICogUmV0dXJucyB0aGUgdmFsaWRhdGlvbiByZXN1bHQuXG4gKiBEZXRlY3RzIGFzeW5jIGFuZCBzeW5jIHZhbGlkYXRvcnMuXG4gKiBAcGFyYW0ge05vcm1hbGl6ZWRWYWxpZGF0b3J9IHJ1bGVcbiAqIEBwYXJhbSB7UmVmPCo+fSBtb2RlbFxuICogQHBhcmFtIHtSZWY8Ym9vbGVhbj59ICRkaXJ0eVxuICogQHBhcmFtIHtHbG9iYWxDb25maWd9IGNvbmZpZyAtIFZ1ZWxpZGF0ZSBjb25maWdcbiAqIEBwYXJhbSB7VnVlSW5zdGFuY2V9IGluc3RhbmNlIC0gY29tcG9uZW50IGluc3RhbmNlXG4gKiBAcGFyYW0ge3N0cmluZ30gdmFsaWRhdG9yTmFtZSAtIG5hbWUgb2YgdGhlIGN1cnJlbnQgdmFsaWRhdG9yXG4gKiBAcGFyYW0ge3N0cmluZ30gcHJvcGVydHlLZXkgLSB0aGUgY3VycmVudCBwcm9wZXJ0eSB3ZSBhcmUgdmFsaWRhdGluZ1xuICogQHBhcmFtIHtzdHJpbmd9IHByb3BlcnR5UGF0aCAtIHRoZSBkZWVwIHBhdGggdG8gdGhlIHZhbGlkYXRlZCBwcm9wZXJ0eVxuICogQHBhcmFtIHtPYmplY3R9IHNpYmxpbmdTdGF0ZVxuICogQHBhcmFtIHtSZWY8Qm9vbGVhbj59ICRsYXN0SW52YWxpZFN0YXRlIC0gdGhlIGxhc3QgaW52YWxpZCBzdGF0ZVxuICogQHBhcmFtIHtSZWY8TnVtYmVyPn0gJGxhc3RDb21taXR0ZWRPbiAtIHRoZSBsYXN0IHRpbWUgJGNvbW1pdCB3YXMgY2FsbGVkXG4gKiBAcmV0dXJuIHt7ICRwYXJhbXM6ICosICRtZXNzYWdlOiBSZWY8U3RyaW5nPiwgJHBlbmRpbmc6IFJlZjxCb29sZWFuPiwgJGludmFsaWQ6IFJlZjxCb29sZWFuPiwgJHJlc3BvbnNlOiBSZWY8Kj4sICR1bndhdGNoOiBXYXRjaFN0b3BIYW5kbGUgfX1cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZVZhbGlkYXRvclJlc3VsdChydWxlLCBtb2RlbCwgJGRpcnR5LCBjb25maWcsIGluc3RhbmNlLCB2YWxpZGF0b3JOYW1lLCBwcm9wZXJ0eUtleSwgcHJvcGVydHlQYXRoLCBzaWJsaW5nU3RhdGUsICRsYXN0SW52YWxpZFN0YXRlLCAkbGFzdENvbW1pdHRlZE9uKSB7XG4gIGNvbnN0ICRwZW5kaW5nID0gcmVmKGZhbHNlKTtcbiAgY29uc3QgJHBhcmFtcyA9IHJ1bGUuJHBhcmFtcyB8fCB7fTtcbiAgY29uc3QgJHJlc3BvbnNlID0gcmVmKG51bGwpO1xuICBsZXQgJGludmFsaWQ7XG4gIGxldCAkdW53YXRjaDtcblxuICBpZiAocnVsZS4kYXN5bmMpIHtcbiAgICAoe1xuICAgICAgJGludmFsaWQsXG4gICAgICAkdW53YXRjaFxuICAgIH0gPSBjcmVhdGVBc3luY1Jlc3VsdChydWxlLiR2YWxpZGF0b3IsIG1vZGVsLCAkcGVuZGluZywgJGRpcnR5LCBjb25maWcsICRyZXNwb25zZSwgaW5zdGFuY2UsIHJ1bGUuJHdhdGNoVGFyZ2V0cywgc2libGluZ1N0YXRlLCAkbGFzdEludmFsaWRTdGF0ZSwgJGxhc3RDb21taXR0ZWRPbikpO1xuICB9IGVsc2Uge1xuICAgICh7XG4gICAgICAkaW52YWxpZCxcbiAgICAgICR1bndhdGNoXG4gICAgfSA9IGNyZWF0ZVN5bmNSZXN1bHQocnVsZS4kdmFsaWRhdG9yLCBtb2RlbCwgJGRpcnR5LCBjb25maWcsICRyZXNwb25zZSwgaW5zdGFuY2UsIHNpYmxpbmdTdGF0ZSwgJGxhc3RJbnZhbGlkU3RhdGUpKTtcbiAgfVxuXG4gIGNvbnN0IG1lc3NhZ2UgPSBydWxlLiRtZXNzYWdlO1xuICBjb25zdCAkbWVzc2FnZSA9IGlzRnVuY3Rpb24obWVzc2FnZSkgPyBjb21wdXRlZCgoKSA9PiBtZXNzYWdlKHVud3JhcE9iaih7XG4gICAgJHBlbmRpbmcsXG4gICAgJGludmFsaWQsXG4gICAgJHBhcmFtczogdW53cmFwT2JqKCRwYXJhbXMpLFxuICAgIC8vICRwYXJhbXMgY2FuIGhvbGQgcmVmcywgc28gd2UgdW53cmFwIHRoZW0gZm9yIGVhc3kgYWNjZXNzXG4gICAgJG1vZGVsOiBtb2RlbCxcbiAgICAkcmVzcG9uc2UsXG4gICAgJHZhbGlkYXRvcjogdmFsaWRhdG9yTmFtZSxcbiAgICAkcHJvcGVydHlQYXRoOiBwcm9wZXJ0eVBhdGgsXG4gICAgJHByb3BlcnR5OiBwcm9wZXJ0eUtleVxuICB9KSkpIDogbWVzc2FnZSB8fCAnJztcbiAgcmV0dXJuIHtcbiAgICAkbWVzc2FnZSxcbiAgICAkcGFyYW1zLFxuICAgICRwZW5kaW5nLFxuICAgICRpbnZhbGlkLFxuICAgICRyZXNwb25zZSxcbiAgICAkdW53YXRjaFxuICB9O1xufVxuXG4vKipcbiAqIFNvcnRzIGEgdmFsaWRhdGlvbiBkZWZpbml0aW9uIGludG8gcnVsZXMsIGNvbmZpZ3MgYW5kIG5lc3RlZCB2YWxpZGF0b3JzLlxuICogQHBhcmFtIHtPYmplY3Q8Tm9ybWFsaXplZFZhbGlkYXRvcnxGdW5jdGlvbj59IHZhbGlkYXRpb25zUmF3XG4gKiBAcmV0dXJuIHt7IHJ1bGVzOiBPYmplY3Q8Tm9ybWFsaXplZFZhbGlkYXRvcj4sIG5lc3RlZFZhbGlkYXRvcnM6IE9iamVjdCwgY29uZmlnOiBHbG9iYWxDb25maWcgfX1cbiAqL1xuXG5mdW5jdGlvbiBzb3J0VmFsaWRhdGlvbnMoKSB7XG4gIGxldCB2YWxpZGF0aW9uc1JhdyA9IGFyZ3VtZW50cy5sZW5ndGggPiAwICYmIGFyZ3VtZW50c1swXSAhPT0gdW5kZWZpbmVkID8gYXJndW1lbnRzWzBdIDoge307XG4gIGNvbnN0IHZhbGlkYXRpb25zID0gdW5yZWYodmFsaWRhdGlvbnNSYXcpO1xuICBjb25zdCB2YWxpZGF0aW9uS2V5cyA9IE9iamVjdC5rZXlzKHZhbGlkYXRpb25zKTtcbiAgY29uc3QgcnVsZXMgPSB7fTtcbiAgY29uc3QgbmVzdGVkVmFsaWRhdG9ycyA9IHt9O1xuICBjb25zdCBjb25maWcgPSB7fTtcbiAgdmFsaWRhdGlvbktleXMuZm9yRWFjaChrZXkgPT4ge1xuICAgIGNvbnN0IHYgPSB2YWxpZGF0aW9uc1trZXldO1xuXG4gICAgc3dpdGNoICh0cnVlKSB7XG4gICAgICAvLyBJZiBpdCBpcyBhbHJlYWR5IG5vcm1hbGl6ZWQsIHVzZSBpdFxuICAgICAgY2FzZSBpc0Z1bmN0aW9uKHYuJHZhbGlkYXRvcik6XG4gICAgICAgIHJ1bGVzW2tleV0gPSB2O1xuICAgICAgICBicmVhaztcbiAgICAgIC8vIElmIGl0IGlzIGp1c3QgYSBmdW5jdGlvbiwgbm9ybWFsaXplIGl0IGZpcnN0XG4gICAgICAvLyBpbnRvIHsgJHZhbGlkYXRvcjogPEZ1bj4gfVxuXG4gICAgICBjYXNlIGlzRnVuY3Rpb24odik6XG4gICAgICAgIHJ1bGVzW2tleV0gPSB7XG4gICAgICAgICAgJHZhbGlkYXRvcjogdlxuICAgICAgICB9O1xuICAgICAgICBicmVhaztcbiAgICAgIC8vIENhdGNoICQtcHJlZml4ZWQgcHJvcGVydGllcyBhcyBjb25maWdcblxuICAgICAgY2FzZSBrZXkuc3RhcnRzV2l0aCgnJCcpOlxuICAgICAgICBjb25maWdba2V5XSA9IHY7XG4gICAgICAgIGJyZWFrO1xuICAgICAgLy8gSWYgaXQgZG9lc27igJl0IG1hdGNoIGFueSBvZiB0aGUgYWJvdmUsXG4gICAgICAvLyB0cmVhdCBhcyBuZXN0ZWRWYWxpZGF0b3JzIHN0YXRlIHByb3BlcnR5XG5cbiAgICAgIGRlZmF1bHQ6XG4gICAgICAgIG5lc3RlZFZhbGlkYXRvcnNba2V5XSA9IHY7XG4gICAgfVxuICB9KTtcbiAgcmV0dXJuIHtcbiAgICBydWxlcyxcbiAgICBuZXN0ZWRWYWxpZGF0b3JzLFxuICAgIGNvbmZpZ1xuICB9O1xufVxuXG5mdW5jdGlvbiBfZW1wdHkoKSB7fVxuXG5jb25zdCBST09UX1BBVEggPSAnX19yb290Jztcbi8qKiBAdHlwZWRlZiB7aW1wb3J0KCd2dWUtZGVtaScpLkNvbXBvbmVudFB1YmxpY0luc3RhbmNlfSBWdWVJbnN0YW5jZSAqL1xuXG4vKiogQHR5cGVkZWYge2ltcG9ydCgndnVlLWRlbWknKS5Db21wdXRlZFJlZn0gQ29tcHV0ZWRSZWYgKi9cblxuLyoqIEB0eXBlZGVmIHtpbXBvcnQoJ3Z1ZS1kZW1pJykuVW53cmFwUmVmfSBVbndyYXBSZWYgKi9cblxuLyoqIEB0eXBlZGVmIHtpbXBvcnQoJ3Z1ZS1kZW1pJykuV2F0Y2hTdG9wSGFuZGxlfSBXYXRjaFN0b3BIYW5kbGUgKi9cblxuLyoqIEB0eXBlZGVmIHtpbXBvcnQoJ3Z1ZS1kZW1pJykuV3JpdGFibGVDb21wdXRlZFJlZn0gV3JpdGFibGVDb21wdXRlZFJlZiAqL1xuXG4vKiogQHR5cGVkZWYge2ltcG9ydCgndnVlLWRlbWknKS5VbndyYXBOZXN0ZWRSZWZzfSBVbndyYXBOZXN0ZWRSZWZzICovXG5cbi8qKlxuICogQHR5cGVkZWYgTm9ybWFsaXplZFZhbGlkYXRvclxuICogQHByb3BlcnR5IHtWYWxpZGF0b3J9ICR2YWxpZGF0b3JcbiAqIEBwcm9wZXJ0eSB7U3RyaW5nIHwgUmVmPFN0cmluZz4gfCBmdW5jdGlvbigqKTogc3RyaW5nfSBbJG1lc3NhZ2VdXG4gKiBAcHJvcGVydHkge09iamVjdCB8IFJlZjxPYmplY3Q+fSBbJHBhcmFtc11cbiAqIEBwcm9wZXJ0eSB7T2JqZWN0IHwgUmVmPE9iamVjdD59IFskYXN5bmNdXG4gKiBAcHJvcGVydHkge1JlZjwqPltdfSBbJHdhdGNoVGFyZ2V0c11cbiAqL1xuXG4vKipcbiAqIFJhdyB2YWxpZGF0b3IgZnVuY3Rpb24sIGJlZm9yZSBiZWluZyBub3JtYWxpemVkXG4gKiBDYW4gcmV0dXJuIGEgUHJvbWlzZSBvciBhIHtAc2VlIFZhbGlkYXRvclJlc3BvbnNlfVxuICogQHR5cGVkZWYge2Z1bmN0aW9uKCopOiAoKFByb21pc2U8VmFsaWRhdG9yUmVzcG9uc2U+IHwgVmFsaWRhdG9yUmVzcG9uc2UpKX0gVmFsaWRhdG9yXG4gKi9cblxuLyoqXG4gKiBAdHlwZWRlZiBFcnJvck9iamVjdFxuICogQHByb3BlcnR5IHtSZWY8U3RyaW5nPn0gJG1lc3NhZ2UgLSBSZWFjdGl2ZSBlcnJvciBtZXNzYWdlXG4gKiBAcHJvcGVydHkge1JlZjxPYmplY3Q+fSAkcGFyYW1zIC0gUGFyYW1zIHBhc3NlZCBmcm9tIHdpdGhQYXJhbXNcbiAqIEBwcm9wZXJ0eSB7UmVmPEJvb2xlYW4+fSAkcGVuZGluZyAtIElmIHZhbGlkYXRpb24gaXMgcGVuZGluZ1xuICogQHByb3BlcnR5IHtTdHJpbmd9ICRwcm9wZXJ0eSAtIFN0YXRlIGtleVxuICogQHByb3BlcnR5IHtTdHJpbmd9ICRwcm9wZXJ0eVBhdGggLSBEb3Qgbm90YXRpb24gcGF0aCB0byBzdGF0ZVxuICogQHByb3BlcnR5IHtTdHJpbmd9ICR2YWxpZGF0b3IgLSBWYWxpZGF0b3IgbmFtZVxuICogQHByb3BlcnR5IHtTdHJpbmd9ICR1aWQgLSBVbmlxdWUgaWRlbnRpZmllclxuICovXG5cbi8qKlxuICogQHR5cGVkZWYgVmFsaWRhdGlvblJlc3VsdFxuICogQHByb3BlcnR5IHtSZWY8Qm9vbGVhbj59ICRwZW5kaW5nXG4gKiBAcHJvcGVydHkge1JlZjxCb29sZWFuPn0gJGRpcnR5XG4gKiBAcHJvcGVydHkge1JlZjxCb29sZWFuPn0gJGludmFsaWRcbiAqIEBwcm9wZXJ0eSB7UmVmPEJvb2xlYW4+fSAkZXJyb3JcbiAqIEBwcm9wZXJ0eSB7UmVmPFN0cmluZz59ICRwYXRoXG4gKiBAcHJvcGVydHkge0Z1bmN0aW9ufSAkdG91Y2hcbiAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259ICRyZXNldFxuICogQHByb3BlcnR5IHtDb21wdXRlZFJlZjxFcnJvck9iamVjdFtdPn0gJGVycm9yc1xuICogQHByb3BlcnR5IHtDb21wdXRlZFJlZjxFcnJvck9iamVjdFtdPn0gJHNpbGVudEVycm9yc1xuICogQHByb3BlcnR5IHtGdW5jdGlvbn0gJGNvbW1pdFxuICovXG5cbi8qKlxuICogQ3JlYXRlcyB0aGUgbWFpbiBWYWxpZGF0aW9uIFJlc3VsdHMgb2JqZWN0IGZvciBhIHN0YXRlIHRyZWVcbiAqIFdhbGtzIHRoZSB0cmVlJ3MgdG9wIGxldmVsIGJyYW5jaGVzXG4gKiBAcGFyYW0ge09iamVjdDxOb3JtYWxpemVkVmFsaWRhdG9yPn0gcnVsZXMgLSBSdWxlcyBmb3IgdGhlIGN1cnJlbnQgc3RhdGUgdHJlZVxuICogQHBhcmFtIHtPYmplY3R9IG1vZGVsIC0gQ3VycmVudCBzdGF0ZSB2YWx1ZVxuICogQHBhcmFtIHtTdHJpbmd9IGtleSAtIEtleSBmb3IgdGhlIGN1cnJlbnQgc3RhdGUgdHJlZVxuICogQHBhcmFtIHtSZXN1bHRzU3RvcmFnZX0gW3Jlc3VsdHNDYWNoZV0gLSBBIGNhY2hlIG1hcCBvZiBhbGwgdGhlIHZhbGlkYXRvcnNcbiAqIEBwYXJhbSB7U3RyaW5nfSBbcGF0aF0gLSB0aGUgY3VycmVudCBwcm9wZXJ0eSBwYXRoXG4gKiBAcGFyYW0ge0dsb2JhbENvbmZpZ30gW2NvbmZpZ10gLSB0aGUgY29uZmlnIG9iamVjdFxuICogQHBhcmFtIHtWdWVJbnN0YW5jZX0gaW5zdGFuY2VcbiAqIEBwYXJhbSB7Q29tcHV0ZWRSZWY8T2JqZWN0Pn0gZXh0ZXJuYWxSZXN1bHRzXG4gKiBAcGFyYW0ge09iamVjdH0gc2libGluZ1N0YXRlXG4gKiBAcmV0dXJuIHtWYWxpZGF0aW9uUmVzdWx0IHwge319XG4gKi9cblxuZnVuY3Rpb24gX2NhbGwoYm9keSwgdGhlbiwgZGlyZWN0KSB7XG4gIGlmIChkaXJlY3QpIHtcbiAgICByZXR1cm4gdGhlbiA/IHRoZW4oYm9keSgpKSA6IGJvZHkoKTtcbiAgfVxuXG4gIHRyeSB7XG4gICAgdmFyIHJlc3VsdCA9IFByb21pc2UucmVzb2x2ZShib2R5KCkpO1xuICAgIHJldHVybiB0aGVuID8gcmVzdWx0LnRoZW4odGhlbikgOiByZXN1bHQ7XG4gIH0gY2F0Y2ggKGUpIHtcbiAgICByZXR1cm4gUHJvbWlzZS5yZWplY3QoZSk7XG4gIH1cbn1cbi8qKlxuICogQ29sbGVjdHMgdGhlIHZhbGlkYXRpb24gcmVzdWx0cyBvZiBhbGwgbmVzdGVkIHN0YXRlIHByb3BlcnRpZXNcbiAqIEBwYXJhbSB7T2JqZWN0PE5vcm1hbGl6ZWRWYWxpZGF0b3J8RnVuY3Rpb24+fSB2YWxpZGF0aW9ucyAtIFRoZSB2YWxpZGF0aW9uXG4gKiBAcGFyYW0ge09iamVjdH0gbmVzdGVkU3RhdGUgLSBDdXJyZW50IHN0YXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gcGF0aCAtIFBhdGggdG8gY3VycmVudCBwcm9wZXJ0eVxuICogQHBhcmFtIHtSZXN1bHRzU3RvcmFnZX0gcmVzdWx0c0NhY2hlIC0gVmFsaWRhdGlvbnMgY2FjaGUgbWFwXG4gKiBAcGFyYW0ge0dsb2JhbENvbmZpZ30gY29uZmlnIC0gVGhlIGNvbmZpZyBvYmplY3RcbiAqIEBwYXJhbSB7VnVlSW5zdGFuY2V9IGluc3RhbmNlIC0gVGhlIGN1cnJlbnQgVnVlIGluc3RhbmNlXG4gKiBAcGFyYW0ge0NvbXB1dGVkUmVmPG9iamVjdD59IG5lc3RlZEV4dGVybmFsUmVzdWx0cyAtIFRoZSBleHRlcm5hbCByZXN1bHRzIGZvciB0aGlzIG5lc3RlZCBjb2xsZWN0aW9uXG4gKiBAcmV0dXJuIHtPYmplY3Q8c3RyaW5nLCBWdWVsaWRhdGVTdGF0ZT59XG4gKi9cblxuXG5mdW5jdGlvbiBfY2FsbElnbm9yZWQoYm9keSwgZGlyZWN0KSB7XG4gIHJldHVybiBfY2FsbChib2R5LCBfZW1wdHksIGRpcmVjdCk7XG59XG5cbmZ1bmN0aW9uIF9pbnZva2UoYm9keSwgdGhlbikge1xuICB2YXIgcmVzdWx0ID0gYm9keSgpO1xuXG4gIGlmIChyZXN1bHQgJiYgcmVzdWx0LnRoZW4pIHtcbiAgICByZXR1cm4gcmVzdWx0LnRoZW4odGhlbik7XG4gIH1cblxuICByZXR1cm4gdGhlbihyZXN1bHQpO1xufVxuXG5mdW5jdGlvbiBfYXN5bmMoZikge1xuICByZXR1cm4gZnVuY3Rpb24gKCkge1xuICAgIGZvciAodmFyIGFyZ3MgPSBbXSwgaSA9IDA7IGkgPCBhcmd1bWVudHMubGVuZ3RoOyBpKyspIHtcbiAgICAgIGFyZ3NbaV0gPSBhcmd1bWVudHNbaV07XG4gICAgfVxuXG4gICAgdHJ5IHtcbiAgICAgIHJldHVybiBQcm9taXNlLnJlc29sdmUoZi5hcHBseSh0aGlzLCBhcmdzKSk7XG4gICAgfSBjYXRjaCAoZSkge1xuICAgICAgcmV0dXJuIFByb21pc2UucmVqZWN0KGUpO1xuICAgIH1cbiAgfTtcbn1cblxuZnVuY3Rpb24gY3JlYXRlVmFsaWRhdGlvblJlc3VsdHMocnVsZXMsIG1vZGVsLCBrZXksIHJlc3VsdHNDYWNoZSwgcGF0aCwgY29uZmlnLCBpbnN0YW5jZSwgZXh0ZXJuYWxSZXN1bHRzLCBzaWJsaW5nU3RhdGUpIHtcbiAgLy8gY29sbGVjdCB0aGUgcHJvcGVydHkga2V5c1xuICBjb25zdCBydWxlS2V5cyA9IE9iamVjdC5rZXlzKHJ1bGVzKTtcbiAgY29uc3QgY2FjaGVkUmVzdWx0ID0gcmVzdWx0c0NhY2hlLmdldChwYXRoLCBydWxlcyk7XG4gIGNvbnN0ICRkaXJ0eSA9IHJlZihmYWxzZSk7IC8vIHN0YXRlIGZvciB0aGUgJHJld2FyZEVhcmx5IG9wdGlvblxuXG4gIC8qKiBUaGUgbGFzdCBpbnZhbGlkIHN0YXRlIG9mIHRoaXMgcHJvcGVydHkgKi9cblxuICBjb25zdCAkbGFzdEludmFsaWRTdGF0ZSA9IHJlZihmYWxzZSk7XG4gIC8qKiBUaGUgbGFzdCB0aW1lICRjb21taXQgd2FzIGNhbGxlZC4gVXNlZCB0byByZS10cmlnZ2VyIGFzeW5jIGNhbGxzICovXG5cbiAgY29uc3QgJGxhc3RDb21taXR0ZWRPbiA9IHJlZigwKTtcblxuICBpZiAoY2FjaGVkUmVzdWx0KSB7XG4gICAgLy8gaWYgdGhlIHJ1bGVzIGFyZSB0aGUgc2FtZSBhcyBiZWZvcmUsIHVzZSB0aGUgY2FjaGVkIHJlc3VsdHNcbiAgICBpZiAoIWNhY2hlZFJlc3VsdC4kcGFydGlhbCkgcmV0dXJuIGNhY2hlZFJlc3VsdDsgLy8gcmVtb3ZlIG9sZCB3YXRjaGVyc1xuXG4gICAgY2FjaGVkUmVzdWx0LiR1bndhdGNoKCk7IC8vIHVzZSB0aGUgYCRkaXJ0eS52YWx1ZWAsIHNvIHdlIGRvbnQgc2F2ZSByZWZlcmVuY2VzIGJ5IGFjY2lkZW50XG5cbiAgICAkZGlydHkudmFsdWUgPSBjYWNoZWRSZXN1bHQuJGRpcnR5LnZhbHVlO1xuICB9XG5cbiAgY29uc3QgcmVzdWx0ID0ge1xuICAgIC8vIHJlc3RvcmUgJGRpcnR5IGZyb20gY2FjaGVcbiAgICAkZGlydHksXG4gICAgJHBhdGg6IHBhdGgsXG4gICAgJHRvdWNoOiAoKSA9PiB7XG4gICAgICBpZiAoISRkaXJ0eS52YWx1ZSkgJGRpcnR5LnZhbHVlID0gdHJ1ZTtcbiAgICB9LFxuICAgICRyZXNldDogKCkgPT4ge1xuICAgICAgaWYgKCRkaXJ0eS52YWx1ZSkgJGRpcnR5LnZhbHVlID0gZmFsc2U7XG4gICAgfSxcbiAgICAkY29tbWl0OiAoKSA9PiB7fVxuICB9O1xuICAvKipcbiAgICogSWYgdGhlcmUgYXJlIG5vIHZhbGlkYXRpb24gcnVsZXMsIGl0IGlzIG1vc3QgbGlrZWx5XG4gICAqIGEgdG9wIGxldmVsIHN0YXRlLCBha2Egcm9vdFxuICAgKi9cblxuICBpZiAoIXJ1bGVLZXlzLmxlbmd0aCkge1xuICAgIC8vIGlmIHRoZXJlIGFyZSBjYWNoZWQgcmVzdWx0cywgd2Ugc2hvdWxkIG92ZXJ3cml0ZSB0aGVtIHdpdGggdGhlIG5ldyBvbmVzXG4gICAgY2FjaGVkUmVzdWx0ICYmIHJlc3VsdHNDYWNoZS5zZXQocGF0aCwgcnVsZXMsIHJlc3VsdCk7XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG4gIHJ1bGVLZXlzLmZvckVhY2gocnVsZUtleSA9PiB7XG4gICAgcmVzdWx0W3J1bGVLZXldID0gY3JlYXRlVmFsaWRhdG9yUmVzdWx0KHJ1bGVzW3J1bGVLZXldLCBtb2RlbCwgcmVzdWx0LiRkaXJ0eSwgY29uZmlnLCBpbnN0YW5jZSwgcnVsZUtleSwga2V5LCBwYXRoLCBzaWJsaW5nU3RhdGUsICRsYXN0SW52YWxpZFN0YXRlLCAkbGFzdENvbW1pdHRlZE9uKTtcbiAgfSk7XG4gIHJlc3VsdC4kZXh0ZXJuYWxSZXN1bHRzID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIGlmICghZXh0ZXJuYWxSZXN1bHRzLnZhbHVlKSByZXR1cm4gW107XG4gICAgcmV0dXJuIFtdLmNvbmNhdChleHRlcm5hbFJlc3VsdHMudmFsdWUpLm1hcCgoc3RyaW5nRXJyb3IsIGluZGV4KSA9PiAoe1xuICAgICAgJHByb3BlcnR5UGF0aDogcGF0aCxcbiAgICAgICRwcm9wZXJ0eToga2V5LFxuICAgICAgJHZhbGlkYXRvcjogJyRleHRlcm5hbFJlc3VsdHMnLFxuICAgICAgJHVpZDogYCR7cGF0aH0tZXh0ZXJuYWxSZXN1bHQtJHtpbmRleH1gLFxuICAgICAgJG1lc3NhZ2U6IHN0cmluZ0Vycm9yLFxuICAgICAgJHBhcmFtczoge30sXG4gICAgICAkcmVzcG9uc2U6IG51bGwsXG4gICAgICAkcGVuZGluZzogZmFsc2VcbiAgICB9KSk7XG4gIH0pO1xuICByZXN1bHQuJGludmFsaWQgPSBjb21wdXRlZCgoKSA9PiB7XG4gICAgY29uc3QgciA9IHJ1bGVLZXlzLnNvbWUocnVsZUtleSA9PiB1bnJlZihyZXN1bHRbcnVsZUtleV0uJGludmFsaWQpKTsgLy8gY2FjaGUgdGhlIGxhc3QgaW52YWxpZCBzdGF0ZVxuXG4gICAgJGxhc3RJbnZhbGlkU3RhdGUudmFsdWUgPSByO1xuICAgIHJldHVybiAhIXJlc3VsdC4kZXh0ZXJuYWxSZXN1bHRzLnZhbHVlLmxlbmd0aCB8fCByO1xuICB9KTtcbiAgcmVzdWx0LiRwZW5kaW5nID0gY29tcHV0ZWQoKCkgPT4gcnVsZUtleXMuc29tZShydWxlS2V5ID0+IHVucmVmKHJlc3VsdFtydWxlS2V5XS4kcGVuZGluZykpKTtcbiAgcmVzdWx0LiRlcnJvciA9IGNvbXB1dGVkKCgpID0+IHJlc3VsdC4kZGlydHkudmFsdWUgPyByZXN1bHQuJHBlbmRpbmcudmFsdWUgfHwgcmVzdWx0LiRpbnZhbGlkLnZhbHVlIDogZmFsc2UpO1xuICByZXN1bHQuJHNpbGVudEVycm9ycyA9IGNvbXB1dGVkKCgpID0+IHJ1bGVLZXlzLmZpbHRlcihydWxlS2V5ID0+IHVucmVmKHJlc3VsdFtydWxlS2V5XS4kaW52YWxpZCkpLm1hcChydWxlS2V5ID0+IHtcbiAgICBjb25zdCByZXMgPSByZXN1bHRbcnVsZUtleV07XG4gICAgcmV0dXJuIHJlYWN0aXZlKHtcbiAgICAgICRwcm9wZXJ0eVBhdGg6IHBhdGgsXG4gICAgICAkcHJvcGVydHk6IGtleSxcbiAgICAgICR2YWxpZGF0b3I6IHJ1bGVLZXksXG4gICAgICAkdWlkOiBgJHtwYXRofS0ke3J1bGVLZXl9YCxcbiAgICAgICRtZXNzYWdlOiByZXMuJG1lc3NhZ2UsXG4gICAgICAkcGFyYW1zOiByZXMuJHBhcmFtcyxcbiAgICAgICRyZXNwb25zZTogcmVzLiRyZXNwb25zZSxcbiAgICAgICRwZW5kaW5nOiByZXMuJHBlbmRpbmdcbiAgICB9KTtcbiAgfSkuY29uY2F0KHJlc3VsdC4kZXh0ZXJuYWxSZXN1bHRzLnZhbHVlKSk7XG4gIHJlc3VsdC4kZXJyb3JzID0gY29tcHV0ZWQoKCkgPT4gcmVzdWx0LiRkaXJ0eS52YWx1ZSA/IHJlc3VsdC4kc2lsZW50RXJyb3JzLnZhbHVlIDogW10pO1xuXG4gIHJlc3VsdC4kdW53YXRjaCA9ICgpID0+IHJ1bGVLZXlzLmZvckVhY2gocnVsZUtleSA9PiB7XG4gICAgcmVzdWx0W3J1bGVLZXldLiR1bndhdGNoKCk7XG4gIH0pO1xuXG4gIHJlc3VsdC4kY29tbWl0ID0gKCkgPT4ge1xuICAgICRsYXN0SW52YWxpZFN0YXRlLnZhbHVlID0gdHJ1ZTtcbiAgICAkbGFzdENvbW1pdHRlZE9uLnZhbHVlID0gRGF0ZS5ub3coKTtcbiAgfTtcblxuICByZXN1bHRzQ2FjaGUuc2V0KHBhdGgsIHJ1bGVzLCByZXN1bHQpO1xuICByZXR1cm4gcmVzdWx0O1xufVxuXG5mdW5jdGlvbiBjb2xsZWN0TmVzdGVkVmFsaWRhdGlvblJlc3VsdHModmFsaWRhdGlvbnMsIG5lc3RlZFN0YXRlLCBwYXRoLCByZXN1bHRzQ2FjaGUsIGNvbmZpZywgaW5zdGFuY2UsIG5lc3RlZEV4dGVybmFsUmVzdWx0cykge1xuICBjb25zdCBuZXN0ZWRWYWxpZGF0aW9uS2V5cyA9IE9iamVjdC5rZXlzKHZhbGlkYXRpb25zKTsgLy8gaWYgd2UgaGF2ZSBubyBzdGF0ZSwgcmV0dXJuIGVtcHR5IG9iamVjdFxuXG4gIGlmICghbmVzdGVkVmFsaWRhdGlvbktleXMubGVuZ3RoKSByZXR1cm4ge307XG4gIHJldHVybiBuZXN0ZWRWYWxpZGF0aW9uS2V5cy5yZWR1Y2UoKHJlc3VsdHMsIG5lc3RlZEtleSkgPT4ge1xuICAgIC8vIGJ1aWxkIHZhbGlkYXRpb24gcmVzdWx0cyBmb3IgbmVzdGVkIHN0YXRlXG4gICAgcmVzdWx0c1tuZXN0ZWRLZXldID0gc2V0VmFsaWRhdGlvbnMoe1xuICAgICAgdmFsaWRhdGlvbnM6IHZhbGlkYXRpb25zW25lc3RlZEtleV0sXG4gICAgICBzdGF0ZTogbmVzdGVkU3RhdGUsXG4gICAgICBrZXk6IG5lc3RlZEtleSxcbiAgICAgIHBhcmVudEtleTogcGF0aCxcbiAgICAgIHJlc3VsdHNDYWNoZSxcbiAgICAgIGdsb2JhbENvbmZpZzogY29uZmlnLFxuICAgICAgaW5zdGFuY2UsXG4gICAgICBleHRlcm5hbFJlc3VsdHM6IG5lc3RlZEV4dGVybmFsUmVzdWx0c1xuICAgIH0pO1xuICAgIHJldHVybiByZXN1bHRzO1xuICB9LCB7fSk7XG59XG4vKipcbiAqIEdlbmVyYXRlcyB0aGUgTWV0YSBmaWVsZHMgZnJvbSB0aGUgcmVzdWx0c1xuICogQHBhcmFtIHtWYWxpZGF0aW9uUmVzdWx0fHt9fSByZXN1bHRzXG4gKiBAcGFyYW0ge09iamVjdC48c3RyaW5nLCBWdWVsaWRhdGVTdGF0ZT59IG5lc3RlZFJlc3VsdHNcbiAqIEBwYXJhbSB7T2JqZWN0LjxzdHJpbmcsIFZhbGlkYXRpb25SZXN1bHQ+fSBjaGlsZFJlc3VsdHNcbiAqIEByZXR1cm4ge3skYW55RGlydHk6IFJlZjxCb29sZWFuPiwgJGVycm9yOiBSZWY8Qm9vbGVhbj4sICRpbnZhbGlkOiBSZWY8Qm9vbGVhbj4sICRlcnJvcnM6IFJlZjxFcnJvck9iamVjdFtdPiwgJGRpcnR5OiBSZWY8Qm9vbGVhbj4sICR0b3VjaDogRnVuY3Rpb24sICRyZXNldDogRnVuY3Rpb24gfX1cbiAqL1xuXG5cbmZ1bmN0aW9uIGNyZWF0ZU1ldGFGaWVsZHMocmVzdWx0cywgbmVzdGVkUmVzdWx0cywgY2hpbGRSZXN1bHRzKSB7XG4gIGNvbnN0IGFsbFJlc3VsdHMgPSBjb21wdXRlZCgoKSA9PiBbbmVzdGVkUmVzdWx0cywgY2hpbGRSZXN1bHRzXS5maWx0ZXIocmVzID0+IHJlcykucmVkdWNlKChhbGxSZXMsIHJlcykgPT4ge1xuICAgIHJldHVybiBhbGxSZXMuY29uY2F0KE9iamVjdC52YWx1ZXModW5yZWYocmVzKSkpO1xuICB9LCBbXSkpOyAvLyByZXR1cm5zIGAkZGlydHlgIGFzIHRydWUsIGlmIGFsbCBjaGlsZHJlbiBhcmUgZGlydHlcblxuICBjb25zdCAkZGlydHkgPSBjb21wdXRlZCh7XG4gICAgZ2V0KCkge1xuICAgICAgcmV0dXJuIHJlc3VsdHMuJGRpcnR5LnZhbHVlIHx8IChhbGxSZXN1bHRzLnZhbHVlLmxlbmd0aCA/IGFsbFJlc3VsdHMudmFsdWUuZXZlcnkociA9PiByLiRkaXJ0eSkgOiBmYWxzZSk7XG4gICAgfSxcblxuICAgIHNldCh2KSB7XG4gICAgICByZXN1bHRzLiRkaXJ0eS52YWx1ZSA9IHY7XG4gICAgfVxuXG4gIH0pO1xuICBjb25zdCAkc2lsZW50RXJyb3JzID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIC8vIGN1cnJlbnQgc3RhdGUgbGV2ZWwgZXJyb3JzLCBmYWxsYmFjayB0byBlbXB0eSBhcnJheSBpZiByb290XG4gICAgY29uc3QgbW9kZWxFcnJvcnMgPSB1bnJlZihyZXN1bHRzLiRzaWxlbnRFcnJvcnMpIHx8IFtdOyAvLyBjb2xsZWN0IGFsbCBuZXN0ZWQgYW5kIGNoaWxkICRzaWxlbnRFcnJvcnNcblxuICAgIGNvbnN0IG5lc3RlZEVycm9ycyA9IGFsbFJlc3VsdHMudmFsdWUuZmlsdGVyKHJlc3VsdCA9PiAodW5yZWYocmVzdWx0KS4kc2lsZW50RXJyb3JzIHx8IFtdKS5sZW5ndGgpLnJlZHVjZSgoZXJyb3JzLCByZXN1bHQpID0+IHtcbiAgICAgIHJldHVybiBlcnJvcnMuY29uY2F0KC4uLnJlc3VsdC4kc2lsZW50RXJyb3JzKTtcbiAgICB9LCBbXSk7IC8vIG1lcmdlIHRoZSAkc2lsZW50RXJyb3JzXG5cbiAgICByZXR1cm4gbW9kZWxFcnJvcnMuY29uY2F0KG5lc3RlZEVycm9ycyk7XG4gIH0pO1xuICBjb25zdCAkZXJyb3JzID0gY29tcHV0ZWQoKCkgPT4ge1xuICAgIC8vIGN1cnJlbnQgc3RhdGUgbGV2ZWwgZXJyb3JzLCBmYWxsYmFjayB0byBlbXB0eSBhcnJheSBpZiByb290XG4gICAgY29uc3QgbW9kZWxFcnJvcnMgPSB1bnJlZihyZXN1bHRzLiRlcnJvcnMpIHx8IFtdOyAvLyBjb2xsZWN0IGFsbCBuZXN0ZWQgYW5kIGNoaWxkICRlcnJvcnNcblxuICAgIGNvbnN0IG5lc3RlZEVycm9ycyA9IGFsbFJlc3VsdHMudmFsdWUuZmlsdGVyKHJlc3VsdCA9PiAodW5yZWYocmVzdWx0KS4kZXJyb3JzIHx8IFtdKS5sZW5ndGgpLnJlZHVjZSgoZXJyb3JzLCByZXN1bHQpID0+IHtcbiAgICAgIHJldHVybiBlcnJvcnMuY29uY2F0KC4uLnJlc3VsdC4kZXJyb3JzKTtcbiAgICB9LCBbXSk7IC8vIG1lcmdlIHRoZSAkZXJyb3JzXG5cbiAgICByZXR1cm4gbW9kZWxFcnJvcnMuY29uY2F0KG5lc3RlZEVycm9ycyk7XG4gIH0pO1xuICBjb25zdCAkaW52YWxpZCA9IGNvbXB1dGVkKCgpID0+IC8vIGlmIGFueSBvZiB0aGUgbmVzdGVkIHZhbHVlcyBpcyBpbnZhbGlkXG4gIGFsbFJlc3VsdHMudmFsdWUuc29tZShyID0+IHIuJGludmFsaWQpIHx8IC8vIG9yIGlmIHRoZSBjdXJyZW50IHN0YXRlIGlzIGludmFsaWRcbiAgdW5yZWYocmVzdWx0cy4kaW52YWxpZCkgfHwgLy8gZmFsbGJhY2sgdG8gZmFsc2UgaWYgaXMgcm9vdFxuICBmYWxzZSk7XG4gIGNvbnN0ICRwZW5kaW5nID0gY29tcHV0ZWQoKCkgPT4gLy8gaWYgYW55IG9mIHRoZSBuZXN0ZWQgdmFsdWVzIGlzIHBlbmRpbmdcbiAgYWxsUmVzdWx0cy52YWx1ZS5zb21lKHIgPT4gdW5yZWYoci4kcGVuZGluZykpIHx8IC8vIGlmIGFueSBvZiB0aGUgY3VycmVudCBzdGF0ZSB2YWxpZGF0b3JzIGlzIHBlbmRpbmdcbiAgdW5yZWYocmVzdWx0cy4kcGVuZGluZykgfHwgLy8gZmFsbGJhY2sgdG8gZmFsc2UgaWYgaXMgcm9vdFxuICBmYWxzZSk7XG4gIGNvbnN0ICRhbnlEaXJ0eSA9IGNvbXB1dGVkKCgpID0+IGFsbFJlc3VsdHMudmFsdWUuc29tZShyID0+IHIuJGRpcnR5KSB8fCBhbGxSZXN1bHRzLnZhbHVlLnNvbWUociA9PiByLiRhbnlEaXJ0eSkgfHwgJGRpcnR5LnZhbHVlKTtcbiAgY29uc3QgJGVycm9yID0gY29tcHV0ZWQoKCkgPT4gJGRpcnR5LnZhbHVlID8gJHBlbmRpbmcudmFsdWUgfHwgJGludmFsaWQudmFsdWUgOiBmYWxzZSk7XG5cbiAgY29uc3QgJHRvdWNoID0gKCkgPT4ge1xuICAgIC8vIGNhbGwgdGhlIHJvb3QgJHRvdWNoXG4gICAgcmVzdWx0cy4kdG91Y2goKTsgLy8gY2FsbCBhbGwgbmVzdGVkIGxldmVsICR0b3VjaFxuXG4gICAgYWxsUmVzdWx0cy52YWx1ZS5mb3JFYWNoKHJlc3VsdCA9PiB7XG4gICAgICByZXN1bHQuJHRvdWNoKCk7XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3QgJGNvbW1pdCA9ICgpID0+IHtcbiAgICAvLyBjYWxsIHRoZSByb290ICR0b3VjaFxuICAgIHJlc3VsdHMuJGNvbW1pdCgpOyAvLyBjYWxsIGFsbCBuZXN0ZWQgbGV2ZWwgJHRvdWNoXG5cbiAgICBhbGxSZXN1bHRzLnZhbHVlLmZvckVhY2gocmVzdWx0ID0+IHtcbiAgICAgIHJlc3VsdC4kY29tbWl0KCk7XG4gICAgfSk7XG4gIH07XG5cbiAgY29uc3QgJHJlc2V0ID0gKCkgPT4ge1xuICAgIC8vIHJlc2V0IHRoZSByb290ICRkaXJ0eSBzdGF0ZVxuICAgIHJlc3VsdHMuJHJlc2V0KCk7IC8vIHJlc2V0IGFsbCB0aGUgY2hpbGRyZW4gJGRpcnR5IHN0YXRlc1xuXG4gICAgYWxsUmVzdWx0cy52YWx1ZS5mb3JFYWNoKHJlc3VsdCA9PiB7XG4gICAgICByZXN1bHQuJHJlc2V0KCk7XG4gICAgfSk7XG4gIH07IC8vIEVuc3VyZSB0aGF0IGlmIGFsbCBjaGlsZCBhbmQgbmVzdGVkIHJlc3VsdHMgYXJlICRkaXJ0eSwgdGhpcyBhbHNvIGJlY29tZXMgJGRpcnR5XG5cblxuICBpZiAoYWxsUmVzdWx0cy52YWx1ZS5sZW5ndGggJiYgYWxsUmVzdWx0cy52YWx1ZS5ldmVyeShuciA9PiBuci4kZGlydHkpKSAkdG91Y2goKTtcbiAgcmV0dXJuIHtcbiAgICAkZGlydHksXG4gICAgJGVycm9ycyxcbiAgICAkaW52YWxpZCxcbiAgICAkYW55RGlydHksXG4gICAgJGVycm9yLFxuICAgICRwZW5kaW5nLFxuICAgICR0b3VjaCxcbiAgICAkcmVzZXQsXG4gICAgJHNpbGVudEVycm9ycyxcbiAgICAkY29tbWl0XG4gIH07XG59XG4vKipcbiAqIEB0eXBlZGVmIFZ1ZWxpZGF0ZVN0YXRlXG4gKiBAcHJvcGVydHkge1dyaXRhYmxlQ29tcHV0ZWRSZWY8YW55Pn0gJG1vZGVsXG4gKiBAcHJvcGVydHkge0NvbXB1dGVkUmVmPEJvb2xlYW4+fSAkZGlydHlcbiAqIEBwcm9wZXJ0eSB7Q29tcHV0ZWRSZWY8Qm9vbGVhbj59ICRlcnJvclxuICogQHByb3BlcnR5IHtDb21wdXRlZFJlZjxFcnJvck9iamVjdFtdPn0gJGVycm9yc1xuICogQHByb3BlcnR5IHtDb21wdXRlZFJlZjxCb29sZWFuPn0gJGludmFsaWRcbiAqIEBwcm9wZXJ0eSB7Q29tcHV0ZWRSZWY8Qm9vbGVhbj59ICRhbnlEaXJ0eVxuICogQHByb3BlcnR5IHtDb21wdXRlZFJlZjxCb29sZWFuPn0gJHBlbmRpbmdcbiAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259ICR0b3VjaFxuICogQHByb3BlcnR5IHtGdW5jdGlvbn0gJHJlc2V0XG4gKiBAcHJvcGVydHkge1N0cmluZ30gJHBhdGhcbiAqIEBwcm9wZXJ0eSB7Q29tcHV0ZWRSZWY8RXJyb3JPYmplY3RbXT59ICRzaWxlbnRFcnJvcnNcbiAqIEBwcm9wZXJ0eSB7RnVuY3Rpb259IFskdmFsaWRhdGVdXG4gKiBAcHJvcGVydHkge0Z1bmN0aW9ufSBbJGdldFJlc3VsdHNGb3JDaGlsZF1cbiAqIEBwcm9wZXJ0eSB7T2JqZWN0LjxzdHJpbmcsIFZ1ZWxpZGF0ZVN0YXRlPn1cbiAqL1xuXG4vKipcbiAqIE1haW4gVnVlbGlkYXRlIGJvb3RzdHJhcCBmdW5jdGlvbi5cbiAqIFVzZWQgYm90aCBmb3IgQ29tcG9zaXRpb24gQVBJIGluIGBzZXR1cGAgYW5kIGZvciBHbG9iYWwgQXBwIHVzYWdlLlxuICogVXNlZCB0byBjb2xsZWN0IHZhbGlkYXRpb24gc3RhdGUsIHdoZW4gd2Fsa2luZyByZWN1cnNpdmVseSBkb3duIHRoZSBzdGF0ZSB0cmVlXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zXG4gKiBAcGFyYW0ge09iamVjdDxOb3JtYWxpemVkVmFsaWRhdG9yfEZ1bmN0aW9uPn0gcGFyYW1zLnZhbGlkYXRpb25zXG4gKiBAcGFyYW0ge09iamVjdH0gcGFyYW1zLnN0YXRlXG4gKiBAcGFyYW0ge1N0cmluZ30gW3BhcmFtcy5rZXldIC0gQ3VycmVudCBzdGF0ZSBwcm9wZXJ0eSBrZXkuIFVzZWQgd2hlbiBiZWluZyBjYWxsZWQgb24gbmVzdGVkIGl0ZW1zXG4gKiBAcGFyYW0ge1N0cmluZ30gW3BhcmFtcy5wYXJlbnRLZXldIC0gUGFyZW50IHN0YXRlIHByb3BlcnR5IGtleS4gVXNlZCB3aGVuIGJlaW5nIGNhbGxlZCByZWN1cnNpdmVseVxuICogQHBhcmFtIHtPYmplY3Q8c3RyaW5nLCBWYWxpZGF0aW9uUmVzdWx0Pn0gW3BhcmFtcy5jaGlsZFJlc3VsdHNdIC0gVXNlZCB0byBjb2xsZWN0IGNoaWxkIHJlc3VsdHMuXG4gKiBAcGFyYW0ge1Jlc3VsdHNTdG9yYWdlfSBwYXJhbXMucmVzdWx0c0NhY2hlIC0gVGhlIGNhY2hlZCB2YWxpZGF0aW9uIHJlc3VsdHNcbiAqIEBwYXJhbSB7VnVlSW5zdGFuY2V9IHBhcmFtcy5pbnN0YW5jZSAtIFRoZSBjdXJyZW50IFZ1ZSBpbnN0YW5jZVxuICogQHBhcmFtIHtHbG9iYWxDb25maWd9IHBhcmFtcy5nbG9iYWxDb25maWcgLSBUaGUgdmFsaWRhdGlvbiBjb25maWcsIHBhc3NlZCB0byB0aGlzIHNldFZhbGlkYXRpb25zIGluc3RhbmNlLlxuICogQHBhcmFtIHtVbndyYXBOZXN0ZWRSZWZzPG9iamVjdD4gfCBSZWY8T2JqZWN0Pn0gcGFyYW1zLmV4dGVybmFsUmVzdWx0cyAtIEV4dGVybmFsIHZhbGlkYXRpb24gcmVzdWx0c1xuICogQHJldHVybiB7VW53cmFwTmVzdGVkUmVmczxWdWVsaWRhdGVTdGF0ZT59XG4gKi9cblxuXG5mdW5jdGlvbiBzZXRWYWxpZGF0aW9ucyhfcmVmKSB7XG4gIC8qKlxuICAgKiBFeGVjdXRlcyB0aGUgdmFsaWRhdG9ycyBhbmQgcmV0dXJucyB0aGUgcmVzdWx0LlxuICAgKiBAcmV0dXJuIHtQcm9taXNlPGJvb2xlYW4+fVxuICAgKi9cbiAgY29uc3QgJHZhbGlkYXRlID0gX2FzeW5jKGZ1bmN0aW9uICgpIHtcbiAgICBpZiAoISRkaXJ0eS52YWx1ZSkgJHRvdWNoKCk7XG4gICAgcmV0dXJuIF9pbnZva2UoZnVuY3Rpb24gKCkge1xuICAgICAgaWYgKG1lcmdlZENvbmZpZy4kcmV3YXJkRWFybHkpIHtcbiAgICAgICAgJGNvbW1pdCgpOyAvLyBhd2FpdCB0aGUgd2F0Y2hlcnNcblxuICAgICAgICByZXR1cm4gX2NhbGxJZ25vcmVkKG5leHRUaWNrKTtcbiAgICAgIH1cbiAgICB9LCBmdW5jdGlvbiAoKSB7XG4gICAgICAvLyBhd2FpdCB0aGUgd2F0Y2hlcnNcbiAgICAgIHJldHVybiBfY2FsbChuZXh0VGljaywgZnVuY3Rpb24gKCkge1xuICAgICAgICByZXR1cm4gbmV3IFByb21pc2UocmVzb2x2ZSA9PiB7XG4gICAgICAgICAgLy8gcmV0dXJuIHdoZXRoZXIgaXQgaXMgdmFsaWQgb3Igbm90XG4gICAgICAgICAgaWYgKCEkcGVuZGluZy52YWx1ZSkgcmV0dXJuIHJlc29sdmUoISRpbnZhbGlkLnZhbHVlKTtcbiAgICAgICAgICBjb25zdCB1bndhdGNoID0gd2F0Y2goJHBlbmRpbmcsICgpID0+IHtcbiAgICAgICAgICAgIHJlc29sdmUoISRpbnZhbGlkLnZhbHVlKTtcbiAgICAgICAgICAgIHVud2F0Y2goKTtcbiAgICAgICAgICB9KTtcbiAgICAgICAgfSk7XG4gICAgICB9KTtcbiAgICB9KTtcbiAgfSk7XG4gIC8qKlxuICAgKiBSZXR1cm5zIGEgY2hpbGQgY29tcG9uZW50J3MgcmVzdWx0cywgYmFzZWQgb24gcmVnaXN0cmF0aW9uIG5hbWVcbiAgICogQHBhcmFtIHtzdHJpbmd9IGtleVxuICAgKiBAcmV0dXJuIHtWdWVsaWRhdGVTdGF0ZX1cbiAgICovXG5cblxuICBsZXQge1xuICAgIHZhbGlkYXRpb25zLFxuICAgIHN0YXRlLFxuICAgIGtleSxcbiAgICBwYXJlbnRLZXksXG4gICAgY2hpbGRSZXN1bHRzLFxuICAgIHJlc3VsdHNDYWNoZSxcbiAgICBnbG9iYWxDb25maWcgPSB7fSxcbiAgICBpbnN0YW5jZSxcbiAgICBleHRlcm5hbFJlc3VsdHNcbiAgfSA9IF9yZWY7XG4gIGNvbnN0IHBhdGggPSBwYXJlbnRLZXkgPyBgJHtwYXJlbnRLZXl9LiR7a2V5fWAgOiBrZXk7IC8vIFNvcnQgb3V0IHRoZSB2YWxpZGF0aW9uIG9iamVjdCBpbnRvOlxuICAvLyDigJMgcnVsZXMgPSB2YWxpZGF0b3JzIGZvciBjdXJyZW50IHN0YXRlIHRyZWUgZnJhZ21lbnRcbiAgLy8g4oCUIG5lc3RlZFZhbGlkYXRvcnMgPSBuZXN0ZWQgc3RhdGUgZnJhZ21lbnRzIGtleXMgdGhhdCBtaWdodCBjb250YWluIG1vcmUgdmFsaWRhdG9yc1xuICAvLyDigJMgY29uZmlnID0gY29uZmlndXJhdGlvbiBwcm9wZXJ0aWVzIHRoYXQgYWZmZWN0IHRoaXMgc3RhdGUgZnJhZ21lbnRcblxuICBjb25zdCB7XG4gICAgcnVsZXMsXG4gICAgbmVzdGVkVmFsaWRhdG9ycyxcbiAgICBjb25maWdcbiAgfSA9IHNvcnRWYWxpZGF0aW9ucyh2YWxpZGF0aW9ucyk7XG4gIGNvbnN0IG1lcmdlZENvbmZpZyA9IE9iamVjdC5hc3NpZ24oe30sIGdsb2JhbENvbmZpZywgY29uZmlnKTsgLy8gY3JlYXRlIHByb3RlY3RlZCBzdGF0ZSBmb3IgY2FzZXMgd2hlbiB0aGUgc3RhdGUgYnJhbmNoIGRvZXMgbm90IGV4aXN0IHlldC5cbiAgLy8gVGhpcyBwcm90ZWN0cyB3aGVuIHVzaW5nIHRoZSBPcHRpb25zQVBJIGFzIHRoZSBkYXRhIGlzIGJvdW5kIGFmdGVyIHRoZSBzZXR1cCBtZXRob2RcblxuICBjb25zdCBuZXN0ZWRTdGF0ZSA9IGtleSA/IGNvbXB1dGVkKCgpID0+IHtcbiAgICBjb25zdCBzID0gdW5yZWYoc3RhdGUpO1xuICAgIHJldHVybiBzID8gdW5yZWYoc1trZXldKSA6IHVuZGVmaW5lZDtcbiAgfSkgOiBzdGF0ZTsgLy8gY2FjaGUgdGhlIGV4dGVybmFsIHJlc3VsdHMsIHNvIHdlIGNhbiByZXZlcnQgYmFjayB0byB0aGVtXG5cbiAgY29uc3QgY2FjaGVkRXh0ZXJuYWxSZXN1bHRzID0gT2JqZWN0LmFzc2lnbih7fSwgdW5yZWYoZXh0ZXJuYWxSZXN1bHRzKSB8fCB7fSk7XG4gIGNvbnN0IG5lc3RlZEV4dGVybmFsUmVzdWx0cyA9IGNvbXB1dGVkKCgpID0+IHtcbiAgICBjb25zdCByZXN1bHRzID0gdW5yZWYoZXh0ZXJuYWxSZXN1bHRzKTtcbiAgICBpZiAoIWtleSkgcmV0dXJuIHJlc3VsdHM7XG4gICAgcmV0dXJuIHJlc3VsdHMgPyB1bnJlZihyZXN1bHRzW2tleV0pIDogdW5kZWZpbmVkO1xuICB9KTsgLy8gVXNlIHJ1bGVzIGZvciB0aGUgY3VycmVudCBzdGF0ZSBmcmFnbWVudCBhbmQgdmFsaWRhdGUgaXRcblxuICBjb25zdCByZXN1bHRzID0gY3JlYXRlVmFsaWRhdGlvblJlc3VsdHMocnVsZXMsIG5lc3RlZFN0YXRlLCBrZXksIHJlc3VsdHNDYWNoZSwgcGF0aCwgbWVyZ2VkQ29uZmlnLCBpbnN0YW5jZSwgbmVzdGVkRXh0ZXJuYWxSZXN1bHRzLCBzdGF0ZSk7IC8vIFVzZSBuZXN0ZWQga2V5cyB0byByZXBlYXQgdGhlIHByb2Nlc3NcbiAgLy8gKldBUk4qOiBUaGlzIGlzIHJlY3Vyc2l2ZVxuXG4gIGNvbnN0IG5lc3RlZFJlc3VsdHMgPSBjb2xsZWN0TmVzdGVkVmFsaWRhdGlvblJlc3VsdHMobmVzdGVkVmFsaWRhdG9ycywgbmVzdGVkU3RhdGUsIHBhdGgsIHJlc3VsdHNDYWNoZSwgbWVyZ2VkQ29uZmlnLCBpbnN0YW5jZSwgbmVzdGVkRXh0ZXJuYWxSZXN1bHRzKTsgLy8gQ29sbGVjdCBhbmQgbWVyZ2UgdGhpcyBsZXZlbCB2YWxpZGF0aW9uIHJlc3VsdHNcbiAgLy8gd2l0aCBhbGwgbmVzdGVkIHZhbGlkYXRpb24gcmVzdWx0c1xuXG4gIGNvbnN0IHtcbiAgICAkZGlydHksXG4gICAgJGVycm9ycyxcbiAgICAkaW52YWxpZCxcbiAgICAkYW55RGlydHksXG4gICAgJGVycm9yLFxuICAgICRwZW5kaW5nLFxuICAgICR0b3VjaCxcbiAgICAkcmVzZXQsXG4gICAgJHNpbGVudEVycm9ycyxcbiAgICAkY29tbWl0XG4gIH0gPSBjcmVhdGVNZXRhRmllbGRzKHJlc3VsdHMsIG5lc3RlZFJlc3VsdHMsIGNoaWxkUmVzdWx0cyk7XG4gIC8qKlxuICAgKiBJZiB3ZSBoYXZlIG5vIGBrZXlgLCB0aGlzIGlzIHRoZSB0b3AgbGV2ZWwgc3RhdGVcbiAgICogV2UgZG9udCBuZWVkIGAkbW9kZWxgIHRoZXJlLlxuICAgKi9cblxuICBjb25zdCAkbW9kZWwgPSBrZXkgPyBjb21wdXRlZCh7XG4gICAgZ2V0OiAoKSA9PiB1bnJlZihuZXN0ZWRTdGF0ZSksXG4gICAgc2V0OiB2YWwgPT4ge1xuICAgICAgJGRpcnR5LnZhbHVlID0gdHJ1ZTtcbiAgICAgIGNvbnN0IHMgPSB1bnJlZihzdGF0ZSk7XG4gICAgICBjb25zdCBleHRlcm5hbCA9IHVucmVmKGV4dGVybmFsUmVzdWx0cyk7XG5cbiAgICAgIGlmIChleHRlcm5hbCkge1xuICAgICAgICBleHRlcm5hbFtrZXldID0gY2FjaGVkRXh0ZXJuYWxSZXN1bHRzW2tleV07XG4gICAgICB9XG5cbiAgICAgIGlmIChpc1JlZihzW2tleV0pKSB7XG4gICAgICAgIHNba2V5XS52YWx1ZSA9IHZhbDtcbiAgICAgIH0gZWxzZSB7XG4gICAgICAgIHNba2V5XSA9IHZhbDtcbiAgICAgIH1cbiAgICB9XG4gIH0pIDogbnVsbDtcblxuICBpZiAoa2V5ICYmIG1lcmdlZENvbmZpZy4kYXV0b0RpcnR5KSB7XG4gICAgd2F0Y2gobmVzdGVkU3RhdGUsICgpID0+IHtcbiAgICAgIGlmICghJGRpcnR5LnZhbHVlKSAkdG91Y2goKTtcbiAgICAgIGNvbnN0IGV4dGVybmFsID0gdW5yZWYoZXh0ZXJuYWxSZXN1bHRzKTtcblxuICAgICAgaWYgKGV4dGVybmFsKSB7XG4gICAgICAgIGV4dGVybmFsW2tleV0gPSBjYWNoZWRFeHRlcm5hbFJlc3VsdHNba2V5XTtcbiAgICAgIH1cbiAgICB9LCB7XG4gICAgICBmbHVzaDogJ3N5bmMnXG4gICAgfSk7XG4gIH1cblxuICBmdW5jdGlvbiAkZ2V0UmVzdWx0c0ZvckNoaWxkKGtleSkge1xuICAgIHJldHVybiAoY2hpbGRSZXN1bHRzLnZhbHVlIHx8IHt9KVtrZXldO1xuICB9XG5cbiAgZnVuY3Rpb24gJGNsZWFyRXh0ZXJuYWxSZXN1bHRzKCkge1xuICAgIGlmIChpc1JlZihleHRlcm5hbFJlc3VsdHMpKSB7XG4gICAgICBleHRlcm5hbFJlc3VsdHMudmFsdWUgPSBjYWNoZWRFeHRlcm5hbFJlc3VsdHM7XG4gICAgfSBlbHNlIHtcbiAgICAgIC8vIGlmIHRoZSBleHRlcm5hbCByZXN1bHRzIHN0YXRlIHdhcyBlbXB0eSwgd2UgbmVlZCB0byBkZWxldGUgZXZlcnkgcHJvcGVydHksIG9uZSBieSBvbmVcbiAgICAgIGlmIChPYmplY3Qua2V5cyhjYWNoZWRFeHRlcm5hbFJlc3VsdHMpLmxlbmd0aCA9PT0gMCkge1xuICAgICAgICBPYmplY3Qua2V5cyhleHRlcm5hbFJlc3VsdHMpLmZvckVhY2goayA9PiB7XG4gICAgICAgICAgZGVsZXRlIGV4dGVybmFsUmVzdWx0c1trXTtcbiAgICAgICAgfSk7XG4gICAgICB9IGVsc2Uge1xuICAgICAgICAvLyBzdGF0ZSB3YXMgbm90IGVtcHR5LCBzbyB3ZSBqdXN0IGFzc2lnbiBpdCBiYWNrIGludG8gdGhlIGN1cnJlbnQgc3RhdGVcbiAgICAgICAgT2JqZWN0LmFzc2lnbihleHRlcm5hbFJlc3VsdHMsIGNhY2hlZEV4dGVybmFsUmVzdWx0cyk7XG4gICAgICB9XG4gICAgfVxuICB9XG5cbiAgcmV0dXJuIHJlYWN0aXZlKE9iamVjdC5hc3NpZ24oe30sIHJlc3VsdHMsIHtcbiAgICAvLyBOT1RFOiBUaGUgb3JkZXIgaGVyZSBpcyB2ZXJ5IGltcG9ydGFudCwgc2luY2Ugd2Ugd2FudCB0byBvdmVycmlkZVxuICAgIC8vIHNvbWUgb2YgdGhlICpyZXN1bHRzKiBtZXRhIGZpZWxkcyB3aXRoIHRoZSBjb2xsZWN0aXZlIHZlcnNpb24gb2YgaXRcbiAgICAvLyB0aGF0IGluY2x1ZGVzIHRoZSByZXN1bHRzIG9mIG5lc3RlZCBzdGF0ZSB2YWxpZGF0aW9uIHJlc3VsdHNcbiAgICAkbW9kZWwsXG4gICAgJGRpcnR5LFxuICAgICRlcnJvcixcbiAgICAkZXJyb3JzLFxuICAgICRpbnZhbGlkLFxuICAgICRhbnlEaXJ0eSxcbiAgICAkcGVuZGluZyxcbiAgICAkdG91Y2gsXG4gICAgJHJlc2V0LFxuICAgICRwYXRoOiBwYXRoIHx8IFJPT1RfUEFUSCxcbiAgICAkc2lsZW50RXJyb3JzLFxuICAgICR2YWxpZGF0ZSxcbiAgICAkY29tbWl0XG4gIH0sIGNoaWxkUmVzdWx0cyAmJiB7XG4gICAgJGdldFJlc3VsdHNGb3JDaGlsZCxcbiAgICAkY2xlYXJFeHRlcm5hbFJlc3VsdHNcbiAgfSwgbmVzdGVkUmVzdWx0cykpO1xufVxuXG5jbGFzcyBSZXN1bHRzU3RvcmFnZSB7XG4gIGNvbnN0cnVjdG9yKCkge1xuICAgIHRoaXMuc3RvcmFnZSA9IG5ldyBNYXAoKTtcbiAgfVxuICAvKipcbiAgICogU3RvcmVzIGEgdmFsaWRhdGlvbiByZXN1bHQsIGFuZCBpdHMgcnVsZXMgYnkgaXRzIHBhdGhcbiAgICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAgICogQHBhcmFtIHtPYmplY3Q8Tm9ybWFsaXplZFZhbGlkYXRvcj59IHJ1bGVzXG4gICAqIEBwYXJhbSB7VmFsaWRhdGlvblJlc3VsdH0gcmVzdWx0XG4gICAqL1xuXG5cbiAgc2V0KHBhdGgsIHJ1bGVzLCByZXN1bHQpIHtcbiAgICB0aGlzLnN0b3JhZ2Uuc2V0KHBhdGgsIHtcbiAgICAgIHJ1bGVzLFxuICAgICAgcmVzdWx0XG4gICAgfSk7XG4gIH1cbiAgLyoqXG4gICAqIENoZWNrIGlmIHRoZSBzdG9yZWQgYHJlc3VsdHNgIGZvciB0aGUgcHJvdmlkZWQgYHBhdGhgIGhhdmUgdGhlIHNhbWUgYHJ1bGVzYCBjb21wYXJlZCB0byAnc3RvcmVkUnVsZXMnXG4gICAqIEBwYXJhbSB7U3RyaW5nfSBwYXRoXG4gICAqIEBwYXJhbSB7T2JqZWN0PE5vcm1hbGl6ZWRWYWxpZGF0b3I+fSBydWxlc1xuICAgKiBAcGFyYW0ge09iamVjdDxOb3JtYWxpemVkVmFsaWRhdG9yPn0gc3RvcmVkUnVsZXNcbiAgICogQHJldHVybiB7Qm9vbGVhbn1cbiAgICovXG5cblxuICBjaGVja1J1bGVzVmFsaWRpdHkocGF0aCwgcnVsZXMsIHN0b3JlZFJ1bGVzKSB7XG4gICAgY29uc3Qgc3RvcmVkUnVsZXNLZXlzID0gT2JqZWN0LmtleXMoc3RvcmVkUnVsZXMpO1xuICAgIGNvbnN0IG5ld1J1bGVzS2V5cyA9IE9iamVjdC5rZXlzKHJ1bGVzKTtcbiAgICBpZiAobmV3UnVsZXNLZXlzLmxlbmd0aCAhPT0gc3RvcmVkUnVsZXNLZXlzLmxlbmd0aCkgcmV0dXJuIGZhbHNlO1xuICAgIGNvbnN0IGhhc0FsbFZhbGlkYXRvcnMgPSBuZXdSdWxlc0tleXMuZXZlcnkocnVsZUtleSA9PiBzdG9yZWRSdWxlc0tleXMuaW5jbHVkZXMocnVsZUtleSkpO1xuICAgIGlmICghaGFzQWxsVmFsaWRhdG9ycykgcmV0dXJuIGZhbHNlO1xuICAgIHJldHVybiBuZXdSdWxlc0tleXMuZXZlcnkocnVsZUtleSA9PiB7XG4gICAgICBpZiAoIXJ1bGVzW3J1bGVLZXldLiRwYXJhbXMpIHJldHVybiB0cnVlO1xuICAgICAgcmV0dXJuIE9iamVjdC5rZXlzKHJ1bGVzW3J1bGVLZXldLiRwYXJhbXMpLmV2ZXJ5KHBhcmFtS2V5ID0+IHtcbiAgICAgICAgLy8gbWFrZSBzdXJlIHRvIHVud3JhcCBiZWZvcmUgY29tcGFyaW5nXG4gICAgICAgIHJldHVybiB1bnJlZihzdG9yZWRSdWxlc1tydWxlS2V5XS4kcGFyYW1zW3BhcmFtS2V5XSkgPT09IHVucmVmKHJ1bGVzW3J1bGVLZXldLiRwYXJhbXNbcGFyYW1LZXldKTtcbiAgICAgIH0pO1xuICAgIH0pO1xuICB9XG4gIC8qKlxuICAgKiBSZXR1cm5zIHRoZSBtYXRjaGVkIHJlc3VsdCBpZiBjYXRjaGUgaXMgdmFsaWRcbiAgICogQHBhcmFtIHtTdHJpbmd9IHBhdGhcbiAgICogQHBhcmFtIHtPYmplY3Q8Tm9ybWFsaXplZFZhbGlkYXRvcj59IHJ1bGVzXG4gICAqIEByZXR1cm4ge3skcGFydGlhbDogYm9vbGVhbiwgJGRpcnR5OiBSZWY8Qm9vbGVhbj4sICR1bndhdGNoOiBmdW5jdGlvbn18dW5kZWZpbmVkfFZhbGlkYXRpb25SZXN1bHR9XG4gICAqL1xuXG5cbiAgZ2V0KHBhdGgsIHJ1bGVzKSB7XG4gICAgY29uc3Qgc3RvcmVkUnVsZVJlc3VsdFBhaXIgPSB0aGlzLnN0b3JhZ2UuZ2V0KHBhdGgpO1xuICAgIGlmICghc3RvcmVkUnVsZVJlc3VsdFBhaXIpIHJldHVybiB1bmRlZmluZWQ7XG4gICAgY29uc3Qge1xuICAgICAgcnVsZXM6IHN0b3JlZFJ1bGVzLFxuICAgICAgcmVzdWx0XG4gICAgfSA9IHN0b3JlZFJ1bGVSZXN1bHRQYWlyO1xuICAgIGNvbnN0IGlzVmFsaWRDYWNoZSA9IHRoaXMuY2hlY2tSdWxlc1ZhbGlkaXR5KHBhdGgsIHJ1bGVzLCBzdG9yZWRSdWxlcyk7XG4gICAgY29uc3QgJHVud2F0Y2ggPSByZXN1bHQuJHVud2F0Y2ggPyByZXN1bHQuJHVud2F0Y2ggOiAoKSA9PiAoe30pO1xuICAgIGlmICghaXNWYWxpZENhY2hlKSByZXR1cm4ge1xuICAgICAgJGRpcnR5OiByZXN1bHQuJGRpcnR5LFxuICAgICAgJHBhcnRpYWw6IHRydWUsXG4gICAgICAkdW53YXRjaFxuICAgIH07XG4gICAgcmV0dXJuIHJlc3VsdDtcbiAgfVxuXG59XG5cbmNvbnN0IENvbGxlY3RGbGFnID0ge1xuICBDT0xMRUNUX0FMTDogdHJ1ZSxcbiAgQ09MTEVDVF9OT05FOiBmYWxzZVxufTtcbmNvbnN0IFZ1ZWxpZGF0ZUluamVjdENoaWxkUmVzdWx0cyA9IFN5bWJvbCgndnVlbGlkYXRlI2luamVjdENoaWlsZFJlc3VsdHMnKTtcbmNvbnN0IFZ1ZWxpZGF0ZVJlbW92ZUNoaWxkUmVzdWx0cyA9IFN5bWJvbCgndnVlbGlkYXRlI3JlbW92ZUNoaWlsZFJlc3VsdHMnKTtcbi8qKlxuICogQ3JlYXRlIGhlbHBlcnMgdG8gY29sbGVjdCB2YWxpZGF0aW9uIHN0YXRlIGZyb20gY2hpbGQgY29tcG9uZW50c1xuICogQHBhcmFtIHtPYmplY3R9IHBhcmFtc1xuICogQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXIgfCBCb29sZWFufSBwYXJhbXMuJHNjb3BlIC0gUGFyZW50IGNvbXBvbmVudCBzY29wZVxuICogQHJldHVybiB7e3NlbmRWYWxpZGF0aW9uUmVzdWx0c1RvUGFyZW50OiBmdW5jdGlvbltdLCBjaGlsZFJlc3VsdHM6IENvbXB1dGVkUmVmPE9iamVjdD4sIHJlbW92ZVZhbGlkYXRpb25SZXN1bHRzRnJvbVBhcmVudDogZnVuY3Rpb25bXX19XG4gKi9cblxuZnVuY3Rpb24gbmVzdGVkVmFsaWRhdGlvbnMoX3JlZikge1xuICBsZXQge1xuICAgICRzY29wZSxcbiAgICBpbnN0YW5jZVxuICB9ID0gX3JlZjtcbiAgY29uc3QgY2hpbGRSZXN1bHRzUmF3ID0ge307XG4gIGNvbnN0IGNoaWxkUmVzdWx0c0tleXMgPSByZWYoW10pO1xuICBjb25zdCBjaGlsZFJlc3VsdHMgPSBjb21wdXRlZCgoKSA9PiBjaGlsZFJlc3VsdHNLZXlzLnZhbHVlLnJlZHVjZSgocmVzdWx0cywga2V5KSA9PiB7XG4gICAgcmVzdWx0c1trZXldID0gdW5yZWYoY2hpbGRSZXN1bHRzUmF3W2tleV0pO1xuICAgIHJldHVybiByZXN1bHRzO1xuICB9LCB7fSkpO1xuICAvKipcbiAgICogQWxsb3dzIGNoaWxkcmVuIHRvIHNlbmQgdmFsaWRhdGlvbiBkYXRhIHVwIHRvIHRoZWlyIHBhcmVudC5cbiAgICogQHBhcmFtIHtPYmplY3R9IHJlc3VsdHMgLSB0aGUgcmVzdWx0c1xuICAgKiBAcGFyYW0ge09iamVjdH0gYXJnc1xuICAgKiBAcGFyYW0ge1N0cmluZ30gYXJncy4kcmVnaXN0ZXJBcyAtIHRoZSAkcmVnaXN0ZXJlZEFzIGtleVxuICAgKiBAcGFyYW0ge1N0cmluZyB8IE51bWJlciB8IEJvb2xlYW59IGFyZ3MuJHNjb3BlIC0gdGhlICRzY29wZSBrZXlcbiAgICovXG5cbiAgZnVuY3Rpb24gaW5qZWN0Q2hpbGRSZXN1bHRzSW50b1BhcmVudChyZXN1bHRzLCBfcmVmMikge1xuICAgIGxldCB7XG4gICAgICAkcmVnaXN0ZXJBczoga2V5LFxuICAgICAgJHNjb3BlOiBjaGlsZFNjb3BlLFxuICAgICAgJHN0b3BQcm9wYWdhdGlvblxuICAgIH0gPSBfcmVmMjtcbiAgICBpZiAoJHN0b3BQcm9wYWdhdGlvbiB8fCAkc2NvcGUgPT09IENvbGxlY3RGbGFnLkNPTExFQ1RfTk9ORSB8fCBjaGlsZFNjb3BlID09PSBDb2xsZWN0RmxhZy5DT0xMRUNUX05PTkUgfHwgJHNjb3BlICE9PSBDb2xsZWN0RmxhZy5DT0xMRUNUX0FMTCAmJiAkc2NvcGUgIT09IGNoaWxkU2NvcGUpIHJldHVybjtcbiAgICBjaGlsZFJlc3VsdHNSYXdba2V5XSA9IHJlc3VsdHM7XG4gICAgY2hpbGRSZXN1bHRzS2V5cy52YWx1ZS5wdXNoKGtleSk7XG4gIH0gLy8gY29tYmluZSB3aXRoIG90aGVyIGBpbmplY3RDaGlsZFJlc3VsdHNJbnRvUGFyZW50YCBmcm9tIHZ1ZWxpZGF0ZSBpbnN0YW5jZXMgaW4gdGhpcyBWdWUgY29tcG9uZW50IGluc3RhbmNlXG5cblxuICBpbnN0YW5jZS5fX3Z1ZWxpZGF0ZUluamVjdEluc3RhbmNlcyA9IFtdLmNvbmNhdChpbnN0YW5jZS5fX3Z1ZWxpZGF0ZUluamVjdEluc3RhbmNlcyB8fCBbXSwgaW5qZWN0Q2hpbGRSZXN1bHRzSW50b1BhcmVudCk7XG4gIC8qKlxuICAgKiBBbGxvd3MgY2hpbGRyZW4gdG8gcmVtb3ZlIHRoZSB2YWxpZGF0aW9uIGRhdGEgZnJvbSB0aGVpciBwYXJlbnQsIGJlZm9yZSBnZXR0aW5nIGRlc3Ryb3llZC5cbiAgICogQHBhcmFtIHtTdHJpbmd9IGtleSAtIHRoZSByZWdpc3RlcmVkQXMga2V5XG4gICAqL1xuXG4gIGZ1bmN0aW9uIHJlbW92ZUNoaWxkUmVzdWx0c0Zyb21QYXJlbnQoa2V5KSB7XG4gICAgLy8gcmVtb3ZlIHRoZSBrZXlcbiAgICBjaGlsZFJlc3VsdHNLZXlzLnZhbHVlID0gY2hpbGRSZXN1bHRzS2V5cy52YWx1ZS5maWx0ZXIoY2hpbGRLZXkgPT4gY2hpbGRLZXkgIT09IGtleSk7IC8vIHJlbW92ZSB0aGUgc3RvcmVkIGRhdGEgZm9yIHRoZSBrZXlcblxuICAgIGRlbGV0ZSBjaGlsZFJlc3VsdHNSYXdba2V5XTtcbiAgfSAvLyBjb21iaW5lIHdpdGggb3RoZXIgYHJlbW92ZUNoaWxkUmVzdWx0c0Zyb21QYXJlbnRgIGZyb20gdnVlbGlkYXRlIGluc3RhbmNlcyBpbiB0aGlzIFZ1ZSBjb21wb25lbnQgaW5zdGFuY2VcblxuXG4gIGluc3RhbmNlLl9fdnVlbGlkYXRlUmVtb3ZlSW5zdGFuY2VzID0gW10uY29uY2F0KGluc3RhbmNlLl9fdnVlbGlkYXRlUmVtb3ZlSW5zdGFuY2VzIHx8IFtdLCByZW1vdmVDaGlsZFJlc3VsdHNGcm9tUGFyZW50KTsgLy8gaW5qZWN0IHRoZSBgaW5qZWN0Q2hpbGRSZXN1bHRzSW50b1BhcmVudGAgbWV0aG9kLCBpbnRvIHRoZSBjdXJyZW50IHNjb3BlXG5cbiAgY29uc3Qgc2VuZFZhbGlkYXRpb25SZXN1bHRzVG9QYXJlbnQgPSBpbmplY3QoVnVlbGlkYXRlSW5qZWN0Q2hpbGRSZXN1bHRzLCBbXSk7IC8vIHByb3ZpZGUgdG8gYWxsIG9mIGl0cyBjaGlsZHJlbiB0aGUgc2VuZCByZXN1bHRzIHRvIHBhcmVudCBmdW5jdGlvblxuXG4gIHByb3ZpZGUoVnVlbGlkYXRlSW5qZWN0Q2hpbGRSZXN1bHRzLCBpbnN0YW5jZS5fX3Z1ZWxpZGF0ZUluamVjdEluc3RhbmNlcyk7XG4gIGNvbnN0IHJlbW92ZVZhbGlkYXRpb25SZXN1bHRzRnJvbVBhcmVudCA9IGluamVjdChWdWVsaWRhdGVSZW1vdmVDaGlsZFJlc3VsdHMsIFtdKTsgLy8gcHJvdmlkZSB0byBhbGwgb2YgaXRzIGNoaWxkcmVuIHRoZSByZW1vdmUgcmVzdWx0cyAgZnVuY3Rpb25cblxuICBwcm92aWRlKFZ1ZWxpZGF0ZVJlbW92ZUNoaWxkUmVzdWx0cywgaW5zdGFuY2UuX192dWVsaWRhdGVSZW1vdmVJbnN0YW5jZXMpO1xuICByZXR1cm4ge1xuICAgIGNoaWxkUmVzdWx0cyxcbiAgICBzZW5kVmFsaWRhdGlvblJlc3VsdHNUb1BhcmVudCxcbiAgICByZW1vdmVWYWxpZGF0aW9uUmVzdWx0c0Zyb21QYXJlbnRcbiAgfTtcbn1cblxuLyoqXG4gKiBIZWxwZXIgcHJveHkgZm9yIGluc3RhbmNlIHByb3BlcnR5IGFjY2Vzcy4gSXQgbWFrZXMgZXZlcnkgcmVmZXJlbmNlXG4gKiByZWFjdGl2ZSBmb3IgdGhlIHZhbGlkYXRpb24gZnVuY3Rpb25cbiAqIEBwYXJhbSB0YXJnZXRcbiAqIEByZXR1cm4geyp8Q29tcHV0ZWRSZWY8Kj59XG4gKi9cblxuZnVuY3Rpb24gQ29tcHV0ZWRQcm94eUZhY3RvcnkodGFyZ2V0KSB7XG4gIHJldHVybiBuZXcgUHJveHkodGFyZ2V0LCB7XG4gICAgZ2V0KHRhcmdldCwgcHJvcCkge1xuICAgICAgcmV0dXJuIHR5cGVvZiB0YXJnZXRbcHJvcF0gPT09ICdvYmplY3QnID8gQ29tcHV0ZWRQcm94eUZhY3RvcnkodGFyZ2V0W3Byb3BdKSA6IGNvbXB1dGVkKCgpID0+IHRhcmdldFtwcm9wXSk7XG4gICAgfVxuXG4gIH0pO1xufVxuXG4vKipcbiAqIEB0eXBlZGVmIEdsb2JhbENvbmZpZ1xuICogQHByb3BlcnR5IHtTdHJpbmd9IFskcmVnaXN0ZXJBc10gLSBDb25maWcgT2JqZWN0XG4gKiBAcHJvcGVydHkge1N0cmluZyB8IE51bWJlciB8IFN5bWJvbH0gWyRzY29wZV0gLSBBIHNjb3BlIHRvIGxpbWl0IGNoaWxkIGNvbXBvbmVudCByZWdpc3RyYXRpb25cbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gWyRzdG9wUHJvcGFnYXRpb25dIC0gVGVsbHMgYSBWdWUgY29tcG9uZW50IHRvIHN0b3Agc2VuZGluZyBpdHMgcmVzdWx0cyB1cCB0byB0aGUgcGFyZW50XG4gKiBAcHJvcGVydHkge1JlZjxPYmplY3Q+fSBbJGV4dGVybmFsUmVzdWx0c10gLSBFeHRlcm5hbCBlcnJvciBtZXNzYWdlcywgbGlrZSBmcm9tIHNlcnZlciB2YWxpZGF0aW9uLlxuICogQHByb3BlcnR5IHtCb29sZWFufSBbJGF1dG9EaXJ0eV0gLSBTaG91bGQgdGhlIGZvcm0gd2F0Y2ggZm9yIHN0YXRlIGNoYW5nZWQsIGFuZCBhdXRvbWF0aWNhbGx5IHNldCBgJGRpcnR5YCB0byB0cnVlLlxuICogQHByb3BlcnR5IHtCb29sZWFufSBbJGxhenldIC0gU2hvdWxkIHRoZSB2YWxpZGF0aW9ucyBiZSBsYXp5LCBhbmQgcnVuIG9ubHkgYWZ0ZXIgdGhleSBhcmUgZGlydHlcbiAqIEBwcm9wZXJ0eSB7Qm9vbGVhbn0gWyRyZXdhcmRFYXJseV0gLSBPbmNlIHZhbGlkLCByZS1ydW5zIHByb3BlcnR5IHZhbGlkYXRvcnMgb25seSBvbiBtYW51YWwgY2FsbHMgb2YgJGNvbW1pdFxuICovXG5cbi8qKlxuICogQ29tcG9zaXRpb24gQVBJIGNvbXBhdGlibGUgVnVlbGlkYXRlXG4gKiBVc2UgaW5zaWRlIHRoZSBgc2V0dXBgIGxpZmVjeWNsZSBob29rXG4gKiBAcGFyYW0ge09iamVjdCB8IEdsb2JhbENvbmZpZ30gW3ZhbGlkYXRpb25zXSAtIFZhbGlkYXRpb25zIE9iamVjdCBvciB0aGUgZ2xvYmFsQ29uZmlnLlxuICogQHBhcmFtIHtPYmplY3R9IFtzdGF0ZV0gLSBTdGF0ZSBvYmplY3QgLSByZXF1aXJlZCBpZiBgdmFsaWRhdGlvbnNgIGlzIGEgdmFsaWRhdGlvbiBvYmplY3QuXG4gKiBAcGFyYW0ge0dsb2JhbENvbmZpZ30gW2dsb2JhbENvbmZpZ10gLSBDb25maWcgT2JqZWN0XG4gKiBAcmV0dXJuIHtDb21wdXRlZFJlZjwqPn1cbiAqL1xuXG5mdW5jdGlvbiB1c2VWdWVsaWRhdGUodmFsaWRhdGlvbnMsIHN0YXRlKSB7XG4gIGxldCBnbG9iYWxDb25maWcgPSBhcmd1bWVudHMubGVuZ3RoID4gMiAmJiBhcmd1bWVudHNbMl0gIT09IHVuZGVmaW5lZCA/IGFyZ3VtZW50c1syXSA6IHt9O1xuXG4gIC8vIGlmIHdlIHBhc3Mgb25seSBvbmUgYXJndW1lbnQsIGl0cyBtb3N0IHByb2JhYmx5IHRoZSBnbG9iYWxDb25maWcuXG4gIC8vIFRoaXMgdXNlIGNhc2UgaXMgc28gcGFyZW50cyBjYW4ganVzdCBjb2xsZWN0IHJlc3VsdHMgb2YgY2hpbGQgZm9ybXMuXG4gIGlmIChhcmd1bWVudHMubGVuZ3RoID09PSAxKSB7XG4gICAgZ2xvYmFsQ29uZmlnID0gdmFsaWRhdGlvbnM7XG4gICAgdmFsaWRhdGlvbnMgPSB1bmRlZmluZWQ7XG4gICAgc3RhdGUgPSB1bmRlZmluZWQ7XG4gIH1cblxuICBsZXQge1xuICAgICRyZWdpc3RlckFzLFxuICAgICRzY29wZSA9IENvbGxlY3RGbGFnLkNPTExFQ1RfQUxMLFxuICAgICRzdG9wUHJvcGFnYXRpb24sXG4gICAgJGV4dGVybmFsUmVzdWx0cyxcbiAgICBjdXJyZW50VnVlSW5zdGFuY2VcbiAgfSA9IGdsb2JhbENvbmZpZztcbiAgY29uc3QgaW5zdGFuY2UgPSBjdXJyZW50VnVlSW5zdGFuY2UgfHwgZ2V0Q3VycmVudEluc3RhbmNlKCk7XG4gIGNvbnN0IGNvbXBvbmVudE9wdGlvbnMgPSBpbnN0YW5jZSA/IGlzVnVlMyA/IGluc3RhbmNlLnR5cGUgOiBpbnN0YW5jZS5wcm94eS4kb3B0aW9ucyA6IHt9OyAvLyBpZiB0aGVyZSBpcyBubyByZWdpc3RyYXRpb24gbmFtZSwgYWRkIG9uZS5cblxuICBpZiAoISRyZWdpc3RlckFzICYmIGluc3RhbmNlKSB7XG4gICAgLy8gTk9URTpcbiAgICAvLyAuX3VpZCAvLyBWdWUgMi54IENvbXBvc2l0aW9uLUFQSSBwbHVnaW5cbiAgICAvLyAudWlkIC8vIFZ1ZSAzLjBcbiAgICBjb25zdCB1aWQgPSBpbnN0YW5jZS51aWQgfHwgaW5zdGFuY2UuX3VpZDtcbiAgICAkcmVnaXN0ZXJBcyA9IGBfdnVlbGlkYXRlXyR7dWlkfWA7XG4gIH1cblxuICBjb25zdCB2YWxpZGF0aW9uUmVzdWx0cyA9IHJlZih7fSk7XG4gIGNvbnN0IHJlc3VsdHNDYWNoZSA9IG5ldyBSZXN1bHRzU3RvcmFnZSgpO1xuICBjb25zdCB7XG4gICAgY2hpbGRSZXN1bHRzLFxuICAgIHNlbmRWYWxpZGF0aW9uUmVzdWx0c1RvUGFyZW50LFxuICAgIHJlbW92ZVZhbGlkYXRpb25SZXN1bHRzRnJvbVBhcmVudFxuICB9ID0gaW5zdGFuY2UgPyBuZXN0ZWRWYWxpZGF0aW9ucyh7XG4gICAgJHNjb3BlLFxuICAgIGluc3RhbmNlXG4gIH0pIDoge1xuICAgIGNoaWxkUmVzdWx0czogcmVmKHt9KVxuICB9OyAvLyBPcHRpb25zIEFQSVxuXG4gIGlmICghdmFsaWRhdGlvbnMgJiYgY29tcG9uZW50T3B0aW9ucy52YWxpZGF0aW9ucykge1xuICAgIGNvbnN0IHJ1bGVzID0gY29tcG9uZW50T3B0aW9ucy52YWxpZGF0aW9ucztcbiAgICBzdGF0ZSA9IHJlZih7fSk7XG4gICAgb25CZWZvcmVNb3VudCgoKSA9PiB7XG4gICAgICAvLyBEZWxheSBiaW5kaW5nIHN0YXRlIHRvIHZhbGlkYXRpb25zIGRlZmluZWQgd2l0aCB0aGUgT3B0aW9ucyBBUEkgdW50aWwgbW91bnRpbmcsIHdoZW4gdGhlIGRhdGFcbiAgICAgIC8vIGhhcyBiZWVuIGF0dGFjaGVkIHRvIHRoZSBjb21wb25lbnQgaW5zdGFuY2UuIEZyb20gdGhhdCBwb2ludCBvbiBpdCB3aWxsIGJlIHJlYWN0aXZlLlxuICAgICAgc3RhdGUudmFsdWUgPSBpbnN0YW5jZS5wcm94eTtcbiAgICAgIHdhdGNoKCgpID0+IGlzRnVuY3Rpb24ocnVsZXMpID8gcnVsZXMuY2FsbChzdGF0ZS52YWx1ZSwgbmV3IENvbXB1dGVkUHJveHlGYWN0b3J5KHN0YXRlLnZhbHVlKSkgOiBydWxlcywgdmFsaWRhdGlvbnMgPT4ge1xuICAgICAgICB2YWxpZGF0aW9uUmVzdWx0cy52YWx1ZSA9IHNldFZhbGlkYXRpb25zKHtcbiAgICAgICAgICB2YWxpZGF0aW9ucyxcbiAgICAgICAgICBzdGF0ZSxcbiAgICAgICAgICBjaGlsZFJlc3VsdHMsXG4gICAgICAgICAgcmVzdWx0c0NhY2hlLFxuICAgICAgICAgIGdsb2JhbENvbmZpZyxcbiAgICAgICAgICBpbnN0YW5jZTogaW5zdGFuY2UucHJveHksXG4gICAgICAgICAgZXh0ZXJuYWxSZXN1bHRzOiAkZXh0ZXJuYWxSZXN1bHRzIHx8IGluc3RhbmNlLnByb3h5LnZ1ZWxpZGF0ZUV4dGVybmFsUmVzdWx0c1xuICAgICAgICB9KTtcbiAgICAgIH0sIHtcbiAgICAgICAgaW1tZWRpYXRlOiB0cnVlXG4gICAgICB9KTtcbiAgICB9KTtcbiAgICBnbG9iYWxDb25maWcgPSBjb21wb25lbnRPcHRpb25zLnZhbGlkYXRpb25zQ29uZmlnIHx8IGdsb2JhbENvbmZpZztcbiAgfSBlbHNlIHtcbiAgICBjb25zdCB2YWxpZGF0aW9uc1dhdGNoVGFyZ2V0ID0gaXNSZWYodmFsaWRhdGlvbnMpIHx8IGlzUHJveHkodmFsaWRhdGlvbnMpID8gdmFsaWRhdGlvbnMgLy8gd3JhcCBwbGFpbiBvYmplY3RzIGluIGEgcmVhY3RpdmUsIHNvIHdlIGNhbiB0cmFjayBjaGFuZ2VzIGlmIHRoZXkgaGF2ZSBjb21wdXRlZCBpbiB0aGVtLlxuICAgIDogcmVhY3RpdmUodmFsaWRhdGlvbnMgfHwge30pO1xuICAgIHdhdGNoKHZhbGlkYXRpb25zV2F0Y2hUYXJnZXQsIG5ld1ZhbGlkYXRpb25SdWxlcyA9PiB7XG4gICAgICB2YWxpZGF0aW9uUmVzdWx0cy52YWx1ZSA9IHNldFZhbGlkYXRpb25zKHtcbiAgICAgICAgdmFsaWRhdGlvbnM6IG5ld1ZhbGlkYXRpb25SdWxlcyxcbiAgICAgICAgc3RhdGUsXG4gICAgICAgIGNoaWxkUmVzdWx0cyxcbiAgICAgICAgcmVzdWx0c0NhY2hlLFxuICAgICAgICBnbG9iYWxDb25maWcsXG4gICAgICAgIGluc3RhbmNlOiBpbnN0YW5jZSA/IGluc3RhbmNlLnByb3h5IDoge30sXG4gICAgICAgIGV4dGVybmFsUmVzdWx0czogJGV4dGVybmFsUmVzdWx0c1xuICAgICAgfSk7XG4gICAgfSwge1xuICAgICAgaW1tZWRpYXRlOiB0cnVlXG4gICAgfSk7XG4gIH1cblxuICBpZiAoaW5zdGFuY2UpIHtcbiAgICAvLyBzZW5kIGFsbCB0aGUgZGF0YSB0byB0aGUgcGFyZW50IHdoZW4gdGhlIGZ1bmN0aW9uIGlzIGludm9rZWQgaW5zaWRlIHNldHVwLlxuICAgIHNlbmRWYWxpZGF0aW9uUmVzdWx0c1RvUGFyZW50LmZvckVhY2goZiA9PiBmKHZhbGlkYXRpb25SZXN1bHRzLCB7XG4gICAgICAkcmVnaXN0ZXJBcyxcbiAgICAgICRzY29wZSxcbiAgICAgICRzdG9wUHJvcGFnYXRpb25cbiAgICB9KSk7IC8vIGJlZm9yZSB0aGlzIGNvbXBvbmVudCBpcyBkZXN0cm95ZWQsIHJlbW92ZSBhbGwgdGhlIGRhdGEgZnJvbSB0aGUgcGFyZW50LlxuXG4gICAgb25CZWZvcmVVbm1vdW50KCgpID0+IHJlbW92ZVZhbGlkYXRpb25SZXN1bHRzRnJvbVBhcmVudC5mb3JFYWNoKGYgPT4gZigkcmVnaXN0ZXJBcykpKTtcbiAgfVxuXG4gIHJldHVybiBjb21wdXRlZCgoKSA9PiB7XG4gICAgcmV0dXJuIE9iamVjdC5hc3NpZ24oe30sIHVucmVmKHZhbGlkYXRpb25SZXN1bHRzLnZhbHVlKSwgY2hpbGRSZXN1bHRzLnZhbHVlKTtcbiAgfSk7XG59XG5cbmV4cG9ydCB7IENvbGxlY3RGbGFnLCB1c2VWdWVsaWRhdGUgYXMgZGVmYXVsdCwgdXNlVnVlbGlkYXRlIH07XG4iLCJpbXBvcnQgeyB1bnJlZiB9IGZyb20gJ3Z1ZS1kZW1pJztcblxuZnVuY3Rpb24gaXNGdW5jdGlvbih2YWwpIHtcbiAgcmV0dXJuIHR5cGVvZiB2YWwgPT09ICdmdW5jdGlvbic7XG59XG5mdW5jdGlvbiBpc09iamVjdChvKSB7XG4gIHJldHVybiBvICE9PSBudWxsICYmIHR5cGVvZiBvID09PSAnb2JqZWN0JyAmJiAhQXJyYXkuaXNBcnJheShvKTtcbn1cbi8qKlxuICogUmV0dXJucyBhIHN0YW5kYXJkIFZhbGlkYXRvck9iamVjdFxuICogV3JhcHMgYSBwbGFpbiBmdW5jdGlvbiBpbnRvIGEgVmFsaWRhdG9yT2JqZWN0XG4gKiBAcGFyYW0ge05vcm1hbGl6ZWRWYWxpZGF0b3J8RnVuY3Rpb259IHZhbGlkYXRvclxuICogQHJldHVybiB7Tm9ybWFsaXplZFZhbGlkYXRvcn1cbiAqL1xuXG5mdW5jdGlvbiBub3JtYWxpemVWYWxpZGF0b3JPYmplY3QodmFsaWRhdG9yKSB7XG4gIHJldHVybiBpc0Z1bmN0aW9uKHZhbGlkYXRvci4kdmFsaWRhdG9yKSA/IE9iamVjdC5hc3NpZ24oe30sIHZhbGlkYXRvcikgOiB7XG4gICAgJHZhbGlkYXRvcjogdmFsaWRhdG9yXG4gIH07XG59XG5mdW5jdGlvbiBpc1Byb21pc2Uob2JqZWN0KSB7XG4gIHJldHVybiBpc09iamVjdChvYmplY3QpICYmIGlzRnVuY3Rpb24ob2JqZWN0LnRoZW4pO1xufVxuLyoqXG4gKiBVbndyYXBzIGEgVmFsaWRhdG9yUmVzcG9uc2Ugb2JqZWN0LCBpbnRvIGEgYm9vbGVhbi5cbiAqIEBwYXJhbSB7VmFsaWRhdG9yUmVzcG9uc2V9IHJlc3VsdFxuICogQHJldHVybiB7Ym9vbGVhbn1cbiAqL1xuXG5mdW5jdGlvbiB1bndyYXBWYWxpZGF0b3JSZXNwb25zZShyZXN1bHQpIHtcbiAgaWYgKHR5cGVvZiByZXN1bHQgPT09ICdvYmplY3QnKSByZXR1cm4gcmVzdWx0LiR2YWxpZDtcbiAgcmV0dXJuIHJlc3VsdDtcbn1cbi8qKlxuICogVW53cmFwcyBhIGBOb3JtYWxpemVkVmFsaWRhdG9yYCBvYmplY3QsIHJldHVybmluZyBpdHMgdmFsaWRhdG9yIGZ1bmN0aW9uLlxuICogQHBhcmFtIHtOb3JtYWxpemVkVmFsaWRhdG9yIHwgRnVuY3Rpb259IHZhbGlkYXRvclxuICogQHJldHVybiB7ZnVuY3Rpb259XG4gKi9cblxuZnVuY3Rpb24gdW53cmFwTm9ybWFsaXplZFZhbGlkYXRvcih2YWxpZGF0b3IpIHtcbiAgcmV0dXJuIHZhbGlkYXRvci4kdmFsaWRhdG9yIHx8IHZhbGlkYXRvcjtcbn1cblxuLyoqXG4gKiBBbGxvd3MgYXR0YWNoaW5nIHBhcmFtZXRlcnMgdG8gYSB2YWxpZGF0b3JcbiAqIEBwYXJhbSB7T2JqZWN0fSAkcGFyYW1zXG4gKiBAcGFyYW0ge05vcm1hbGl6ZWRWYWxpZGF0b3J8RnVuY3Rpb259ICR2YWxpZGF0b3JcbiAqIEByZXR1cm4ge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxuZnVuY3Rpb24gd2l0aFBhcmFtcygkcGFyYW1zLCAkdmFsaWRhdG9yKSB7XG4gIGlmICghaXNPYmplY3QoJHBhcmFtcykpIHRocm93IG5ldyBFcnJvcihgW0B2dWVsaWRhdGUvdmFsaWRhdG9yc106IEZpcnN0IHBhcmFtZXRlciB0byBcIndpdGhQYXJhbXNcIiBzaG91bGQgYmUgYW4gb2JqZWN0LCBwcm92aWRlZCAke3R5cGVvZiAkcGFyYW1zfWApO1xuICBpZiAoIWlzT2JqZWN0KCR2YWxpZGF0b3IpICYmICFpc0Z1bmN0aW9uKCR2YWxpZGF0b3IpKSB0aHJvdyBuZXcgRXJyb3IoYFtAdnVlbGlkYXRlL3ZhbGlkYXRvcnNdOiBWYWxpZGF0b3IgbXVzdCBiZSBhIGZ1bmN0aW9uIG9yIG9iamVjdCB3aXRoICR2YWxpZGF0b3IgcGFyYW1ldGVyYCk7XG4gIGNvbnN0IHZhbGlkYXRvck9iaiA9IG5vcm1hbGl6ZVZhbGlkYXRvck9iamVjdCgkdmFsaWRhdG9yKTtcbiAgdmFsaWRhdG9yT2JqLiRwYXJhbXMgPSBPYmplY3QuYXNzaWduKHt9LCB2YWxpZGF0b3JPYmouJHBhcmFtcyB8fCB7fSwgJHBhcmFtcyk7XG4gIHJldHVybiB2YWxpZGF0b3JPYmo7XG59XG5cbi8qKlxuICogQGNhbGxiYWNrIE1lc3NhZ2VDYWxsYmFja1xuICogQHBhcmFtIHtPYmplY3R9IHBhcmFtc1xuICogQHJldHVybiBTdHJpbmdcbiAqL1xuXG4vKipcbiAqIEF0dGFjaGVzIGEgbWVzc2FnZSB0byBhIHZhbGlkYXRvclxuICogQHBhcmFtIHtNZXNzYWdlQ2FsbGJhY2sgfCBTdHJpbmd9ICRtZXNzYWdlXG4gKiBAcGFyYW0ge05vcm1hbGl6ZWRWYWxpZGF0b3J8RnVuY3Rpb259ICR2YWxpZGF0b3JcbiAqIEByZXR1cm4ge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxuZnVuY3Rpb24gd2l0aE1lc3NhZ2UoJG1lc3NhZ2UsICR2YWxpZGF0b3IpIHtcbiAgaWYgKCFpc0Z1bmN0aW9uKCRtZXNzYWdlKSAmJiB0eXBlb2YgdW5yZWYoJG1lc3NhZ2UpICE9PSAnc3RyaW5nJykgdGhyb3cgbmV3IEVycm9yKGBbQHZ1ZWxpZGF0ZS92YWxpZGF0b3JzXTogRmlyc3QgcGFyYW1ldGVyIHRvIFwid2l0aE1lc3NhZ2VcIiBzaG91bGQgYmUgc3RyaW5nIG9yIGEgZnVuY3Rpb24gcmV0dXJuaW5nIGEgc3RyaW5nLCBwcm92aWRlZCAke3R5cGVvZiAkbWVzc2FnZX1gKTtcbiAgaWYgKCFpc09iamVjdCgkdmFsaWRhdG9yKSAmJiAhaXNGdW5jdGlvbigkdmFsaWRhdG9yKSkgdGhyb3cgbmV3IEVycm9yKGBbQHZ1ZWxpZGF0ZS92YWxpZGF0b3JzXTogVmFsaWRhdG9yIG11c3QgYmUgYSBmdW5jdGlvbiBvciBvYmplY3Qgd2l0aCAkdmFsaWRhdG9yIHBhcmFtZXRlcmApO1xuICBjb25zdCB2YWxpZGF0b3JPYmogPSBub3JtYWxpemVWYWxpZGF0b3JPYmplY3QoJHZhbGlkYXRvcik7XG4gIHZhbGlkYXRvck9iai4kbWVzc2FnZSA9ICRtZXNzYWdlO1xuICByZXR1cm4gdmFsaWRhdG9yT2JqO1xufVxuXG4vKipcbiAqIEB0eXBlZGVmIHtmdW5jdGlvbigqKTogUHJvbWlzZTxib29sZWFufFZhbGlkYXRvclJlc3BvbnNlPn0gYXN5bmNWYWxpZGF0b3JcbiAqL1xuXG4vKipcbiAqIEB0eXBlZGVmIHtSZWY8Kj5bXXxmdW5jdGlvbigqKTogKn0gd2F0Y2hUYXJnZXRzXG4gKi9cblxuLyoqXG4gKiBXcmFwcyB2YWxpZGF0b3JzIHRoYXQgcmV0dXJucyBhIFByb21pc2UuXG4gKiBAcGFyYW0ge2FzeW5jVmFsaWRhdG9yfSAkdmFsaWRhdG9yXG4gKiBAcGFyYW0ge3dhdGNoVGFyZ2V0c30gJHdhdGNoVGFyZ2V0c1xuICogQHJldHVybiB7eyRhc3luYzogYm9vbGVhbiwgJHZhbGlkYXRvcjogYXN5bmNWYWxpZGF0b3IsICR3YXRjaFRhcmdldHM6IHdhdGNoVGFyZ2V0c319XG4gKi9cblxuZnVuY3Rpb24gd2l0aEFzeW5jKCR2YWxpZGF0b3IsICR3YXRjaFRhcmdldHMgPSBbXSkge1xuICBjb25zdCB2YWxpZGF0b3JPYmogPSBub3JtYWxpemVWYWxpZGF0b3JPYmplY3QoJHZhbGlkYXRvcik7XG4gIHJldHVybiBPYmplY3QuYXNzaWduKHt9LCB2YWxpZGF0b3JPYmosIHtcbiAgICAkYXN5bmM6IHRydWUsXG4gICAgJHdhdGNoVGFyZ2V0c1xuICB9KTtcbn1cblxuZnVuY3Rpb24gZm9yRWFjaCh2YWxpZGF0b3JzKSB7XG4gIHJldHVybiB7XG4gICAgJHZhbGlkYXRvcihjb2xsZWN0aW9uLCAuLi5vdGhlcnMpIHtcbiAgICAgIC8vIGdvIG92ZXIgdGhlIGNvbGxlY3Rpb24uIEl0IGNhbiBiZSBhIHJlZiBhcyB3ZWxsLlxuICAgICAgcmV0dXJuIHVucmVmKGNvbGxlY3Rpb24pLnJlZHVjZSgocHJldmlvdXMsIGNvbGxlY3Rpb25JdGVtKSA9PiB7XG4gICAgICAgIC8vIGdvIG92ZXIgZWFjaCBwcm9wZXJ0eVxuICAgICAgICBjb25zdCBjb2xsZWN0aW9uRW50cnlSZXN1bHQgPSBPYmplY3QuZW50cmllcyhjb2xsZWN0aW9uSXRlbSkucmVkdWNlKChhbGwsIFtwcm9wZXJ0eSwgJG1vZGVsXSkgPT4ge1xuICAgICAgICAgIC8vIGdldCB0aGUgdmFsaWRhdG9ycyBmb3IgdGhpcyBwcm9wZXJ0eVxuICAgICAgICAgIGNvbnN0IGlubmVyVmFsaWRhdG9ycyA9IHZhbGlkYXRvcnNbcHJvcGVydHldIHx8IHt9OyAvLyBnbyBvdmVyIGVhY2ggdmFsaWRhdG9yIGFuZCBydW4gaXRcblxuICAgICAgICAgIGNvbnN0IHByb3BlcnR5UmVzdWx0ID0gT2JqZWN0LmVudHJpZXMoaW5uZXJWYWxpZGF0b3JzKS5yZWR1Y2UoKGFsbCwgW3ZhbGlkYXRvck5hbWUsIGN1cnJlbnRWYWxpZGF0b3JdKSA9PiB7XG4gICAgICAgICAgICAvLyBleHRyYWN0IHRoZSB2YWxpZGF0b3IuIFN1cHBvcnRzIHNpbXBsZSBhbmQgZXh0ZW5kZWQgdmFsaWRhdG9ycy5cbiAgICAgICAgICAgIGNvbnN0IHZhbGlkYXRvckZ1bmN0aW9uID0gdW53cmFwTm9ybWFsaXplZFZhbGlkYXRvcihjdXJyZW50VmFsaWRhdG9yKTsgLy8gQ2FsbCB0aGUgdmFsaWRhdG9yLCBwYXNzaW5nIHRoZSBWTSBhcyB0aGlzLCB0aGUgdmFsdWUsIGN1cnJlbnQgaXRlcmF0ZWQgb2JqZWN0IGFuZCB0aGUgcmVzdC5cblxuICAgICAgICAgICAgY29uc3QgJHJlc3BvbnNlID0gdmFsaWRhdG9yRnVuY3Rpb24uY2FsbCh0aGlzLCAkbW9kZWwsIGNvbGxlY3Rpb25JdGVtLCAuLi5vdGhlcnMpOyAvLyBleHRyYWN0IHRoZSB2YWxpZCBmcm9tIHRoZSByZXN1bHRcblxuICAgICAgICAgICAgY29uc3QgJHZhbGlkID0gdW53cmFwVmFsaWRhdG9yUmVzcG9uc2UoJHJlc3BvbnNlKTsgLy8gc3RvcmUgdGhlIGVudGlyZSByZXNwb25zZSBmb3IgbGF0ZXJcblxuICAgICAgICAgICAgYWxsLiRkYXRhW3ZhbGlkYXRvck5hbWVdID0gJHJlc3BvbnNlO1xuICAgICAgICAgICAgYWxsLiRkYXRhLiRpbnZhbGlkID0gISR2YWxpZCB8fCAhIWFsbC4kZGF0YS4kaW52YWxpZDtcbiAgICAgICAgICAgIGFsbC4kZGF0YS4kZXJyb3IgPSBhbGwuJGRhdGEuJGludmFsaWQ7IC8vIGlmIG5vdCB2YWxpZCwgZ2V0IHRoZSAkbWVzc2FnZVxuXG4gICAgICAgICAgICBpZiAoISR2YWxpZCkge1xuICAgICAgICAgICAgICBsZXQgJG1lc3NhZ2UgPSBjdXJyZW50VmFsaWRhdG9yLiRtZXNzYWdlIHx8ICcnO1xuICAgICAgICAgICAgICBjb25zdCAkcGFyYW1zID0gY3VycmVudFZhbGlkYXRvci4kcGFyYW1zIHx8IHt9OyAvLyBJZiAkbWVzc2FnZSBpcyBhIGZ1bmN0aW9uLCB3ZSBjYWxsIGl0IHdpdGggdGhlIGFwcHJvcHJpYXRlIHBhcmFtZXRlcnNcblxuICAgICAgICAgICAgICBpZiAodHlwZW9mICRtZXNzYWdlID09PSAnZnVuY3Rpb24nKSB7XG4gICAgICAgICAgICAgICAgJG1lc3NhZ2UgPSAkbWVzc2FnZSh7XG4gICAgICAgICAgICAgICAgICAkcGVuZGluZzogZmFsc2UsXG4gICAgICAgICAgICAgICAgICAkaW52YWxpZDogISR2YWxpZCxcbiAgICAgICAgICAgICAgICAgICRwYXJhbXMsXG4gICAgICAgICAgICAgICAgICAkbW9kZWwsXG4gICAgICAgICAgICAgICAgICAkcmVzcG9uc2VcbiAgICAgICAgICAgICAgICB9KTtcbiAgICAgICAgICAgICAgfSAvLyBzYXZlIHRoZSBlcnJvciBvYmplY3RcblxuXG4gICAgICAgICAgICAgIGFsbC4kZXJyb3JzLnB1c2goe1xuICAgICAgICAgICAgICAgICRwcm9wZXJ0eTogcHJvcGVydHksXG4gICAgICAgICAgICAgICAgJG1lc3NhZ2UsXG4gICAgICAgICAgICAgICAgJHBhcmFtcyxcbiAgICAgICAgICAgICAgICAkcmVzcG9uc2UsXG4gICAgICAgICAgICAgICAgJG1vZGVsLFxuICAgICAgICAgICAgICAgICRwZW5kaW5nOiBmYWxzZSxcbiAgICAgICAgICAgICAgICAkdmFsaWRhdG9yOiB2YWxpZGF0b3JOYW1lXG4gICAgICAgICAgICAgIH0pO1xuICAgICAgICAgICAgfVxuXG4gICAgICAgICAgICByZXR1cm4ge1xuICAgICAgICAgICAgICAkdmFsaWQ6IGFsbC4kdmFsaWQgJiYgJHZhbGlkLFxuICAgICAgICAgICAgICAkZGF0YTogYWxsLiRkYXRhLFxuICAgICAgICAgICAgICAkZXJyb3JzOiBhbGwuJGVycm9yc1xuICAgICAgICAgICAgfTtcbiAgICAgICAgICB9LCB7XG4gICAgICAgICAgICAkdmFsaWQ6IHRydWUsXG4gICAgICAgICAgICAkZGF0YToge30sXG4gICAgICAgICAgICAkZXJyb3JzOiBbXVxuICAgICAgICAgIH0pO1xuICAgICAgICAgIGFsbC4kZGF0YVtwcm9wZXJ0eV0gPSBwcm9wZXJ0eVJlc3VsdC4kZGF0YTtcbiAgICAgICAgICBhbGwuJGVycm9yc1twcm9wZXJ0eV0gPSBwcm9wZXJ0eVJlc3VsdC4kZXJyb3JzO1xuICAgICAgICAgIHJldHVybiB7XG4gICAgICAgICAgICAkdmFsaWQ6IGFsbC4kdmFsaWQgJiYgcHJvcGVydHlSZXN1bHQuJHZhbGlkLFxuICAgICAgICAgICAgJGRhdGE6IGFsbC4kZGF0YSxcbiAgICAgICAgICAgICRlcnJvcnM6IGFsbC4kZXJyb3JzXG4gICAgICAgICAgfTtcbiAgICAgICAgfSwge1xuICAgICAgICAgICR2YWxpZDogdHJ1ZSxcbiAgICAgICAgICAkZGF0YToge30sXG4gICAgICAgICAgJGVycm9yczoge31cbiAgICAgICAgfSk7XG4gICAgICAgIHJldHVybiB7XG4gICAgICAgICAgJHZhbGlkOiBwcmV2aW91cy4kdmFsaWQgJiYgY29sbGVjdGlvbkVudHJ5UmVzdWx0LiR2YWxpZCxcbiAgICAgICAgICAkZGF0YTogcHJldmlvdXMuJGRhdGEuY29uY2F0KGNvbGxlY3Rpb25FbnRyeVJlc3VsdC4kZGF0YSksXG4gICAgICAgICAgJGVycm9yczogcHJldmlvdXMuJGVycm9ycy5jb25jYXQoY29sbGVjdGlvbkVudHJ5UmVzdWx0LiRlcnJvcnMpXG4gICAgICAgIH07XG4gICAgICB9LCB7XG4gICAgICAgICR2YWxpZDogdHJ1ZSxcbiAgICAgICAgJGRhdGE6IFtdLFxuICAgICAgICAkZXJyb3JzOiBbXVxuICAgICAgfSk7XG4gICAgfSxcblxuICAgIC8vIGNvbGxlY3QgYWxsIHRoZSB2YWxpZGF0aW9uIGVycm9ycyBpbnRvIGEgMiBkaW1lbnNpb25hbCBhcnJheSwgZm9yIGVhY2ggZW50cnkgaW4gdGhlIGNvbGxlY3Rpb24sIHlvdSBoYXZlIGFuIGFycmF5IG9mIGVycm9yIG1lc3NhZ2VzLlxuICAgICRtZXNzYWdlOiAoe1xuICAgICAgJHJlc3BvbnNlXG4gICAgfSkgPT4gJHJlc3BvbnNlID8gJHJlc3BvbnNlLiRlcnJvcnMubWFwKGNvbnRleHQgPT4ge1xuICAgICAgcmV0dXJuIE9iamVjdC52YWx1ZXMoY29udGV4dCkubWFwKGVycm9ycyA9PiBlcnJvcnMubWFwKGVycm9yID0+IGVycm9yLiRtZXNzYWdlKSkucmVkdWNlKChhLCBiKSA9PiBhLmNvbmNhdChiKSwgW10pO1xuICAgIH0pIDogW11cbiAgfTtcbn1cblxuLy8gXCJyZXF1aXJlZFwiIGNvcmUsIHVzZWQgaW4gYWxtb3N0IGV2ZXJ5IHZhbGlkYXRvciB0byBhbGxvdyBlbXB0eSB2YWx1ZXNcbmNvbnN0IHJlcSA9IHZhbHVlID0+IHtcbiAgdmFsdWUgPSB1bnJlZih2YWx1ZSk7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgcmV0dXJuICEhdmFsdWUubGVuZ3RoO1xuXG4gIGlmICh2YWx1ZSA9PT0gdW5kZWZpbmVkIHx8IHZhbHVlID09PSBudWxsKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKHZhbHVlID09PSBmYWxzZSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkge1xuICAgIC8vIGludmFsaWQgZGF0ZSB3b24ndCBwYXNzXG4gICAgcmV0dXJuICFpc05hTih2YWx1ZS5nZXRUaW1lKCkpO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSA9PT0gJ29iamVjdCcpIHtcbiAgICBmb3IgKGxldCBfIGluIHZhbHVlKSByZXR1cm4gdHJ1ZTtcblxuICAgIHJldHVybiBmYWxzZTtcbiAgfVxuXG4gIHJldHVybiAhIVN0cmluZyh2YWx1ZSkubGVuZ3RoO1xufTtcbi8qKlxuICogUmV0dXJucyB0aGUgbGVuZ3RoIG9mIGFuIGFyYml0cmFyeSB2YWx1ZVxuICogQHBhcmFtIHtBcnJheXxPYmplY3R8U3RyaW5nfSB2YWx1ZVxuICogQHJldHVybiB7bnVtYmVyfVxuICovXG5cbmNvbnN0IGxlbiA9IHZhbHVlID0+IHtcbiAgdmFsdWUgPSB1bnJlZih2YWx1ZSk7XG4gIGlmIChBcnJheS5pc0FycmF5KHZhbHVlKSkgcmV0dXJuIHZhbHVlLmxlbmd0aDtcblxuICBpZiAodHlwZW9mIHZhbHVlID09PSAnb2JqZWN0Jykge1xuICAgIHJldHVybiBPYmplY3Qua2V5cyh2YWx1ZSkubGVuZ3RoO1xuICB9XG5cbiAgcmV0dXJuIFN0cmluZyh2YWx1ZSkubGVuZ3RoO1xufTtcbi8qKlxuICogUmVnZXggYmFzZWQgdmFsaWRhdG9yIHRlbXBsYXRlXG4gKiBAcGFyYW0ge1JlZ0V4cH0gZXhwclxuICogQHJldHVybiB7ZnVuY3Rpb24oKj0pOiBib29sZWFufVxuICovXG5cbmZ1bmN0aW9uIHJlZ2V4KGV4cHIpIHtcbiAgcmV0dXJuIHZhbHVlID0+IHtcbiAgICB2YWx1ZSA9IHVucmVmKHZhbHVlKTtcbiAgICByZXR1cm4gIXJlcSh2YWx1ZSkgfHwgZXhwci50ZXN0KHZhbHVlKTtcbiAgfTtcbn1cblxudmFyIGNvbW1vbiA9IC8qI19fUFVSRV9fKi9PYmplY3QuZnJlZXplKHtcbiAgX19wcm90b19fOiBudWxsLFxuICB3aXRoUGFyYW1zOiB3aXRoUGFyYW1zLFxuICB3aXRoTWVzc2FnZTogd2l0aE1lc3NhZ2UsXG4gIHdpdGhBc3luYzogd2l0aEFzeW5jLFxuICBmb3JFYWNoOiBmb3JFYWNoLFxuICByZXE6IHJlcSxcbiAgbGVuOiBsZW4sXG4gIHJlZ2V4OiByZWdleCxcbiAgdW53cmFwOiB1bnJlZixcbiAgdW53cmFwTm9ybWFsaXplZFZhbGlkYXRvcjogdW53cmFwTm9ybWFsaXplZFZhbGlkYXRvcixcbiAgdW53cmFwVmFsaWRhdG9yUmVzcG9uc2U6IHVud3JhcFZhbGlkYXRvclJlc3BvbnNlLFxuICBub3JtYWxpemVWYWxpZGF0b3JPYmplY3Q6IG5vcm1hbGl6ZVZhbGlkYXRvck9iamVjdFxufSk7XG5cbnZhciBhbHBoYSQxID0gcmVnZXgoL15bYS16QS1aXSokLyk7XG5cbi8qKlxuICogVmFsaWRhdGUgaWYgdmFsdWUgaXMgYWxwaGFiZXRpY2FsIHN0cmluZy5cbiAqIEB0eXBlIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbnZhciBhbHBoYSA9IHtcbiAgJHZhbGlkYXRvcjogYWxwaGEkMSxcbiAgJG1lc3NhZ2U6ICdUaGUgdmFsdWUgaXMgbm90IGFscGhhYmV0aWNhbCcsXG4gICRwYXJhbXM6IHtcbiAgICB0eXBlOiAnYWxwaGEnXG4gIH1cbn07XG5cbnZhciBhbHBoYU51bSQxID0gcmVnZXgoL15bYS16QS1aMC05XSokLyk7XG5cbi8qKlxuICogVmFsaWRhdGUgaWYgdmFsdWUgaXMgYWxwaGEtbnVtZXJpYyBzdHJpbmcuXG4gKiBAdHlwZSB7Tm9ybWFsaXplZFZhbGlkYXRvcn1cbiAqL1xuXG52YXIgYWxwaGFOdW0gPSB7XG4gICR2YWxpZGF0b3I6IGFscGhhTnVtJDEsXG4gICRtZXNzYWdlOiAnVGhlIHZhbHVlIG11c3QgYmUgYWxwaGEtbnVtZXJpYycsXG4gICRwYXJhbXM6IHtcbiAgICB0eXBlOiAnYWxwaGFOdW0nXG4gIH1cbn07XG5cbnZhciBudW1lcmljJDEgPSByZWdleCgvXlxcZCooXFwuXFxkKyk/JC8pO1xuXG4vKipcbiAqIENoZWNrIHdoZXRoZXIgYSB2YWx1ZSBpcyBudW1lcmljLlxuICogQHR5cGUgTm9ybWFsaXplZFZhbGlkYXRvclxuICovXG5cbnZhciBudW1lcmljID0ge1xuICAkdmFsaWRhdG9yOiBudW1lcmljJDEsXG4gICRtZXNzYWdlOiAnVmFsdWUgbXVzdCBiZSBudW1lcmljJyxcbiAgJHBhcmFtczoge1xuICAgIHR5cGU6ICdudW1lcmljJ1xuICB9XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGEgbnVtZXJpYyB2YWx1ZSBpcyBiZXR3ZWVuIHR3byB2YWx1ZXMuXG4gKiBAcGFyYW0ge1JlZjxOdW1iZXI+IHwgTnVtYmVyfSBtaW5cbiAqIEBwYXJhbSB7UmVmPE51bWJlcj4gfCBOdW1iZXJ9IG1heFxuICogQHJldHVybiB7ZnVuY3Rpb24oKj0pOiBib29sZWFufVxuICovXG5cbmZ1bmN0aW9uIGJldHdlZW4kMSAobWluLCBtYXgpIHtcbiAgcmV0dXJuIHZhbHVlID0+ICFyZXEodmFsdWUpIHx8ICghL1xccy8udGVzdCh2YWx1ZSkgfHwgdmFsdWUgaW5zdGFuY2VvZiBEYXRlKSAmJiArdW5yZWYobWluKSA8PSArdmFsdWUgJiYgK3VucmVmKG1heCkgPj0gK3ZhbHVlO1xufVxuXG4vKipcbiAqIENoZWNrcyBpZiBhIHZhbHVlIGlzIGJldHdlZW4gdHdvIHZhbHVlcy5cbiAqIEBwYXJhbSB7UmVmPE51bWJlcj4gfCBOdW1iZXJ9IG1pblxuICogQHBhcmFtIHtSZWY8TnVtYmVyPiB8IE51bWJlcn0gbWF4XG4gKiBAcmV0dXJuIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbmZ1bmN0aW9uIGJldHdlZW4gKG1pbiwgbWF4KSB7XG4gIHJldHVybiB7XG4gICAgJHZhbGlkYXRvcjogYmV0d2VlbiQxKG1pbiwgbWF4KSxcbiAgICAkbWVzc2FnZTogKHtcbiAgICAgICRwYXJhbXNcbiAgICB9KSA9PiBgVGhlIHZhbHVlIG11c3QgYmUgYmV0d2VlbiAkeyRwYXJhbXMubWlufSBhbmQgJHskcGFyYW1zLm1heH1gLFxuICAgICRwYXJhbXM6IHtcbiAgICAgIG1pbixcbiAgICAgIG1heCxcbiAgICAgIHR5cGU6ICdiZXR3ZWVuJ1xuICAgIH1cbiAgfTtcbn1cblxuY29uc3QgZW1haWxSZWdleCA9IC9eKD86W0EtejAtOSEjJCUmJyorLz0/Xl9ge3x9fi1dKyg/OlxcLltBLXowLTkhIyQlJicqKy89P15fYHt8fX4tXSspKnxcIig/OltcXHgwMS1cXHgwOFxceDBiXFx4MGNcXHgwZS1cXHgxZlxceDIxXFx4MjMtXFx4NWJcXHg1ZC1cXHg3Zl18W1xceDAxLVxceDA5XFx4MGJcXHgwY1xceDBlLVxceDdmXSkqXCIpQCg/Oig/OlthLXowLTldKD86W2EtejAtOS1dKlthLXowLTldKT9cXC4pK1thLXowLTldezIsfSg/OlthLXowLTktXSpbYS16MC05XSk/fFxcWyg/Oig/OjI1WzAtNV18MlswLTRdWzAtOV18WzAxXT9bMC05XVswLTldPylcXC4pezN9KD86MjVbMC01XXwyWzAtNF1bMC05XXxbMDFdP1swLTldWzAtOV0/fFthLXowLTktXSpbYS16MC05XTooPzpbXFx4MDEtXFx4MDhcXHgwYlxceDBjXFx4MGUtXFx4MWZcXHgyMS1cXHg1YVxceDUzLVxceDdmXXxcXFxcW1xceDAxLVxceDA5XFx4MGJcXHgwY1xceDBlLVxceDdmXSkrKVxcXSkkL2k7XG52YXIgZW1haWwkMSA9IHJlZ2V4KGVtYWlsUmVnZXgpO1xuXG4vKipcbiAqIFZhbGlkYXRlIGlmIHZhbHVlIGlzIGFuIGVtYWlsLlxuICogQHR5cGUge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxudmFyIGVtYWlsID0ge1xuICAkdmFsaWRhdG9yOiBlbWFpbCQxLFxuICAkbWVzc2FnZTogJ1ZhbHVlIGlzIG5vdCBhIHZhbGlkIGVtYWlsIGFkZHJlc3MnLFxuICAkcGFyYW1zOiB7XG4gICAgdHlwZTogJ2VtYWlsJ1xuICB9XG59O1xuXG4vKipcbiAqIENoZWNrIGlmIGEgc3RyaW5nIGlzIGFuIElQIEFkZHJlc3NcbiAqIEBwYXJhbSB7U3RyaW5nfSB2YWx1ZVxuICogQHJldHVybnMge2Jvb2xlYW59XG4gKi9cblxuZnVuY3Rpb24gaXBBZGRyZXNzJDEgKHZhbHVlKSB7XG4gIGlmICghcmVxKHZhbHVlKSkge1xuICAgIHJldHVybiB0cnVlO1xuICB9XG5cbiAgaWYgKHR5cGVvZiB2YWx1ZSAhPT0gJ3N0cmluZycpIHtcbiAgICByZXR1cm4gZmFsc2U7XG4gIH1cblxuICBjb25zdCBuaWJibGVzID0gdmFsdWUuc3BsaXQoJy4nKTtcbiAgcmV0dXJuIG5pYmJsZXMubGVuZ3RoID09PSA0ICYmIG5pYmJsZXMuZXZlcnkobmliYmxlVmFsaWQpO1xufVxuXG5jb25zdCBuaWJibGVWYWxpZCA9IG5pYmJsZSA9PiB7XG4gIGlmIChuaWJibGUubGVuZ3RoID4gMyB8fCBuaWJibGUubGVuZ3RoID09PSAwKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKG5pYmJsZVswXSA9PT0gJzAnICYmIG5pYmJsZSAhPT0gJzAnKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgaWYgKCFuaWJibGUubWF0Y2goL15cXGQrJC8pKSB7XG4gICAgcmV0dXJuIGZhbHNlO1xuICB9XG5cbiAgY29uc3QgbnVtZXJpYyA9ICtuaWJibGUgfCAwO1xuICByZXR1cm4gbnVtZXJpYyA+PSAwICYmIG51bWVyaWMgPD0gMjU1O1xufTtcblxuLyoqXG4gKiBWYWxpZGF0ZSBpZiB2YWx1ZSBpcyBhbiBpcEFkZHJlc3Mgc3RyaW5nLlxuICogQHR5cGUge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxudmFyIGlwQWRkcmVzcyA9IHtcbiAgJHZhbGlkYXRvcjogaXBBZGRyZXNzJDEsXG4gICRtZXNzYWdlOiAnVGhlIHZhbHVlIGlzIG5vdCBhIHZhbGlkIElQIGFkZHJlc3MnLFxuICAkcGFyYW1zOiB7XG4gICAgdHlwZTogJ2lwQWRkcmVzcydcbiAgfVxufTtcblxuLyoqXG4gKiBDaGVjayBpZiB2YWx1ZSBpcyBhIHByb3Blcmx5IGZvcm1hdHRlZCBNYWMgQWRkcmVzcy5cbiAqIEBwYXJhbSB7U3RyaW5nIHwgUmVmPFN0cmluZz59IFtzZXBhcmF0b3JdXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oKik6IGJvb2xlYW59XG4gKi9cblxuZnVuY3Rpb24gbWFjQWRkcmVzcyQxIChzZXBhcmF0b3IgPSAnOicpIHtcbiAgcmV0dXJuIHZhbHVlID0+IHtcbiAgICBzZXBhcmF0b3IgPSB1bnJlZihzZXBhcmF0b3IpO1xuXG4gICAgaWYgKCFyZXEodmFsdWUpKSB7XG4gICAgICByZXR1cm4gdHJ1ZTtcbiAgICB9XG5cbiAgICBpZiAodHlwZW9mIHZhbHVlICE9PSAnc3RyaW5nJykge1xuICAgICAgcmV0dXJuIGZhbHNlO1xuICAgIH1cblxuICAgIGNvbnN0IHBhcnRzID0gdHlwZW9mIHNlcGFyYXRvciA9PT0gJ3N0cmluZycgJiYgc2VwYXJhdG9yICE9PSAnJyA/IHZhbHVlLnNwbGl0KHNlcGFyYXRvcikgOiB2YWx1ZS5sZW5ndGggPT09IDEyIHx8IHZhbHVlLmxlbmd0aCA9PT0gMTYgPyB2YWx1ZS5tYXRjaCgvLnsyfS9nKSA6IG51bGw7XG4gICAgcmV0dXJuIHBhcnRzICE9PSBudWxsICYmIChwYXJ0cy5sZW5ndGggPT09IDYgfHwgcGFydHMubGVuZ3RoID09PSA4KSAmJiBwYXJ0cy5ldmVyeShoZXhWYWxpZCk7XG4gIH07XG59XG5cbmNvbnN0IGhleFZhbGlkID0gaGV4ID0+IGhleC50b0xvd2VyQ2FzZSgpLm1hdGNoKC9eWzAtOWEtZl17Mn0kLyk7XG5cbi8qKlxuICogVmFsaWRhdGUgaWYgdmFsdWUgaXMgYSB2YWxpZCBNYWMgQWRkcmVzcyBzdHJpbmcuXG4gKiBAcmV0dXJucyB7Tm9ybWFsaXplZFZhbGlkYXRvcn1cbiAqL1xuXG5mdW5jdGlvbiBtYWNBZGRyZXNzIChzZXBhcmF0b3IpIHtcbiAgcmV0dXJuIHtcbiAgICAkdmFsaWRhdG9yOiBtYWNBZGRyZXNzJDEoc2VwYXJhdG9yKSxcbiAgICAkbWVzc2FnZTogJ1RoZSB2YWx1ZSBpcyBub3QgYSB2YWxpZCBNQUMgQWRkcmVzcycsXG4gICAgJHBhcmFtczoge1xuICAgICAgdHlwZTogJ21hY0FkZHJlc3MnXG4gICAgfVxuICB9O1xufVxuXG4vKipcbiAqIENoZWNrIGlmIHByb3ZpZGVkIHZhbHVlIGhhcyBhIG1heGltdW0gbGVuZ3RoXG4gKiBAcGFyYW0ge051bWJlciB8IFJlZjxOdW1iZXI+fSBsZW5ndGhcbiAqIEByZXR1cm5zIHtmdW5jdGlvbihBcnJheXxPYmplY3R8U3RyaW5nKTogYm9vbGVhbn1cbiAqL1xuXG5mdW5jdGlvbiBtYXhMZW5ndGgkMSAobGVuZ3RoKSB7XG4gIHJldHVybiB2YWx1ZSA9PiAhcmVxKHZhbHVlKSB8fCBsZW4odmFsdWUpIDw9IHVucmVmKGxlbmd0aCk7XG59XG5cbi8qKlxuICogVmFsaWRhdGUgdGhlIG1heCBsZW5ndGggb2YgYSBzdHJpbmcuXG4gKiBAcGFyYW0ge051bWJlcn0gbWF4XG4gKiBAcmV0dXJuIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbmZ1bmN0aW9uIG1heExlbmd0aCAobWF4KSB7XG4gIHJldHVybiB7XG4gICAgJHZhbGlkYXRvcjogbWF4TGVuZ3RoJDEobWF4KSxcbiAgICAkbWVzc2FnZTogKHtcbiAgICAgICRwYXJhbXNcbiAgICB9KSA9PiBgVGhlIG1heGltdW0gbGVuZ3RoIGFsbG93ZWQgaXMgJHskcGFyYW1zLm1heH1gLFxuICAgICRwYXJhbXM6IHtcbiAgICAgIG1heCxcbiAgICAgIHR5cGU6ICdtYXhMZW5ndGgnXG4gICAgfVxuICB9O1xufVxuXG4vKipcbiAqIENoZWNrIGlmIHZhbHVlIGlzIGFib3ZlIGEgdGhyZXNob2xkLlxuICogQHBhcmFtIHtOdW1iZXIgfCBSZWY8TnVtYmVyPn0gbGVuZ3RoXG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oQXJyYXl8T2JqZWN0fFN0cmluZyk6IGJvb2xlYW59XG4gKi9cblxuZnVuY3Rpb24gbWluTGVuZ3RoJDEgKGxlbmd0aCkge1xuICByZXR1cm4gdmFsdWUgPT4gIXJlcSh2YWx1ZSkgfHwgbGVuKHZhbHVlKSA+PSB1bnJlZihsZW5ndGgpO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIHZhbHVlIGlzIGFib3ZlIGEgdGhyZXNob2xkLlxuICogQHBhcmFtIHtOdW1iZXIgfCBSZWY8TnVtYmVyPn0gbWluXG4gKiBAcmV0dXJucyB7Tm9ybWFsaXplZFZhbGlkYXRvcn1cbiAqL1xuXG5mdW5jdGlvbiBtaW5MZW5ndGggKG1pbikge1xuICByZXR1cm4ge1xuICAgICR2YWxpZGF0b3I6IG1pbkxlbmd0aCQxKG1pbiksXG4gICAgJG1lc3NhZ2U6ICh7XG4gICAgICAkcGFyYW1zXG4gICAgfSkgPT4gYFRoaXMgZmllbGQgc2hvdWxkIGJlIGF0IGxlYXN0ICR7JHBhcmFtcy5taW59IGxvbmdgLFxuICAgICRwYXJhbXM6IHtcbiAgICAgIG1pbixcbiAgICAgIHR5cGU6ICdtaW5MZW5ndGgnXG4gICAgfVxuICB9O1xufVxuXG4vKipcbiAqIFZhbGlkYXRlcyBpZiBhIHZhbHVlIGlzIGVtcHR5LlxuICogQHBhcmFtIHtTdHJpbmcgfCBBcnJheSB8IERhdGUgfCBPYmplY3R9IHZhbHVlXG4gKiBAcmV0dXJucyB7Ym9vbGVhbn1cbiAqL1xuXG5mdW5jdGlvbiByZXF1aXJlZCQxICh2YWx1ZSkge1xuICBpZiAodHlwZW9mIHZhbHVlID09PSAnc3RyaW5nJykge1xuICAgIHZhbHVlID0gdmFsdWUudHJpbSgpO1xuICB9XG5cbiAgcmV0dXJuIHJlcSh2YWx1ZSk7XG59XG5cbi8qKlxuICogQ2hlY2sgaWYgYSB2YWx1ZSBpcyBlbXB0eSBvciBub3QuXG4gKiBAdHlwZSB7Tm9ybWFsaXplZFZhbGlkYXRvcn1cbiAqL1xuXG52YXIgcmVxdWlyZWQgPSB7XG4gICR2YWxpZGF0b3I6IHJlcXVpcmVkJDEsXG4gICRtZXNzYWdlOiAnVmFsdWUgaXMgcmVxdWlyZWQnLFxuICAkcGFyYW1zOiB7XG4gICAgdHlwZTogJ3JlcXVpcmVkJ1xuICB9XG59O1xuXG5jb25zdCB2YWxpZGF0ZSQxID0gKHByb3AsIHZhbCkgPT4gcHJvcCA/IHJlcSh2YWwpIDogdHJ1ZTtcbi8qKlxuICogUmV0dXJucyByZXF1aXJlZCBpZiB0aGUgcGFzc2VkIHByb3BlcnR5IGlzIHRydXRoeVxuICogQHBhcmFtIHtCb29sZWFuIHwgU3RyaW5nIHwgZnVuY3Rpb24oYW55KTogQm9vbGVhbiB8IFJlZjxzdHJpbmcgfCBib29sZWFuPn0gcHJvcE9yRnVuY3Rpb25cbiAqIEByZXR1cm4ge2Z1bmN0aW9uKHZhbHVlOiAqLCBwYXJlbnRWTTogb2JqZWN0KTogQm9vbGVhbn1cbiAqL1xuXG5cbmZ1bmN0aW9uIHJlcXVpcmVkSWYkMShwcm9wT3JGdW5jdGlvbikge1xuICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlLCBwYXJlbnRWTSkge1xuICAgIGlmICh0eXBlb2YgcHJvcE9yRnVuY3Rpb24gIT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiB2YWxpZGF0ZSQxKHVucmVmKHByb3BPckZ1bmN0aW9uKSwgdmFsdWUpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlc3VsdCA9IHByb3BPckZ1bmN0aW9uLmNhbGwodGhpcywgdmFsdWUsIHBhcmVudFZNKTtcbiAgICByZXR1cm4gdmFsaWRhdGUkMShyZXN1bHQsIHZhbHVlKTtcbiAgfTtcbn1cblxuLyoqXG4gKiBSZXR1cm5zIHJlcXVpcmVkIGlmIHRoZSBwYXNzZWQgcHJvcGVydHkgaXMgdHJ1dGh5XG4gKiBAcGFyYW0ge0Jvb2xlYW4gfCBTdHJpbmcgfCBmdW5jdGlvbigpOiAoQm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4pfSBwcm9wXG4gKiBAcmV0dXJuIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbmZ1bmN0aW9uIHJlcXVpcmVkSWYgKHByb3ApIHtcbiAgcmV0dXJuIHtcbiAgICAkdmFsaWRhdG9yOiByZXF1aXJlZElmJDEocHJvcCksXG4gICAgJG1lc3NhZ2U6ICdUaGUgdmFsdWUgaXMgcmVxdWlyZWQnLFxuICAgICRwYXJhbXM6IHtcbiAgICAgIHR5cGU6ICdyZXF1aXJlZElmJyxcbiAgICAgIHByb3BcbiAgICB9XG4gIH07XG59XG5cbmNvbnN0IHZhbGlkYXRlID0gKHByb3AsIHZhbCkgPT4gIXByb3AgPyByZXEodmFsKSA6IHRydWU7XG4vKipcbiAqIFJldHVybnMgcmVxdWlyZWQgaWYgdGhlIHBhc3NlZCBwcm9wZXJ0eSBpcyBmYWxzeS5cbiAqIEBwYXJhbSB7Qm9vbGVhbiB8IFN0cmluZyB8IGZ1bmN0aW9uKGFueSk6IEJvb2xlYW4gfCBSZWY8c3RyaW5nIHwgYm9vbGVhbj59IHByb3BPckZ1bmN0aW9uXG4gKiBAcmV0dXJuIHtmdW5jdGlvbih2YWx1ZTogKiwgcGFyZW50Vk06IG9iamVjdCk6IEJvb2xlYW59XG4gKi9cblxuXG5mdW5jdGlvbiByZXF1aXJlZFVubGVzcyQxKHByb3BPckZ1bmN0aW9uKSB7XG4gIHJldHVybiBmdW5jdGlvbiAodmFsdWUsIHBhcmVudFZNKSB7XG4gICAgaWYgKHR5cGVvZiBwcm9wT3JGdW5jdGlvbiAhPT0gJ2Z1bmN0aW9uJykge1xuICAgICAgcmV0dXJuIHZhbGlkYXRlKHVucmVmKHByb3BPckZ1bmN0aW9uKSwgdmFsdWUpO1xuICAgIH1cblxuICAgIGNvbnN0IHJlc3VsdCA9IHByb3BPckZ1bmN0aW9uLmNhbGwodGhpcywgdmFsdWUsIHBhcmVudFZNKTtcbiAgICByZXR1cm4gdmFsaWRhdGUocmVzdWx0LCB2YWx1ZSk7XG4gIH07XG59XG5cbi8qKlxuICogUmV0dXJucyByZXF1aXJlZCB1bmxlc3MgdGhlIHBhc3NlZCBwcm9wZXJ0eSBpcyB0cnV0aHlcbiAqIEBwYXJhbSB7Qm9vbGVhbiB8IFN0cmluZyB8IGZ1bmN0aW9uKCk6IChCb29sZWFuIHwgUHJvbWlzZTxib29sZWFuPil9IHByb3BcbiAqIEByZXR1cm4ge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxuZnVuY3Rpb24gcmVxdWlyZWRVbmxlc3MgKHByb3ApIHtcbiAgcmV0dXJuIHtcbiAgICAkdmFsaWRhdG9yOiByZXF1aXJlZFVubGVzcyQxKHByb3ApLFxuICAgICRtZXNzYWdlOiAnVGhlIHZhbHVlIGlzIHJlcXVpcmVkJyxcbiAgICAkcGFyYW1zOiB7XG4gICAgICB0eXBlOiAncmVxdWlyZWRVbmxlc3MnLFxuICAgICAgcHJvcFxuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0d28gdmFsdWVzIGFyZSBpZGVudGljYWwuXG4gKiBAcGFyYW0geyp9IGVxdWFsVG9cbiAqIEByZXR1cm4ge2Z1bmN0aW9uKCo9KTogYm9vbGVhbn1cbiAqL1xuXG5mdW5jdGlvbiBzYW1lQXMkMSAoZXF1YWxUbykge1xuICByZXR1cm4gdmFsdWUgPT4gdW5yZWYodmFsdWUpID09PSB1bnJlZihlcXVhbFRvKTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB0d28gdmFsdWVzIGFyZSBpZGVudGljYWxcbiAqIEBwYXJhbSB7Kn0gZXF1YWxUb1xuICogQHBhcmFtIHtTdHJpbmd9IFtvdGhlck5hbWVdXG4gKiBAcmV0dXJuIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbmZ1bmN0aW9uIHNhbWVBcyAoZXF1YWxUbywgb3RoZXJOYW1lID0gJ290aGVyJykge1xuICByZXR1cm4ge1xuICAgICR2YWxpZGF0b3I6IHNhbWVBcyQxKGVxdWFsVG8pLFxuICAgICRtZXNzYWdlOiAoe1xuICAgICAgJHBhcmFtc1xuICAgIH0pID0+IGBUaGUgdmFsdWUgbXVzdCBiZSBlcXVhbCB0byB0aGUgJHtvdGhlck5hbWV9IHZhbHVlYCxcbiAgICAkcGFyYW1zOiB7XG4gICAgICBlcXVhbFRvLFxuICAgICAgb3RoZXJOYW1lLFxuICAgICAgdHlwZTogJ3NhbWVBcydcbiAgICB9XG4gIH07XG59XG5cbi8qKlxuICogUmVnZXggdGFrZW4gZnJvbSB7QGxpbmsgaHR0cHM6Ly9naXN0LmdpdGh1Yi5jb20vZHBlcmluaS83MjkyOTR9XG4gKi9cblxuY29uc3QgdXJsUmVnZXggPSAvXig/Oig/Oig/Omh0dHBzP3xmdHApOik/XFwvXFwvKSg/OlxcUysoPzo6XFxTKik/QCk/KD86KD8hKD86MTB8MTI3KSg/OlxcLlxcZHsxLDN9KXszfSkoPyEoPzoxNjlcXC4yNTR8MTkyXFwuMTY4KSg/OlxcLlxcZHsxLDN9KXsyfSkoPyExNzJcXC4oPzoxWzYtOV18MlxcZHwzWzAtMV0pKD86XFwuXFxkezEsM30pezJ9KSg/OlsxLTldXFxkP3wxXFxkXFxkfDJbMDFdXFxkfDIyWzAtM10pKD86XFwuKD86MT9cXGR7MSwyfXwyWzAtNF1cXGR8MjVbMC01XSkpezJ9KD86XFwuKD86WzEtOV1cXGQ/fDFcXGRcXGR8MlswLTRdXFxkfDI1WzAtNF0pKXwoPzooPzpbYS16MC05XFx1MDBhMS1cXHVmZmZmXVthLXowLTlcXHUwMGExLVxcdWZmZmZfLV17MCw2Mn0pP1thLXowLTlcXHUwMGExLVxcdWZmZmZdXFwuKSsoPzpbYS16XFx1MDBhMS1cXHVmZmZmXXsyLH1cXC4/KSkoPzo6XFxkezIsNX0pPyg/OlsvPyNdXFxTKik/JC9pO1xudmFyIHVybCQxID0gcmVnZXgodXJsUmVnZXgpO1xuXG4vKipcbiAqIENoZWNrIGlmIGEgdmFsdWUgaXMgYSB1cmxcbiAqIEB0eXBlIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbnZhciB1cmwgPSB7XG4gICR2YWxpZGF0b3I6IHVybCQxLFxuICAkbWVzc2FnZTogJ1RoZSB2YWx1ZSBpcyBub3QgYSB2YWxpZCBVUkwgYWRkcmVzcycsXG4gICRwYXJhbXM6IHtcbiAgICB0eXBlOiAndXJsJ1xuICB9XG59O1xuXG5mdW5jdGlvbiBfYXdhaXQkMSh2YWx1ZSwgdGhlbiwgZGlyZWN0KSB7XG4gIGlmIChkaXJlY3QpIHtcbiAgICByZXR1cm4gdGhlbiA/IHRoZW4odmFsdWUpIDogdmFsdWU7XG4gIH1cblxuICBpZiAoIXZhbHVlIHx8ICF2YWx1ZS50aGVuKSB7XG4gICAgdmFsdWUgPSBQcm9taXNlLnJlc29sdmUodmFsdWUpO1xuICB9XG5cbiAgcmV0dXJuIHRoZW4gPyB2YWx1ZS50aGVuKHRoZW4pIDogdmFsdWU7XG59XG5cbmZ1bmN0aW9uIHN5bmNPcih2YWxpZGF0b3JzKSB7XG4gIHJldHVybiBmdW5jdGlvbiAoLi4uYXJncykge1xuICAgIHJldHVybiB2YWxpZGF0b3JzLnJlZHVjZSgodmFsaWQsIGZuKSA9PiB7XG4gICAgICBpZiAodW53cmFwVmFsaWRhdG9yUmVzcG9uc2UodmFsaWQpKSByZXR1cm4gdmFsaWQ7XG4gICAgICByZXR1cm4gdW53cmFwTm9ybWFsaXplZFZhbGlkYXRvcihmbikuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfSwgZmFsc2UpO1xuICB9O1xufVxuXG5mdW5jdGlvbiBhc3luY09yKHZhbGlkYXRvcnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgY29uc3QgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHZhbGlkYXRvcnMucmVkdWNlKGZ1bmN0aW9uICh2YWxpZCwgZm4pIHtcbiAgICAgIHJldHVybiBfYXdhaXQkMSh2YWxpZCwgZnVuY3Rpb24gKHIpIHtcbiAgICAgICAgcmV0dXJuIHVud3JhcFZhbGlkYXRvclJlc3BvbnNlKHIpID8gciA6IHVud3JhcE5vcm1hbGl6ZWRWYWxpZGF0b3IoZm4pLmFwcGx5KF90aGlzLCBhcmdzKTtcbiAgICAgIH0pO1xuICAgIH0sIFByb21pc2UucmVzb2x2ZShmYWxzZSkpO1xuICB9O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgd2hlbiBvbmUgb2YgdGhlIHByb3ZpZGVkIGZ1bmN0aW9ucyByZXR1cm5zIHRydWUuXG4gKiBAcGFyYW0gey4uLihOb3JtYWxpemVkVmFsaWRhdG9yfEZ1bmN0aW9uKX0gdmFsaWRhdG9yc1xuICogQHJldHVybiB7eyR2YWxpZGF0b3I6IGZ1bmN0aW9uKC4uLlsqXT0pOiAoYm9vbGVhbiB8IFByb21pc2U8Ym9vbGVhbj4pLCAkYXN5bmM6IGJvb2xlYW4sICR3YXRjaFRhcmdldHM6IGFueVtdfX1cbiAqL1xuXG5cbmZ1bmN0aW9uIG9yJDEoLi4udmFsaWRhdG9ycykge1xuICBjb25zdCAkYXN5bmMgPSB2YWxpZGF0b3JzLnNvbWUodiA9PiB2LiRhc3luYyk7XG4gIGNvbnN0ICR3YXRjaFRhcmdldHMgPSB2YWxpZGF0b3JzLnJlZHVjZSgoYWxsLCB2KSA9PiB7XG4gICAgaWYgKCF2LiR3YXRjaFRhcmdldHMpIHJldHVybiBhbGw7XG4gICAgcmV0dXJuIGFsbC5jb25jYXQodi4kd2F0Y2hUYXJnZXRzKTtcbiAgfSwgW10pO1xuXG4gIGxldCAkdmFsaWRhdG9yID0gKCkgPT4gZmFsc2U7XG5cbiAgaWYgKHZhbGlkYXRvcnMubGVuZ3RoKSAkdmFsaWRhdG9yID0gJGFzeW5jID8gYXN5bmNPcih2YWxpZGF0b3JzKSA6IHN5bmNPcih2YWxpZGF0b3JzKTtcbiAgcmV0dXJuIHtcbiAgICAkYXN5bmMsXG4gICAgJHZhbGlkYXRvcixcbiAgICAkd2F0Y2hUYXJnZXRzXG4gIH07XG59XG5cbi8qKlxuICogUmV0dXJucyB0cnVlIHdoZW4gb25lIG9mIHRoZSBwcm92aWRlZCBmdW5jdGlvbnMgcmV0dXJucyB0cnVlLlxuICogQHBhcmFtIHsuLi4oTm9ybWFsaXplZFZhbGlkYXRvcnxGdW5jdGlvbil9IHZhbGlkYXRvcnNcbiAqIEByZXR1cm4ge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxuZnVuY3Rpb24gb3IgKC4uLnZhbGlkYXRvcnMpIHtcbiAgcmV0dXJuIHdpdGhQYXJhbXMoe1xuICAgIHR5cGU6ICdvcidcbiAgfSwgd2l0aE1lc3NhZ2UoJ1RoZSB2YWx1ZSBkb2VzIG5vdCBtYXRjaCBhbnkgb2YgdGhlIHByb3ZpZGVkIHZhbGlkYXRvcnMnLCBvciQxKC4uLnZhbGlkYXRvcnMpKSk7XG59XG5cbmZ1bmN0aW9uIF9hd2FpdCh2YWx1ZSwgdGhlbiwgZGlyZWN0KSB7XG4gIGlmIChkaXJlY3QpIHtcbiAgICByZXR1cm4gdGhlbiA/IHRoZW4odmFsdWUpIDogdmFsdWU7XG4gIH1cblxuICBpZiAoIXZhbHVlIHx8ICF2YWx1ZS50aGVuKSB7XG4gICAgdmFsdWUgPSBQcm9taXNlLnJlc29sdmUodmFsdWUpO1xuICB9XG5cbiAgcmV0dXJuIHRoZW4gPyB2YWx1ZS50aGVuKHRoZW4pIDogdmFsdWU7XG59XG4vKipcbiAqXG4gKiBAcGFyYW0gdmFsaWRhdG9yc1xuICogQHJldHVybiB7ZnVuY3Rpb24oLi4uWypdPSk6IFByb21pc2U8Ym9vbGVhbj59XG4gKi9cblxuXG5mdW5jdGlvbiBzeW5jQW5kKHZhbGlkYXRvcnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgcmV0dXJuIHZhbGlkYXRvcnMucmVkdWNlKCh2YWxpZCwgZm4pID0+IHtcbiAgICAgIGlmICghdW53cmFwVmFsaWRhdG9yUmVzcG9uc2UodmFsaWQpKSByZXR1cm4gdmFsaWQ7XG4gICAgICByZXR1cm4gdW53cmFwTm9ybWFsaXplZFZhbGlkYXRvcihmbikuYXBwbHkodGhpcywgYXJncyk7XG4gICAgfSwgdHJ1ZSk7XG4gIH07XG59XG5cbmZ1bmN0aW9uIGFzeW5jQW5kKHZhbGlkYXRvcnMpIHtcbiAgcmV0dXJuIGZ1bmN0aW9uICguLi5hcmdzKSB7XG4gICAgY29uc3QgX3RoaXMgPSB0aGlzO1xuXG4gICAgcmV0dXJuIHZhbGlkYXRvcnMucmVkdWNlKGZ1bmN0aW9uICh2YWxpZCwgZm4pIHtcbiAgICAgIHJldHVybiBfYXdhaXQodmFsaWQsIGZ1bmN0aW9uIChyKSB7XG4gICAgICAgIHJldHVybiB1bndyYXBWYWxpZGF0b3JSZXNwb25zZShyKSA/IHVud3JhcE5vcm1hbGl6ZWRWYWxpZGF0b3IoZm4pLmFwcGx5KF90aGlzLCBhcmdzKSA6IHI7XG4gICAgICB9KTtcbiAgICB9LCBQcm9taXNlLnJlc29sdmUodHJ1ZSkpO1xuICB9O1xufVxuLyoqXG4gKiBSZXR1cm5zIHRydWUgd2hlbiBhbGwgdmFsaWRhdG9ycyBhcmUgdHJ1dGh5XG4gKiBAcGFyYW0gey4uLihOb3JtYWxpemVkVmFsaWRhdG9yIHwgRnVuY3Rpb24pfSB2YWxpZGF0b3JzXG4gKiBAcmV0dXJuIHt7JHZhbGlkYXRvcjogZnVuY3Rpb24oLi4uWypdPSk6IChib29sZWFuIHwgUHJvbWlzZTxib29sZWFuPiksICRhc3luYzogYm9vbGVhbiwgJHdhdGNoVGFyZ2V0czogYW55W119fVxuICovXG5cblxuZnVuY3Rpb24gYW5kJDEoLi4udmFsaWRhdG9ycykge1xuICBjb25zdCAkYXN5bmMgPSB2YWxpZGF0b3JzLnNvbWUodiA9PiB2LiRhc3luYyk7XG4gIGNvbnN0ICR3YXRjaFRhcmdldHMgPSB2YWxpZGF0b3JzLnJlZHVjZSgoYWxsLCB2KSA9PiB7XG4gICAgaWYgKCF2LiR3YXRjaFRhcmdldHMpIHJldHVybiBhbGw7XG4gICAgcmV0dXJuIGFsbC5jb25jYXQodi4kd2F0Y2hUYXJnZXRzKTtcbiAgfSwgW10pO1xuXG4gIGxldCAkdmFsaWRhdG9yID0gKCkgPT4gZmFsc2U7XG5cbiAgaWYgKHZhbGlkYXRvcnMubGVuZ3RoKSAkdmFsaWRhdG9yID0gJGFzeW5jID8gYXN5bmNBbmQodmFsaWRhdG9ycykgOiBzeW5jQW5kKHZhbGlkYXRvcnMpO1xuICByZXR1cm4ge1xuICAgICRhc3luYyxcbiAgICAkdmFsaWRhdG9yLFxuICAgICR3YXRjaFRhcmdldHNcbiAgfTtcbn1cblxuLyoqXG4gKiBWYWxpZGF0ZSBpZiBhbGwgdmFsaWRhdG9ycyBtYXRjaC5cbiAqIEBwYXJhbSB7Li4uKn0gdmFsaWRhdG9yc1xuICogQHJldHVybnMge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxuZnVuY3Rpb24gYW5kICguLi52YWxpZGF0b3JzKSB7XG4gIHJldHVybiB3aXRoUGFyYW1zKHtcbiAgICB0eXBlOiAnYW5kJ1xuICB9LCB3aXRoTWVzc2FnZSgnVGhlIHZhbHVlIGRvZXMgbm90IG1hdGNoIGFsbCBvZiB0aGUgcHJvdmlkZWQgdmFsaWRhdG9ycycsIGFuZCQxKC4uLnZhbGlkYXRvcnMpKSk7XG59XG5cbi8qKlxuICogU3dhcHMgdGhlIHJlc3VsdCBvZiBhIHZhbHVlXG4gKiBAcGFyYW0ge05vcm1hbGl6ZWRWYWxpZGF0b3J8RnVuY3Rpb259IHZhbGlkYXRvclxuICogQHJldHVybnMge2Z1bmN0aW9uKCo9LCAqPSk6IGJvb2xlYW59XG4gKi9cblxuZnVuY3Rpb24gbm90JDEgKHZhbGlkYXRvcikge1xuICByZXR1cm4gZnVuY3Rpb24gKHZhbHVlLCB2bSkge1xuICAgIGlmICghcmVxKHZhbHVlKSkgcmV0dXJuIHRydWU7XG4gICAgY29uc3QgcmVzcG9uc2UgPSB1bndyYXBOb3JtYWxpemVkVmFsaWRhdG9yKHZhbGlkYXRvcikuY2FsbCh0aGlzLCB2YWx1ZSwgdm0pO1xuICAgIGlmICghaXNQcm9taXNlKHJlc3BvbnNlKSkgcmV0dXJuICF1bndyYXBWYWxpZGF0b3JSZXNwb25zZShyZXNwb25zZSk7XG4gICAgcmV0dXJuIHJlc3BvbnNlLnRoZW4ociA9PiAhdW53cmFwVmFsaWRhdG9yUmVzcG9uc2UocikpO1xuICB9O1xufVxuXG4vKipcbiAqIFN3YXBzIHRoZSByZXN1bHQgb2YgYSB2YWx1ZVxuICogQHBhcmFtIHtOb3JtYWxpemVkVmFsaWRhdG9yfEZ1bmN0aW9ufSB2YWxpZGF0b3JcbiAqIEByZXR1cm5zIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbmZ1bmN0aW9uIG5vdCAodmFsaWRhdG9yKSB7XG4gIHJldHVybiB7XG4gICAgJHZhbGlkYXRvcjogbm90JDEodmFsaWRhdG9yKSxcbiAgICAkbWVzc2FnZTogYFRoZSB2YWx1ZSBkb2VzIG5vdCBtYXRjaCB0aGUgcHJvdmlkZWQgdmFsaWRhdG9yYCxcbiAgICAkcGFyYW1zOiB7XG4gICAgICB0eXBlOiAnbm90J1xuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiBhIHZhbHVlIGlzIGFib3ZlIGEgdGhyZXNob2xkLlxuICogQHBhcmFtIHtTdHJpbmcgfCBOdW1iZXIgfCBSZWY8TnVtYmVyPiB8IFJlZjxTdHJpbmc+fSBtaW5cbiAqIEByZXR1cm5zIHtmdW5jdGlvbigqPSk6IGJvb2xlYW59XG4gKi9cblxuZnVuY3Rpb24gbWluVmFsdWUkMSAobWluKSB7XG4gIHJldHVybiB2YWx1ZSA9PiAhcmVxKHZhbHVlKSB8fCAoIS9cXHMvLnRlc3QodmFsdWUpIHx8IHZhbHVlIGluc3RhbmNlb2YgRGF0ZSkgJiYgK3ZhbHVlID49ICt1bnJlZihtaW4pO1xufVxuXG4vKipcbiAqIENoZWNrIGlmIGEgdmFsdWUgaXMgYWJvdmUgYSB0aHJlc2hvbGQuXG4gKiBAcGFyYW0ge1N0cmluZyB8IE51bWJlciB8IFJlZjxOdW1iZXI+IHwgUmVmPFN0cmluZz59IG1pblxuICogQHJldHVybnMge05vcm1hbGl6ZWRWYWxpZGF0b3J9XG4gKi9cblxuZnVuY3Rpb24gbWluVmFsdWUgKG1pbikge1xuICByZXR1cm4ge1xuICAgICR2YWxpZGF0b3I6IG1pblZhbHVlJDEobWluKSxcbiAgICAkbWVzc2FnZTogKHtcbiAgICAgICRwYXJhbXNcbiAgICB9KSA9PiBgVGhlIG1pbmltdW0gdmFsdWUgYWxsb3dlZCBpcyAkeyRwYXJhbXMubWlufWAsXG4gICAgJHBhcmFtczoge1xuICAgICAgbWluLFxuICAgICAgdHlwZTogJ21pblZhbHVlJ1xuICAgIH1cbiAgfTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB2YWx1ZSBpcyBiZWxvdyBhIHRocmVzaG9sZC5cbiAqIEBwYXJhbSB7TnVtYmVyIHwgUmVmPE51bWJlcj4gfCBSZWY8U3RyaW5nPn0gbWF4XG4gKiBAcmV0dXJucyB7ZnVuY3Rpb24oKj0pOiBib29sZWFufVxuICovXG5cbmZ1bmN0aW9uIG1heFZhbHVlJDEgKG1heCkge1xuICByZXR1cm4gdmFsdWUgPT4gIXJlcSh2YWx1ZSkgfHwgKCEvXFxzLy50ZXN0KHZhbHVlKSB8fCB2YWx1ZSBpbnN0YW5jZW9mIERhdGUpICYmICt2YWx1ZSA8PSArdW5yZWYobWF4KTtcbn1cblxuLyoqXG4gKiBDaGVjayBpZiB2YWx1ZSBpcyBiZWxvdyBhIHRocmVzaG9sZC5cbiAqIEBwYXJhbSB7TnVtYmVyIHwgUmVmPE51bWJlcj4gfCBSZWY8U3RyaW5nPn0gbWF4XG4gKiBAcmV0dXJuIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbnZhciBtYXhWYWx1ZSA9IChtYXggPT4gKHtcbiAgJHZhbGlkYXRvcjogbWF4VmFsdWUkMShtYXgpLFxuICAkbWVzc2FnZTogKHtcbiAgICAkcGFyYW1zXG4gIH0pID0+IGBUaGUgbWF4aW11bSB2YWx1ZSBpcyAkeyRwYXJhbXMubWF4fWAsXG4gICRwYXJhbXM6IHtcbiAgICBtYXgsXG4gICAgdHlwZTogJ21heFZhbHVlJ1xuICB9XG59KSk7XG5cbi8vIF4tWzAtOV0rJCAtIG9ubHkgZm9yIG5lZ2F0aXZlIGludGVnZXIgKG1pbnVzIHNpZ24gd2l0aG91dCBhdCBsZWFzdCAxIGRpZ2l0IGlzIG5vdCBhIG51bWJlcilcblxudmFyIGludGVnZXIkMSA9IHJlZ2V4KC8oXlswLTldKiQpfCheLVswLTldKyQpLyk7XG5cbi8qKlxuICogVmFsaWRhdGUgaWYgdmFsdWUgaXMgaW50ZWdlci5cbiAqIEB0eXBlIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbnZhciBpbnRlZ2VyID0ge1xuICAkdmFsaWRhdG9yOiBpbnRlZ2VyJDEsXG4gICRtZXNzYWdlOiAnVmFsdWUgaXMgbm90IGFuIGludGVnZXInLFxuICAkcGFyYW1zOiB7XG4gICAgdHlwZTogJ2ludGVnZXInXG4gIH1cbn07XG5cbnZhciBkZWNpbWFsJDEgPSByZWdleCgvXlstXT9cXGQqKFxcLlxcZCspPyQvKTtcblxuLyoqXG4gKiBWYWxpZGF0ZSBpZiB2YWx1ZSBpcyBkZWNpbWFsIG51bWJlci5cbiAqIEB0eXBlIHtOb3JtYWxpemVkVmFsaWRhdG9yfVxuICovXG5cbnZhciBkZWNpbWFsID0ge1xuICAkdmFsaWRhdG9yOiBkZWNpbWFsJDEsXG4gICRtZXNzYWdlOiAnVmFsdWUgbXVzdCBiZSBkZWNpbWFsJyxcbiAgJHBhcmFtczoge1xuICAgIHR5cGU6ICdkZWNpbWFsJ1xuICB9XG59O1xuXG4vKipcbiAqIENyZWF0ZXMgYSB0cmFuc2xhdGFibGUgdmVyc2lvbiBvZiBgd2l0aE1lc3NhZ2VgIGhlbHBlci5cbiAqIEBwYXJhbSB7ZnVuY3Rpb259IHQgLSB0aGUgdHJhbnNsYXRpb24gZnVuY3Rpb24gb2YgeW91ciBjaG9pY2VcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IFttZXNzYWdlUGF0aF0gLSBhIGZ1bmN0aW9uIHRvIGdlbmVyYXRlIHRoZSBtZXNzYWdlIHBhdGgsIHBhc3NlZCB0byBgdGAgZm9yIGVhY2ggbWVzc2FnZS4gQnkgZGVmYXVsdCBpdCBpcyBgdmFsaWRhdGlvbnMuJHskdmFsaWRhdG9yfWBcbiAqIEBwYXJhbSB7ZnVuY3Rpb259IFttZXNzYWdlUGFyYW1zXSAtIGEgZnVuY3Rpb24gdG8gYXVnbWVudCB0aGUgcGFyYW1zLCBwYXNzZWQgdG8gYHRgIGZvciBlYWNoIG1lc3NhZ2UuXG4gKi9cblxuZnVuY3Rpb24gY3JlYXRlSTE4bk1lc3NhZ2Uoe1xuICB0LFxuICBtZXNzYWdlUGF0aCA9ICh7XG4gICAgJHZhbGlkYXRvclxuICB9KSA9PiBgdmFsaWRhdGlvbnMuJHskdmFsaWRhdG9yfWAsXG4gIG1lc3NhZ2VQYXJhbXMgPSBwYXJhbXMgPT4gcGFyYW1zXG59KSB7XG4gIHJldHVybiBmdW5jdGlvbiB3aXRoSTE4bk1lc3NhZ2UodmFsaWRhdG9yLCB7XG4gICAgd2l0aEFyZ3VtZW50cyA9IGZhbHNlLFxuICAgIG1lc3NhZ2VQYXRoOiBsb2NhbE1lc3NhZ2VQYXRoID0gbWVzc2FnZVBhdGgsXG4gICAgbWVzc2FnZVBhcmFtczogbG9jYWxNZXNzYWdlUGFyYW1zID0gbWVzc2FnZVBhcmFtc1xuICB9ID0ge30pIHtcbiAgICBmdW5jdGlvbiBtZXNzYWdlKHByb3BzKSB7XG4gICAgICByZXR1cm4gdChsb2NhbE1lc3NhZ2VQYXRoKHByb3BzKSwgbG9jYWxNZXNzYWdlUGFyYW1zKE9iamVjdC5hc3NpZ24oe1xuICAgICAgICBtb2RlbDogcHJvcHMuJG1vZGVsLFxuICAgICAgICBwcm9wZXJ0eTogcHJvcHMuJHByb3BlcnR5LFxuICAgICAgICBwZW5kaW5nOiBwcm9wcy4kcGVuZGluZyxcbiAgICAgICAgaW52YWxpZDogcHJvcHMuJGludmFsaWQsXG4gICAgICAgIHJlc3BvbnNlOiBwcm9wcy4kcmVzcG9uc2UsXG4gICAgICAgIHZhbGlkYXRvcjogcHJvcHMuJHZhbGlkYXRvcixcbiAgICAgICAgcHJvcGVydHlQYXRoOiBwcm9wcy4kcHJvcGVydHlQYXRoXG4gICAgICB9LCBwcm9wcy4kcGFyYW1zKSkpO1xuICAgIH1cblxuICAgIGlmICh3aXRoQXJndW1lbnRzICYmIHR5cGVvZiB2YWxpZGF0b3IgPT09ICdmdW5jdGlvbicpIHtcbiAgICAgIHJldHVybiAoLi4uYXJncykgPT4gd2l0aE1lc3NhZ2UobWVzc2FnZSwgdmFsaWRhdG9yKC4uLmFyZ3MpKTtcbiAgICB9XG5cbiAgICByZXR1cm4gd2l0aE1lc3NhZ2UobWVzc2FnZSwgdmFsaWRhdG9yKTtcbiAgfTtcbn1cblxuZXhwb3J0IHsgYWxwaGEsIGFscGhhTnVtLCBhbmQsIGJldHdlZW4sIGNyZWF0ZUkxOG5NZXNzYWdlLCBkZWNpbWFsLCBlbWFpbCwgY29tbW9uIGFzIGhlbHBlcnMsIGludGVnZXIsIGlwQWRkcmVzcywgbWFjQWRkcmVzcywgbWF4TGVuZ3RoLCBtYXhWYWx1ZSwgbWluTGVuZ3RoLCBtaW5WYWx1ZSwgbm90LCBudW1lcmljLCBvciwgcmVxdWlyZWQsIHJlcXVpcmVkSWYsIHJlcXVpcmVkVW5sZXNzLCBzYW1lQXMsIHVybCB9O1xuIiwiXCJ1c2Ugc3RyaWN0XCI7XG5PYmplY3QuZGVmaW5lUHJvcGVydHkoZXhwb3J0cywgXCJfX2VzTW9kdWxlXCIsIHsgdmFsdWU6IHRydWUgfSk7XG4vLyBydW50aW1lIGhlbHBlciBmb3Igc2V0dGluZyBwcm9wZXJ0aWVzIG9uIGNvbXBvbmVudHNcbi8vIGluIGEgdHJlZS1zaGFrYWJsZSB3YXlcbmV4cG9ydHMuZGVmYXVsdCA9IChzZmMsIHByb3BzKSA9PiB7XG4gICAgY29uc3QgdGFyZ2V0ID0gc2ZjLl9fdmNjT3B0cyB8fCBzZmM7XG4gICAgZm9yIChjb25zdCBba2V5LCB2YWxdIG9mIHByb3BzKSB7XG4gICAgICAgIHRhcmdldFtrZXldID0gdmFsO1xuICAgIH1cbiAgICByZXR1cm4gdGFyZ2V0O1xufTtcbiIsImltcG9ydCAqIGFzIFZ1ZSBmcm9tICd2dWUnXG5cbnZhciBpc1Z1ZTIgPSBmYWxzZVxudmFyIGlzVnVlMyA9IHRydWVcbnZhciBWdWUyID0gdW5kZWZpbmVkXG5cbmZ1bmN0aW9uIGluc3RhbGwoKSB7fVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0KHRhcmdldCwga2V5LCB2YWwpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSkge1xuICAgIHRhcmdldC5sZW5ndGggPSBNYXRoLm1heCh0YXJnZXQubGVuZ3RoLCBrZXkpXG4gICAgdGFyZ2V0LnNwbGljZShrZXksIDEsIHZhbClcbiAgICByZXR1cm4gdmFsXG4gIH1cbiAgdGFyZ2V0W2tleV0gPSB2YWxcbiAgcmV0dXJuIHZhbFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVsKHRhcmdldCwga2V5KSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkpIHtcbiAgICB0YXJnZXQuc3BsaWNlKGtleSwgMSlcbiAgICByZXR1cm5cbiAgfVxuICBkZWxldGUgdGFyZ2V0W2tleV1cbn1cblxuZXhwb3J0ICogZnJvbSAndnVlJ1xuZXhwb3J0IHtcbiAgVnVlLFxuICBWdWUyLFxuICBpc1Z1ZTIsXG4gIGlzVnVlMyxcbiAgaW5zdGFsbCxcbn1cbiIsImltcG9ydCAqIGFzIFZ1ZSBmcm9tICd2dWUnXG5cbnZhciBpc1Z1ZTIgPSBmYWxzZVxudmFyIGlzVnVlMyA9IHRydWVcbnZhciBWdWUyID0gdW5kZWZpbmVkXG5cbmZ1bmN0aW9uIGluc3RhbGwoKSB7fVxuXG5leHBvcnQgZnVuY3Rpb24gc2V0KHRhcmdldCwga2V5LCB2YWwpIHtcbiAgaWYgKEFycmF5LmlzQXJyYXkodGFyZ2V0KSkge1xuICAgIHRhcmdldC5sZW5ndGggPSBNYXRoLm1heCh0YXJnZXQubGVuZ3RoLCBrZXkpXG4gICAgdGFyZ2V0LnNwbGljZShrZXksIDEsIHZhbClcbiAgICByZXR1cm4gdmFsXG4gIH1cbiAgdGFyZ2V0W2tleV0gPSB2YWxcbiAgcmV0dXJuIHZhbFxufVxuXG5leHBvcnQgZnVuY3Rpb24gZGVsKHRhcmdldCwga2V5KSB7XG4gIGlmIChBcnJheS5pc0FycmF5KHRhcmdldCkpIHtcbiAgICB0YXJnZXQuc3BsaWNlKGtleSwgMSlcbiAgICByZXR1cm5cbiAgfVxuICBkZWxldGUgdGFyZ2V0W2tleV1cbn1cblxuZXhwb3J0ICogZnJvbSAndnVlJ1xuZXhwb3J0IHtcbiAgVnVlLFxuICBWdWUyLFxuICBpc1Z1ZTIsXG4gIGlzVnVlMyxcbiAgaW5zdGFsbCxcbn1cbiJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==